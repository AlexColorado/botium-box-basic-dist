!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("util"),require("path"),require("slugify"),require("botium-core/src/scripting/Constants"),require("botium-core/src/Source"),require("botium-core/src/repos/GitRepo"),require("botium-core/src/Capabilities"),require("intercept-stdout"),require("lodash"),require("botium-core"),require("debug"),require("dotenv-flow"),require("os"),require("kue")):"function"==typeof define&&define.amd?define(["util","path","slugify","botium-core/src/scripting/Constants","botium-core/src/Source","botium-core/src/repos/GitRepo","botium-core/src/Capabilities","intercept-stdout","lodash","botium-core","debug","dotenv-flow","os","kue"],t):e.main=t(e.util,e.path,e.slugify,e.Constants,e.Source,e.GitRepo,e.Capabilities,e.interceptStdout,e.lodash,e.botiumCore,e.debug,e.dotenvFlow,e.os,e.kue)}(this,function(e,t,s,o,r,n,a,i,c,l,u,p,T,d){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e,t=t&&t.hasOwnProperty("default")?t.default:t,s=s&&s.hasOwnProperty("default")?s.default:s,o=o&&o.hasOwnProperty("default")?o.default:o,r=r&&r.hasOwnProperty("default")?r.default:r,n=n&&n.hasOwnProperty("default")?n.default:n,a=a&&a.hasOwnProperty("default")?a.default:a,i=i&&i.hasOwnProperty("default")?i.default:i,c=c&&c.hasOwnProperty("default")?c.default:c,l=l&&l.hasOwnProperty("default")?l.default:l,u=u&&u.hasOwnProperty("default")?u.default:u,p=p&&p.hasOwnProperty("default")?p.default:p,T=T&&T.hasOwnProperty("default")?T.default:T,d=d&&d.hasOwnProperty("default")?d.default:d;const S={buildTarget:"COMMUNITY EDITION",buildBranch:"release/1.4.0",buildRevision:"4a101e74173a039d425bc70ede3542288cef1897",buildDate:"2019-03-31T22:00:10+02:00"};var g=()=>{console.log("BOTIUM BOX - AGENT"),console.log(`BUILD_TARGET: ${S.buildTarget}`),console.log(`BUILD_BRANCH: ${S.buildBranch}`),console.log(`BUILD_REVISION: ${S.buildRevision}`),console.log(`BUILD_TIMESTAMP: ${S.buildDate}`)};const E=u("botium-retrieve-all-test-cases");const m=l.BotDriver,f=u("botium-box-worker-runtestcases"),h={};var O=(t,{id:s,data:r},n)=>{const{testSessionId:l,testSessionName:u,testSessionJobId:p}=r;let T=!1;((e,t)=>{h[e]||(h[e]=[]),h[e].push(t)})(l,()=>{T=!0});const d={unhook:null},S=()=>{d.unhook&&(d.unhook(),d.unhook=null)};return new Promise((g,h)=>{d.unhook=i(e=>{const t=e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");return n("process.log",{testSessionId:l,testSessionName:u,testSessionJobId:p,log:t}),e}),f(`Started processing, JobId #${s}.`);const O={};t.botium&&t.botium.Capabilities&&Object.assign(O,t.botium.Capabilities),r.botium&&r.botium.Capabilities&&Object.assign(O,r.botium.Capabilities);const I={};t.botium&&t.botium.Sources&&Object.assign(I,t.botium.Sources),r.botium&&r.botium.Sources&&Object.assign(I,r.botium.Sources);const b={};t.botium&&t.botium.Envs&&Object.assign(b,t.botium.Envs),r.botium&&r.botium.Envs&&Object.assign(b,r.botium.Envs);const R=new m(O,I,b),C=R.BuildFluent();C.compiler=R.BuildCompiler(),R._validate().then(()=>new Promise((t,s)=>{Promise.all(r.testSets.map(t=>((t,s,r,n)=>{t.convos&&t.convos.forEach(r=>{let n=[];try{r.format===o.SCRIPTING_FORMAT_TXT&&(n=s.Compile(r.content,o.SCRIPTING_FORMAT_TXT,o.SCRIPTING_TYPE_CONVO)),n&&n.forEach(e=>{e.sourceTag=r.sourceTag})}catch(s){throw E(s),new Error(`${t.name}: Convo Script compilation failed: ${e.inspect(s)}`)}}),t.pconvos&&t.pconvos.forEach(r=>{let n=[];try{r.format===o.SCRIPTING_FORMAT_TXT&&(n=s.Compile(r.content,o.SCRIPTING_FORMAT_TXT,o.SCRIPTING_TYPE_PCONVO)),n&&n.forEach(e=>{e.sourceTag=r.sourceTag})}catch(s){throw E(s),new Error(`${t.name}: Partial Convo Script compilation failed: ${e.inspect(s)}`)}}),t.utterances&&t.utterances.forEach(r=>{let n=[];try{r.format===o.SCRIPTING_FORMAT_TXT&&(n=s.Compile(r.content,o.SCRIPTING_FORMAT_TXT,o.SCRIPTING_TYPE_UTTERANCES)),n&&n.forEach(e=>{e.sourceTag=r.sourceTag})}catch(s){throw E(s),new Error(`${t.name}: Utterance script compilation failed: ${e.inspect(s)}`)}}),t.folders&&t.folders.forEach(o=>{try{const{convos:r,pconvos:n,utterances:a}=s.ReadScriptsFromDirectory(o.path,o.globFilter);r&&r.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,o.sourceTag)}),n&&n.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,o.sourceTag)}),a&&a.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,o.sourceTag)})}catch(s){throw E(s),new Error(`${t.name}: Folder ${o} script compilation failed: ${e.inspect(s)}`)}});let i=Promise.resolve();t.excels&&t.excels.length>0&&(i=Promise.all(t.excels.map(({id:e,filename:t,filecontent:r,hasConvos:n,hasPartialConvos:i,hasUtterances:c,worksheetsConvos:l,worksheetsPartialConvos:u,worksheetsUtterances:p,startRow:T,startCol:d,sourceTag:S})=>new Promise(e=>{const t=Buffer.from(r,"base64");let g=[],E=[],m=[];n&&(l&&(s.caps[a.SCRIPTING_XLSX_SHEETNAMES]=l),isNaN(T)||(s.caps[a.SCRIPTING_XLSX_STARTROW]=T),isNaN(d)||(s.caps[a.SCRIPTING_XLSX_STARTCOL]=d),g=s.Compile(t,o.SCRIPTING_FORMAT_XSLX,o.SCRIPTING_TYPE_CONVO)),i&&(u&&(s.caps[a.SCRIPTING_XLSX_SHEETNAMES_PCONVOS]=u),isNaN(T)||(s.caps[a.SCRIPTING_XLSX_STARTROW]=T),isNaN(d)||(s.caps[a.SCRIPTING_XLSX_STARTCOL]=d),E=s.Compile(t,o.SCRIPTING_FORMAT_XSLX,o.SCRIPTING_TYPE_PCONVO)),c&&(p&&(s.caps[a.SCRIPTING_XLSX_SHEETNAMES_UTTERANCES]=p),isNaN(T)||(s.caps[a.SCRIPTING_XLSX_STARTROW]=T),isNaN(d)||(s.caps[a.SCRIPTING_XLSX_STARTCOL]=d),m=s.Compile(t,o.SCRIPTING_FORMAT_XSLX,o.SCRIPTING_TYPE_UTTERANCES)),g&&g.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,S)}),E&&E.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,S)}),m&&m.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,S)}),e()}))));let c=Promise.resolve();return Promise.all([c,i])})(t,C.compiler,R.tempDirectory,R.sources))).then(()=>{if(r.testSets.filter(e=>e.expandConvos).length>0&&(f("expanding convos ..."),C.compiler.ExpandConvos()),r.testSets.filter(e=>e.expandUtterancesToConvos).length>0){const t=c.uniq(r.testSets.filter(e=>e.expandUtterancesToConvos&&e.expandUtterancesIncomprehension).map(e=>e.expandUtterancesIncomprehension));if(t&&t.length>1)throw new Error(`expanding utterances to convos not possible, found multiple INCOMPREHENSION utterances: ${e.inspect(t)} ...`);f("expanding utterances to convos ..."),t&&t.length>0&&(C.compiler.caps[a.SCRIPTING_UTTEXPANSION_INCOMPREHENSION]=t[0]),C.compiler.ExpandUtterancesToConvos(),C.compiler.ExpandConvos()}return f(`found ${C.compiler.convos.length} convos ...`),C.compiler.convos}).then(e=>{t(e.reduce((e,t)=>e.concat(t),[]))}).catch(s)})).then(()=>{C.compiler.ExpandConvos();const e=r.batchNum||1,t=r.batchCount||1,s=Math.ceil(C.compiler.convos.length/t),o=s*(e-1),a=Math.min(o+s,C.compiler.convos.length)-1,i=a-o+1,c={batchNum:e,totalCount:0,failedCount:0,successCount:0};f(`batchNum: ${e} batchCount: ${t} convosPerBatch: ${s} batchStart: ${o} batchEnd: ${a} batchLength: ${i}`);for(let t=o;t<=a;t++){const r=t,d=C.compiler.convos[r];let S=null;const g=[],E=(e,t)=>{t.attachments&&g.push(...t.attachments)},m=(e,t)=>{t.attachments&&g.push(...t.attachments)},h=(e,t)=>{g.push(t)},O=(e,t)=>{t&&(d.sourceTag=Object.assign({},d.sourceTag,t))},I=()=>{R.eventEmitter.removeListener("MESSAGE_SENTTOBOT",E),R.eventEmitter.removeListener("MESSAGE_RECEIVEDFROMBOT",m),R.eventEmitter.removeListener("MESSAGE_ATTACHMENT",h),R.eventEmitter.removeListener("CONTAINER_STARTED",O)},b=()=>{R.on("MESSAGE_SENTTOBOT",E),R.on("MESSAGE_RECEIVEDFROMBOT",m),R.on("MESSAGE_ATTACHMENT",h),R.on("CONTAINER_STARTED",O)};let _=null;C.Call(()=>{if(T)throw new Error("Test Session cancelled")}),C.Call(b).Start(),C.Call(()=>new Promise(e=>{if(!T)return f(`Running Convo "${d.header.name}", Index ${r}, ${r-o+1} from ${i}`),d.Run(C.container).then(t=>{f(`Running Convo "${d.header.name}" completed successfully.`),S=t,e()}).catch(t=>{f(`Running Convo "${d.header.name}" failed: ${t}.`),S=t.transcript,_=t,e()});f(`Test Session cancelled, skipping Convo "${d.header.name}", Index ${r}, ${r-o} from ${s}`),e()})),C.Stop().Call(I),C.Call(()=>{if(T)throw new Error("Test Session cancelled")}),C.Call(()=>new Promise((t,E)=>{if(T)return t();S&&(S.err=S.err?S.err.message?S.err.message:JSON.stringify(S.err):null,S.steps&&S.steps.forEach(e=>{e.err=e.err?e.err.message?e.err.message:JSON.stringify(e.err):null})),c.totalCount++,_?c.failedCount++:c.successCount++,n("process.progress",{testSessionId:l,testSessionName:u,testSessionJobId:p,currentBatchIndex:r,batchNum:e,batchStart:o,batchEnd:a,batchLength:i,convosPerBatch:s,progress:Math.round((r-o+1)/i*100),testcase:d.header.name,source:d.toString(),sourceTag:d.sourceTag,transcript:S,attachments:g,success:null===_,err:_?_.message?_.message:JSON.stringify(_):null}).on("complete",t).on("failed",e=>{E(new Error(`process.progress finally failed after retry attempts: ${e}, decr redis counter`))})}))}C.Clean(),C.Call(()=>S()),C.Exec().then(()=>g(c)).catch(e=>{f(`Test Session Run failed (${e}), doing additional BotDriver Clean.`),C.Clean().Exec().catch(e=>f(e)).then(()=>S()).then(()=>{e.result=c,h(e)})})}).catch(h)})},I=(e,t)=>{h[e]&&(h[e].forEach(e=>e()),delete h[e])};p.config(),g();const b=u("botium-box-worker"),R=(()=>{if(process.env.BOTIUMBOX_AGENT_NAME)return process.env.BOTIUMBOX_AGENT_NAME;const e=T.hostname();return e&&process.env.hasOwnProperty("BOTIUMBOX_AGENT_NUM")?`${e}_${process.env.BOTIUMBOX_AGENT_NUM}`:e||"Default Agent"})(),C=process.env.BOTIUMBOX_AGENT_GROUP||"Default Group";b(`Connecting agent ${R} to group ${C} ...`);let _={};if(process.env.BOTIUMBOX_QUEUE_SETTINGS)try{_=JSON.parse(process.env.BOTIUMBOX_QUEUE_SETTINGS),b(`Got queue settings '${JSON.stringify(_)}'`)}catch(e){console.log(`ERROR parsing queue settings '${process.env.BOTIUMBOX_QUEUE_SETTINGS}':`),console.log(e),process.exit(1)}else process.env.BOTIUMBOX_QUEUE_PREFIX&&(_.prefix=process.env.BOTIUMBOX_QUEUE_PREFIX),process.env.BOTIUMBOX_QUEUE_REDISURL&&(_.redis=process.env.BOTIUMBOX_QUEUE_REDISURL);b(`connecting to Botium queue '${JSON.stringify(_)}'`);const N=process.env.hasOwnProperty("BOTIUMBOX_QUEUE_PROGRESS_RETRY_ATTEMPTS")?process.env.BOTIUMBOX_QUEUE_PROGRESS_RETRY_ATTEMPTS:5,P=process.env.hasOwnProperty("BOTIUMBOX_QUEUE_PROGRESS_RETRY_DELAY")?process.env.BOTIUMBOX_QUEUE_PROGRESS_RETRY_DELAY:1e4;b(`Using job progress retryAttempts: ${N}, retryDelay: ${P}`);const v=process.env.BOTIUMBOX_QUEUE_CONCURRENCY||1;let $=process.env.BOTIUMBOX_QUEUE_HEARTBEAT||3e5;$>0&&$<5e3&&($=5e3);const U=d.createQueue(_);U.on("error",e=>{console.log(`ERROR connecting to queue '${JSON.stringify(_)}':`),console.log(e),process.exit(1)});const B=(e,t)=>U.create(e,t).removeOnComplete(!0).save(),y=(e,t)=>U.create(e,t).attempts(N).backoff({delay:P,type:"fixed"}).removeOnComplete(!0).save();b("Trying to register agent ..."),B("agent.register",{title:`register agent ${R} to group ${C}`,name:R,group:C}).on("failed",e=>{console.log("ERROR registering agent:"),console.log(e),process.exit(1)}).on("complete",e=>{b(`Registration completed with result '${JSON.stringify(e)}', now accepting processing jobs (concurrency ${v}).`);let t=e;const s=(e,s)=>{const{testSessionId:o,testSessionName:r,testSessionJobId:n}=e.data;if(!o||!n)return s(new Error(`Processing Job ${e.id} failed, no testSessionId or testSessionJobId given.`));b(`Processing Job ${e.id} for Test Session ${o}/${r}, Job ${n}`);try{O(t,e,y).then(t=>{b(`Processing Job ${e.id} finished with result:`),t&&b(t),s(null,t),y("process.ready.success",{title:`Processing Job ${e.id} for Test Session ${o}/${r} ready`,testSessionId:o,testSessionName:r,testSessionJobId:n,jobId:e.id,result:t})}).catch(t=>{b(`Processing Job ${e.id} failed:`),b(t),s(t),y("process.ready.failed",{title:`Processing Job ${e.id} for Test Session ${o}/${r} failed`,testSessionId:o,testSessionName:r,testSessionJobId:n,jobId:e.id,result:t.result,err:`${t}`})})}catch(t){b(`Processing Job ${e.id} failed:`),b(t),s(t),y("process.ready.failed",{title:`Processing Job ${e.id} for Test Session ${o}/${r} failed`,testSessionId:o,testSessionName:r,testSessionJobId:n,jobId:e.id,err:t})}};if(U.process(`process.run.${C}`,v,s),U.process(`process.run.${R}`,v,s),U.process("process.run",v,s),U.process(`process.cancel.${R}`,v,(e,t)=>{if(!e.data||!e.data.testSessionId)return[b,t].forEach(e=>e("Cancel Test Session event received, but no testSessionId given"));b(`Canceling Test Session ${e.data.testSessionId}/${e.data.testSessionName}`);try{I(e.data.testSessionId,e),b(`Canceling Test Session ${e.data.testSessionId}/${e.data.testSessionName} finished.`),t()}catch(s){b(`Canceling Test Session Job ${e.data.testSessionId}/${e.data.testSessionName} failed:`),b(s),t(s)}}),U.process(`agent.reconfigure.${R}`,v,(e,s)=>{b("Trying to reconfigure agent ..."),B("agent.register",{title:`reconfigure agent ${R} for group ${C}`,name:R,group:C}).on("failed",e=>{b("ERROR reconfiguring agent:"),b(e)}).on("complete",e=>{b(`Reconfiguration completed with result '${JSON.stringify(e)}'.`),t=e})}),$>0){const e=()=>{b("sending heartbeat ..."),B("agent.heartbeat",{title:`heartbeat from agent ${R} for group ${C}`,name:R,group:C}).on("complete",()=>{setTimeout(e,$)})};e()}}),process.on("uncaughtException",e=>{console.log("Got an uncaughtException",e)});return{}});
