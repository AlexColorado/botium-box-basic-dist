!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("util"),require("path"),require("slugify"),require("nodegit"),require("botium-core/src/scripting/Constants"),require("botium-core/src/Capabilities"),require("intercept-stdout"),require("lodash"),require("botium-core"),require("debug"),require("dotenv-flow"),require("os"),require("kue")):"function"==typeof define&&define.amd?define(["util","path","slugify","nodegit","botium-core/src/scripting/Constants","botium-core/src/Capabilities","intercept-stdout","lodash","botium-core","debug","dotenv-flow","os","kue"],t):e.main=t(e.util,e.path,e.slugify,e.nodegit,e.Constants,e.Capabilities,e.interceptStdout,e.lodash,e.botiumCore,e.debug,e.dotenvFlow,e.os,e.kue)}(this,function(e,t,s,o,n,r,a,i,c,l,u,T,p){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e,t=t&&t.hasOwnProperty("default")?t.default:t,s=s&&s.hasOwnProperty("default")?s.default:s,o=o&&o.hasOwnProperty("default")?o.default:o,n=n&&n.hasOwnProperty("default")?n.default:n,r=r&&r.hasOwnProperty("default")?r.default:r,a=a&&a.hasOwnProperty("default")?a.default:a,i=i&&i.hasOwnProperty("default")?i.default:i,c=c&&c.hasOwnProperty("default")?c.default:c,l=l&&l.hasOwnProperty("default")?l.default:l,u=u&&u.hasOwnProperty("default")?u.default:u,T=T&&T.hasOwnProperty("default")?T.default:T,p=p&&p.hasOwnProperty("default")?p.default:p;const d={buildTarget:"COMMUNITY EDITION",buildBranch:"release/1.5.0",buildRevision:"804bc48283f032437a9470a6ccbe9669f08344ad",buildDate:"2019-04-27T09:53:07+02:00"};var g=()=>{console.log("BOTIUM BOX - AGENT"),console.log(`BUILD_TARGET: ${d.buildTarget}`),console.log(`BUILD_BRANCH: ${d.buildBranch}`),console.log(`BUILD_REVISION: ${d.buildRevision}`),console.log(`BUILD_TIMESTAMP: ${d.buildDate}`)};const S=l("botium-retrieve-all-test-cases");const E=c.BotDriver,m=l("botium-box-worker-runtestcases"),f={};var h=(t,{id:s,data:o},c)=>{const{testSessionId:l,testSessionName:u,testSessionJobId:T}=o;let p=!1;((e,t)=>{f[e]||(f[e]=[]),f[e].push(t)})(l,()=>{p=!0});const d={unhook:null},g=()=>{d.unhook&&(d.unhook(),d.unhook=null)};return new Promise((f,h)=>{d.unhook=a(e=>{if(t.debug){const t=e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");c("process.log",{testSessionId:l,testSessionName:u,testSessionJobId:T,log:t})}return e}),m(`Started processing, JobId #${s}.`);const O={};t.botium&&t.botium.Capabilities&&Object.assign(O,t.botium.Capabilities),o.botium&&o.botium.Capabilities&&Object.assign(O,o.botium.Capabilities);const I={};t.botium&&t.botium.Sources&&Object.assign(I,t.botium.Sources),o.botium&&o.botium.Sources&&Object.assign(I,o.botium.Sources);const _={};t.botium&&t.botium.Envs&&Object.assign(_,t.botium.Envs),o.botium&&o.botium.Envs&&Object.assign(_,o.botium.Envs);const C=new E(O,I,_),R=C.BuildFluent();R.compiler=C.BuildCompiler(),C._validate().then(()=>new Promise((t,s)=>{Promise.all(o.testSets.map(t=>((t,s,o,a)=>{t.convos&&t.convos.forEach(o=>{let r=[];try{o.format===n.SCRIPTING_FORMAT_TXT&&(r=s.Compile(o.content,n.SCRIPTING_FORMAT_TXT,n.SCRIPTING_TYPE_CONVO)),r&&r.forEach(e=>{e.sourceTag=o.sourceTag})}catch(s){throw S(s),new Error(`${t.name}: Convo Script compilation failed: ${e.inspect(s)}`)}}),t.pconvos&&t.pconvos.forEach(o=>{let r=[];try{o.format===n.SCRIPTING_FORMAT_TXT&&(r=s.Compile(o.content,n.SCRIPTING_FORMAT_TXT,n.SCRIPTING_TYPE_PCONVO)),r&&r.forEach(e=>{e.sourceTag=o.sourceTag})}catch(s){throw S(s),new Error(`${t.name}: Partial Convo Script compilation failed: ${e.inspect(s)}`)}}),t.utterances&&t.utterances.forEach(o=>{let r=[];try{o.format===n.SCRIPTING_FORMAT_TXT&&(r=s.Compile(o.content,n.SCRIPTING_FORMAT_TXT,n.SCRIPTING_TYPE_UTTERANCES)),r&&r.forEach(e=>{e.sourceTag=o.sourceTag})}catch(s){throw S(s),new Error(`${t.name}: Utterance script compilation failed: ${e.inspect(s)}`)}}),t.scriptingMemories&&t.scriptingMemories.forEach(o=>{let r=[];try{o.format===n.SCRIPTING_FORMAT_TXT&&(r=s.Compile(o.content,n.SCRIPTING_FORMAT_TXT,n.SCRIPTING_TYPE_SCRIPTING_MEMORY)),r&&r.forEach(e=>{e.sourceTag=o.sourceTag})}catch(s){throw S(s),new Error(`${t.name}: Scripting Memory script compilation failed: ${e.inspect(s)}`)}}),t.folders&&t.folders.forEach(o=>{try{const{convos:n,pconvos:r,utterances:a}=s.ReadScriptsFromDirectory(o.path,o.globFilter);n&&n.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,o.sourceTag)}),r&&r.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,o.sourceTag)}),a&&a.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,o.sourceTag)})}catch(s){throw S(s),new Error(`${t.name}: Folder ${o} script compilation failed: ${e.inspect(s)}`)}});let i=Promise.resolve();t.excels&&t.excels.length>0&&(i=Promise.all(t.excels.map(({id:e,filename:t,filecontent:o,hasConvos:a,hasPartialConvos:i,hasUtterances:c,worksheetsConvos:l,worksheetsPartialConvos:u,worksheetsUtterances:T,startRow:p,startCol:d,sourceTag:g})=>new Promise(e=>{const t=Buffer.from(o,"base64");let S=[],E=[],m=[];a&&(l&&(s.caps[r.SCRIPTING_XLSX_SHEETNAMES]=l),isNaN(p)||(s.caps[r.SCRIPTING_XLSX_STARTROW]=p),isNaN(d)||(s.caps[r.SCRIPTING_XLSX_STARTCOL]=d),S=s.Compile(t,n.SCRIPTING_FORMAT_XSLX,n.SCRIPTING_TYPE_CONVO)),i&&(u&&(s.caps[r.SCRIPTING_XLSX_SHEETNAMES_PCONVOS]=u),isNaN(p)||(s.caps[r.SCRIPTING_XLSX_STARTROW]=p),isNaN(d)||(s.caps[r.SCRIPTING_XLSX_STARTCOL]=d),E=s.Compile(t,n.SCRIPTING_FORMAT_XSLX,n.SCRIPTING_TYPE_PCONVO)),c&&(T&&(s.caps[r.SCRIPTING_XLSX_SHEETNAMES_UTTERANCES]=T),isNaN(p)||(s.caps[r.SCRIPTING_XLSX_STARTROW]=p),isNaN(d)||(s.caps[r.SCRIPTING_XLSX_STARTCOL]=d),m=s.Compile(t,n.SCRIPTING_FORMAT_XSLX,n.SCRIPTING_TYPE_UTTERANCES)),S&&S.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,g)}),E&&E.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,g)}),m&&m.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,g)}),e()}))));let c=Promise.resolve();return Promise.all([c,i])})(t,R.compiler,C.tempDirectory,C.sources))).then(()=>{const t=o.testSets.filter(e=>e.expandConvos).length>0,s=o.testSets.filter(e=>e.expandUtterancesToConvos).length>0,n=o.testSets.filter(e=>e.expandScriptingMemory).length>0;if(s){const t=i.uniq(o.testSets.filter(e=>e.expandUtterancesToConvos&&e.expandUtterancesIncomprehension).map(e=>e.expandUtterancesIncomprehension));if(t&&t.length>1)throw new Error(`expanding utterances to convos not possible, found multiple INCOMPREHENSION utterances: ${e.inspect(t)} ...`);m("expanding utterances to convos ..."),t&&t.length>0&&(R.compiler.caps[r.SCRIPTING_UTTEXPANSION_INCOMPREHENSION]=t[0]),R.compiler.ExpandUtterancesToConvos()}return n&&(m("expanding scripting memories to convos ..."),R.compiler.ExpandScriptingMemoryToConvos(),R.compiler.ExpandConvos()),(t||s||n)&&(m("expanding convos ..."),R.compiler.ExpandConvos()),m(`found ${R.compiler.convos.length} convos ...`),R.compiler.convos}).then(e=>{t(e.reduce((e,t)=>e.concat(t),[]))}).catch(s)})).then(()=>{R.compiler.ExpandConvos();const e=o.batchNum||1,t=o.batchCount||1,s=Math.ceil(R.compiler.convos.length/t),n=s*(e-1),r=Math.min(n+s,R.compiler.convos.length)-1,a=r-n+1,i={batchNum:e,totalCount:0,failedCount:0,successCount:0};m(`batchNum: ${e} batchCount: ${t} convosPerBatch: ${s} batchStart: ${n} batchEnd: ${r} batchLength: ${a}`);for(let t=n;t<=r;t++){const o=t,d=R.compiler.convos[o];let g=null;const S=[],E=(e,t)=>{t.attachments&&S.push(...t.attachments)},f=(e,t)=>{t.attachments&&S.push(...t.attachments)},h=(e,t)=>{S.push(t)},O=(e,t)=>{t&&(d.sourceTag=Object.assign({},d.sourceTag,t))},I=()=>{C.eventEmitter.removeListener("MESSAGE_SENTTOBOT",E),C.eventEmitter.removeListener("MESSAGE_RECEIVEDFROMBOT",f),C.eventEmitter.removeListener("MESSAGE_ATTACHMENT",h),C.eventEmitter.removeListener("CONTAINER_STARTED",O)},_=()=>{C.on("MESSAGE_SENTTOBOT",E),C.on("MESSAGE_RECEIVEDFROMBOT",f),C.on("MESSAGE_ATTACHMENT",h),C.on("CONTAINER_STARTED",O)};let b=null;R.Call(()=>{if(p)throw new Error("Test Session cancelled")}),R.Call(_).Start(),R.Call(()=>new Promise(e=>{if(!p)return m(`Running Convo "${d.header.name}", Index ${o}, ${o-n+1} from ${a}`),d.Run(R.container).then(t=>{m(`Running Convo "${d.header.name}" completed successfully.`),g=t,e()}).catch(t=>{m(`Running Convo "${d.header.name}" failed: ${t}.`),g=t.transcript,b=t,e()});m(`Test Session cancelled, skipping Convo "${d.header.name}", Index ${o}, ${o-n} from ${s}`),e()})),R.Stop().Call(I),R.Call(()=>{if(p)throw new Error("Test Session cancelled")}),R.Call(()=>new Promise((t,E)=>{if(p)return t();g&&(g.err=g.err?g.err.message?g.err.message:JSON.stringify(g.err):null,g.steps&&g.steps.forEach(e=>{e.err=e.err?e.err.message?e.err.message:JSON.stringify(e.err):null})),i.totalCount++,b?i.failedCount++:i.successCount++,c("process.progress",{testSessionId:l,testSessionName:u,testSessionJobId:T,currentBatchIndex:o,batchNum:e,batchStart:n,batchEnd:r,batchLength:a,convosPerBatch:s,progress:Math.round((o-n+1)/a*100),testcase:d.header.name,source:d.toString(),sourceTag:d.sourceTag,transcript:g,attachments:S,success:null===b,err:b?b.message?b.message:JSON.stringify(b):null}).on("complete",t).on("failed",e=>{E(new Error(`process.progress finally failed after retry attempts: ${e}, decr redis counter`))})}))}R.Clean(),R.Call(()=>g()),R.Exec().then(()=>f(i)).catch(e=>{m(`Test Session Run failed (${e}), doing additional BotDriver Clean.`),R.tasks=[],R.Clean().Exec().catch(e=>m(e)).then(()=>g()).then(()=>{e.result=i,h(e)})})}).catch(h)})},O=(e,t)=>{f[e]&&(f[e].forEach(e=>e()),delete f[e])};u.config(),g();const I=l("botium-box-worker"),_=(()=>{if(process.env.BOTIUMBOX_AGENT_NAME)return process.env.BOTIUMBOX_AGENT_NAME;const e=T.hostname();return e&&process.env.hasOwnProperty("BOTIUMBOX_AGENT_NUM")?`${e}_${process.env.BOTIUMBOX_AGENT_NUM}`:e||"Default Agent"})(),C=process.env.BOTIUMBOX_AGENT_GROUP||"Default Group";I(`Connecting agent ${_} to group ${C} ...`);let R={};if(process.env.BOTIUMBOX_QUEUE_SETTINGS)try{R=JSON.parse(process.env.BOTIUMBOX_QUEUE_SETTINGS),I(`Got queue settings '${JSON.stringify(R)}'`)}catch(e){console.log(`ERROR parsing queue settings '${process.env.BOTIUMBOX_QUEUE_SETTINGS}':`),console.log(e),process.exit(1)}else process.env.BOTIUMBOX_QUEUE_PREFIX&&(R.prefix=process.env.BOTIUMBOX_QUEUE_PREFIX),process.env.BOTIUMBOX_QUEUE_REDISURL&&(R.redis=process.env.BOTIUMBOX_QUEUE_REDISURL);I(`connecting to Botium queue '${JSON.stringify(R)}'`);const b=process.env.hasOwnProperty("BOTIUMBOX_QUEUE_PROGRESS_RETRY_ATTEMPTS")?process.env.BOTIUMBOX_QUEUE_PROGRESS_RETRY_ATTEMPTS:5,N=process.env.hasOwnProperty("BOTIUMBOX_QUEUE_PROGRESS_RETRY_DELAY")?process.env.BOTIUMBOX_QUEUE_PROGRESS_RETRY_DELAY:1e4;I(`Using job progress retryAttempts: ${b}, retryDelay: ${N}`);const P=process.env.BOTIUMBOX_QUEUE_CONCURRENCY||1;let v=process.env.BOTIUMBOX_QUEUE_HEARTBEAT||3e5;v>0&&v<5e3&&(v=5e3);const $=p.createQueue(R);$.on("error",e=>{console.log(`ERROR connecting to queue '${JSON.stringify(R)}':`),console.log(e),process.exit(1)});const U=(e,t)=>$.create(e,t).removeOnComplete(!0).save(),M=(e,t)=>$.create(e,t).attempts(b).backoff({delay:N,type:"fixed"}).removeOnComplete(!0).save();let y={};const B=e=>{y=e};I("Trying to register agent ..."),U("agent.register",{title:`register agent ${_} to group ${C}`,name:_,group:C}).on("failed",e=>{console.log("ERROR registering agent:"),console.log(e),process.exit(1)}).on("complete",e=>{I(`Registration completed with result '${JSON.stringify(e)}', now accepting processing jobs (concurrency ${P}).`),B(e);const t=(e,t)=>{const{testSessionId:s,testSessionName:o,testSessionJobId:n}=e.data;if(!s||!n)return t(new Error(`Processing Job ${e.id} failed, no testSessionId or testSessionJobId given.`));I(`Processing Job ${e.id} for Test Session ${s}/${o}, Job ${n}`);try{h(y,e,M).then(r=>{I(`Processing Job ${e.id} finished with result:`),r&&I(r),t(null,r),M("process.ready.success",{title:`Processing Job ${e.id} for Test Session ${s}/${o} ready`,testSessionId:s,testSessionName:o,testSessionJobId:n,jobId:e.id,result:r})}).catch(r=>{I(`Processing Job ${e.id} failed:`),I(r),t(r),M("process.ready.failed",{title:`Processing Job ${e.id} for Test Session ${s}/${o} failed`,testSessionId:s,testSessionName:o,testSessionJobId:n,jobId:e.id,result:r.result,err:`${r}`})})}catch(r){I(`Processing Job ${e.id} failed:`),I(r),t(r),M("process.ready.failed",{title:`Processing Job ${e.id} for Test Session ${s}/${o} failed`,testSessionId:s,testSessionName:o,testSessionJobId:n,jobId:e.id,err:r})}};if($.process(`process.run.${C}`,P,t),$.process(`process.run.${_}`,P,t),$.process("process.run",P,t),$.process(`process.cancel.${_}`,P,(e,t)=>{if(!e.data||!e.data.testSessionId)return[I,t].forEach(e=>e("Cancel Test Session event received, but no testSessionId given"));I(`Canceling Test Session ${e.data.testSessionId}/${e.data.testSessionName}`);try{O(e.data.testSessionId,e),I(`Canceling Test Session ${e.data.testSessionId}/${e.data.testSessionName} finished.`),t()}catch(s){I(`Canceling Test Session Job ${e.data.testSessionId}/${e.data.testSessionName} failed:`),I(s),t(s)}}),$.process(`agent.ping.${_}`,P,(e,t)=>{t()}),$.process(`agent.reconfigure.${_}`,P,(e,t)=>{I("Trying to reconfigure agent ..."),U("agent.register",{title:`reconfigure agent ${_} for group ${C}`,name:_,group:C}).on("failed",e=>{I("ERROR reconfiguring agent:"),I(e),t(e)}).on("complete",e=>{I(`Reconfiguration completed with result '${JSON.stringify(e)}'.`),B(e),t()})}),v>0){const e=()=>{I("sending heartbeat ..."),U("agent.heartbeat",{title:`heartbeat from agent ${_} for group ${C}`,name:_,group:C}).on("complete",()=>{setTimeout(e,v)})};e()}}),process.on("uncaughtException",e=>{console.log("Got an uncaughtException",e)});return{}});
