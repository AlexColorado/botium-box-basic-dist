!function(e,s){"object"==typeof exports&&"undefined"!=typeof module?module.exports=s(require("lodash"),require("path"),require("child_process"),require("debug"),require("dotenv-flow"),require("os"),require("kue")):"function"==typeof define&&define.amd?define(["lodash","path","child_process","debug","dotenv-flow","os","kue"],s):e.main=s(e.lodash,e.path,e.child_process,e.debug,e.dotenvFlow,e.os,e.kue)}(this,function(e,s,o,t,n,r,i){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e,s=s&&s.hasOwnProperty("default")?s.default:s,o=o&&o.hasOwnProperty("default")?o.default:o,t=t&&t.hasOwnProperty("default")?t.default:t,n=n&&n.hasOwnProperty("default")?n.default:n,r=r&&r.hasOwnProperty("default")?r.default:r,i=i&&i.hasOwnProperty("default")?i.default:i;const a={buildTarget:"COMMUNITY EDITION",buildBranch:"release/1.7.1",buildRevision:"b7959b787447b44e6bbae41c37afa665daafe2f0",buildDate:"2019-06-23T21:45:25+02:00"};var c=()=>{console.log("BOTIUM BOX - AGENT"),console.log(`BUILD_TARGET: ${a.buildTarget}`),console.log(`BUILD_BRANCH: ${a.buildBranch}`),console.log(`BUILD_REVISION: ${a.buildRevision}`),console.log(`BUILD_TIMESTAMP: ${a.buildDate}`),console.log(`BOTIUMBOX_QUEUE_REDISURL: ${process.env.BOTIUMBOX_QUEUE_REDISURL}`)},d={prepareConvos:(e,s,o)=>{const t=e.testSets.filter(e=>e.expandConvos).length>0,n=e.testSets.filter(e=>e.expandUtterancesToConvos).length>0,r=e.testSets.filter(e=>e.expandScriptingMemory).length>0;return n&&(o("expanding utterances to convos ..."),s.compiler.ExpandUtterancesToConvos()),r&&(o("expanding scripting memories to convos ..."),s.compiler.ExpandScriptingMemoryToConvos()),(t||n||r)&&(o("expanding convos ..."),s.compiler.ExpandConvos()),o(`found ${s.compiler.convos.length} convos ...`),s.compiler.convos},merge:(s,o,t)=>{const n={};s.botium&&s.botium.Capabilities&&Object.assign(n,s.botium.Capabilities),o.botium&&o.botium.Capabilities&&Object.assign(n,o.botium.Capabilities);const r={};s.botium&&s.botium.Sources&&Object.assign(r,s.botium.Sources),o.botium&&o.botium.Sources&&Object.assign(r,o.botium.Sources);const i=t?e.cloneDeep(process.env):{};return s.botium&&s.botium.Envs&&Object.assign(i,s.botium.Envs),o.botium&&o.botium.Envs&&Object.assign(i,o.botium.Envs),{caps:n,sources:r,envs:i}},MESSAGE_TYPE:{CANCEL:"CANCEL",STOP:"STOP",CREATE_JOB:"CREATE_JOB",CREATE_JOB_COMPLETE:"CREATE_JOB_COMPLETE",CREATE_JOB_FAILED:"CREATE_JOB_FAILED",RESULT:"RESULT",LOG:"LOG"}};const p=o.fork,l=t("botium-box-worker-runtestcases-main"),u=t("botium-box-worker-runtestcases-main-worker"),{merge:E,MESSAGE_TYPE:f}=d,g={},S=(e,s)=>{g[e]&&g[e].forEach(e=>{e.send(s)})},T=(e,s)=>{e.send(s)};var m=(e,{id:o,data:t},n)=>new Promise((r,i)=>{const{envs:a}=E(e,t,!0);t.botium.Capabilities.ZAP_PROXY&&(a.http_proxy=t.botium.Capabilities.ZAP_PROXY,a.https_proxy=t.botium.Capabilities.ZAP_PROXY);const c=p(s.resolve(__dirname,process.env.BOTIUMBOX_AGENT_WORKER_FILE||"runtestcasesWorker.js"),[JSON.stringify({agentConfig:e,jobId:o,data:t})],{env:a,execArgv:["--inspect=0"]}),d=t.testSessionId;let S;g[d]||(g[d]=new Set),g[d].add(c),c.on("message",({type:e,message:s,requestId:o})=>{e===f.CREATE_JOB?n(s).on("complete",()=>{T(c,{type:f.CREATE_JOB_COMPLETE,requestId:o})}).on("failed",e=>{i(new Error(`process.progress finally failed after retry attempts: ${e}, decr redis counter`)),T(c,{type:f.CREATE_JOB_FAILED,requestId:o})}):e===f.RESULT?S=s:e===f.LOG?u(s):l(`Unknown message type ${JSON.stringify(e)}`)}),c.on("exit",e=>(l(`worker for job ${o} exited with code ${e}`),g[d].delete(c),0===g[d].length&&delete g[d],0===e?S?r(S):i(new Error("Worker finished succesful but without result")):i(new Error("Worker finished with error"))))}),O=e=>{S(e,{type:f.CANCEL})},b=e=>{S(e,{type:f.STOP})};const I=o.fork,_=t("botium-box-worker-runperformancetestcases"),$=t("botium-box-worker-runperformancetestcases-worker"),{merge:U,MESSAGE_TYPE:R}=d,v={},y=(e,s)=>{e.send(s)};var B=(e,{id:o,data:t},n)=>new Promise((r,i)=>{const{envs:a}=U(e,t,!0),c=I(s.resolve(__dirname,process.env.BOTIUMBOX_AGENT_PERFORMANCE_WORKER_FILE||"runPerformanceTestcasesWorker.js"),[JSON.stringify({agentConfig:e,jobId:o,data:t})],{env:a,execArgv:["--inspect=0"]}),d=t.performanceTestSessionId;v[d]||(v[d]=new Set),v[d].add(c),c.on("message",({type:e,message:s,requestId:o})=>{e===R.CREATE_JOB?n(s).on("complete",()=>{y(c,{type:R.CREATE_JOB_COMPLETE,requestId:o})}).on("failed",e=>{i(new Error(`performanceprocess.progress finally failed after retry attempts: ${e}, decr redis counter`)),y(c,{type:R.CREATE_JOB_FAILED,requestId:o})}):e===R.LOG?$(s):_(`Unknown message type ${JSON.stringify(e)}`)}),c.on("exit",e=>(_(`worker for job ${o} exited with code ${e}`),v[d].delete(c),0===v[d].length&&delete v[d],0===e?r():i(new Error("Worker finished with error"))))}),h=e=>{((e,s)=>{v[e]&&v[e].forEach(e=>{e.send(s)})})(e,{type:R.CANCEL})};n.config(),c();const C=t("botium-box-worker"),P=(()=>{if(process.env.BOTIUMBOX_AGENT_NAME)return process.env.BOTIUMBOX_AGENT_NAME;const e=r.hostname();return e&&process.env.hasOwnProperty("BOTIUMBOX_AGENT_NUM")?`${e}_${process.env.BOTIUMBOX_AGENT_NUM}`:e||"Default Agent"})(),N=process.env.BOTIUMBOX_AGENT_GROUP||"Default Group";C(`Connecting agent ${P} to group ${N} ...`);let J={};if(process.env.BOTIUMBOX_QUEUE_SETTINGS)try{J=JSON.parse(process.env.BOTIUMBOX_QUEUE_SETTINGS),C(`Got queue settings '${JSON.stringify(J)}'`)}catch(e){console.log(`ERROR parsing queue settings '${process.env.BOTIUMBOX_QUEUE_SETTINGS}':`),console.log(e),process.exit(1)}else process.env.BOTIUMBOX_QUEUE_PREFIX&&(J.prefix=process.env.BOTIUMBOX_QUEUE_PREFIX),process.env.BOTIUMBOX_QUEUE_REDISURL&&(J.redis=process.env.BOTIUMBOX_QUEUE_REDISURL);C(`connecting to Botium queue '${JSON.stringify(J)}'`);const A=process.env.hasOwnProperty("BOTIUMBOX_QUEUE_PROGRESS_RETRY_ATTEMPTS")?process.env.BOTIUMBOX_QUEUE_PROGRESS_RETRY_ATTEMPTS:5,M=process.env.hasOwnProperty("BOTIUMBOX_QUEUE_PROGRESS_RETRY_DELAY")?process.env.BOTIUMBOX_QUEUE_PROGRESS_RETRY_DELAY:1e4;C(`Using job progress retryAttempts: ${A}, retryDelay: ${M}`);const w=process.env.BOTIUMBOX_QUEUE_CONCURRENCY||1,x=process.env.BOTIUMBOX_QUEUE_CONCURRENCY_PERFORMANCE||1;let L=process.env.BOTIUMBOX_QUEUE_HEARTBEAT||3e5;L>0&&L<5e3&&(L=5e3);const X=i.createQueue(J);X.on("error",e=>{console.log(`ERROR connecting to queue '${JSON.stringify(J)}':`),console.log(e),process.exit(1)});const G=(e,s)=>X.create(e,s).removeOnComplete(!0).save(),k=e=>{const{type:s,data:o}=e;return X.create(s,o).attempts(A).backoff({delay:M,type:"fixed"}).removeOnComplete(!0).save()};let j={};const D=e=>{j=e};C("Trying to register agent ..."),G("agent.register",{title:`register agent ${P} to group ${N}`,name:P,group:N}).on("failed",e=>{console.log("ERROR registering agent:"),console.log(e),process.exit(1)}).on("complete",e=>{C(`Registration completed with result '${JSON.stringify(e)}', now accepting processing jobs (concurrency ${w}, concurrencyPerformance, ${x}).`),D(e);const s=(e,s)=>{const{testSessionId:o,testSessionName:t,testSessionJobId:n}=e.data;if(!o||!n)return s(new Error(`Processing Job ${e.id} failed, no testSessionId or testSessionJobId given.`));C(`Processing Job ${e.id} for Test Session ${o}/${t}, Job ${n}`);try{m(j,e,k).then(r=>{C(`Processing Job ${e.id} finished with result:`),r&&C(r),s(null,r),k({type:"process.ready.success",data:{title:`Processing Job ${e.id} for Test Session ${o}/${t} ready`,testSessionId:o,testSessionName:t,testSessionJobId:n,jobId:e.id,result:r}})}).catch(r=>{C(`Processing Job ${e.id} failed:`),C(r),s(r),k({type:"process.ready.failed",data:{title:`Processing Job ${e.id} for Test Session ${o}/${t} failed`,testSessionId:o,testSessionName:t,testSessionJobId:n,jobId:e.id,result:r.result,err:`${r}`}})})}catch(r){C(`Processing Job ${e.id} failed:`),C(r),s(r),k({type:"process.ready.failed",data:{title:`Processing Job ${e.id} for Test Session ${o}/${t} failed`,testSessionId:o,testSessionName:t,testSessionJobId:n,jobId:e.id,err:r}})}};if(X.process(`process.run.${N}`,w,s),X.process(`process.run.${P}`,w,s),X.process("process.run",w,s),X.process(`process.cancel.${P}`,w,(e,s)=>{if(!e.data||!e.data.testSessionId)return[C,s].forEach(e=>e("Cancel Test Session event received, but no testSessionId given"));C(`Canceling Test Session ${e.data.testSessionId}/${e.data.testSessionName}`);try{O(e.data.testSessionId),C(`Canceling Test Session ${e.data.testSessionId}/${e.data.testSessionName} finished.`),s()}catch(o){C(`Canceling Test Session Job ${e.data.testSessionId}/${e.data.testSessionName} failed:`),C(o),s(o)}}),X.process(`process.stop.${P}`,w,(e,s)=>{if(!e.data||!e.data.testSessionId)return[C,s].forEach(e=>e("Stop Test Session event received, but no testSessionId given"));C(`Stopping Test Session ${e.data.testSessionId}/${e.data.testSessionName}`);try{b(e.data.testSessionId),C(`Stopping Test Session ${e.data.testSessionId}/${e.data.testSessionName} finished.`),s()}catch(o){C(`Stopping Test Session Job ${e.data.testSessionId}/${e.data.testSessionName} failed:`),C(o),s(o)}}),X.process(`agent.ping.${P}`,w,(e,s)=>{s()}),X.process("performanceprocess.run",x,(e,s)=>{const{performanceTestSessionId:o,performanceTestSessionName:t,performanceTestSessionJobId:n}=e.data;if(!o||!n)return s(new Error(`Processing Job ${e.id} failed, no performanceTestSessionId or performanceTestSessionJobId given.`));C(`Processing Job ${e.id} for Test Session ${o}/${t}, Job ${n}`);try{k({type:"performanceprocess.started",data:{title:`Processing Job ${e.id} for Test Session ${o}/${t} started`,performanceTestSessionId:o,performanceTestSessionName:t,performanceTestSessionJobId:n,agentName:P,jobId:e.id}}),B(j,e,k).then(r=>{C(`Processing Job ${e.id} finished`),s(null,r),k({type:"performanceprocess.ready.success",data:{title:`Processing Job ${e.id} for Test Session ${o}/${t} ready`,performanceTestSessionId:o,performanceTestSessionName:t,performanceTestSessionJobId:n,agent:P,jobId:e.id,result:r}})}).catch(r=>{C(`Processing Job ${e.id} failed:`),C(r),s(r),k({type:"performanceprocess.ready.failed",data:{title:`Processing Job ${e.id} for Test Session ${o}/${t} failed`,performanceTestSessionId:o,performanceTestSessionName:t,performanceTestSessionJobId:n,agent:P,jobId:e.id,result:r.result,err:`${r}`}})})}catch(o){C(`Processing Job ${e.id} failed:`),C(o),s(o),k("performanceprocess.ready.failed",(e.id,e.id))}}),X.process(`performanceprocess.cancel.${P}`,x,(e,s)=>{if(!e.data||!e.data.performanceTestSessionId)return[C,s].forEach(e=>e("Cancel Test Session event received, but no performanceTestSessionId given"));C(`Canceling Test Session ${e.data.performanceTestSessionId}/${e.data.performanceTestSessionName}`);try{h(e.data.performanceTestSessionId,e),C(`Canceling Test Session ${e.data.performanceTestSessionId}/${e.data.performanceTestSessionName} finished.`),s()}catch(o){C(`Canceling Test Session Job ${e.data.performanceTestSessionId}/${e.data.performanceTestSessionName} failed:`),C(o),s(o)}}),X.process(`agent.reconfigure.${P}`,w,(e,s)=>{C("Trying to reconfigure agent ..."),G("agent.register",{title:`reconfigure agent ${P} for group ${N}`,name:P,group:N}).on("failed",e=>{C("ERROR reconfiguring agent:"),C(e),s(e)}).on("complete",e=>{C(`Reconfiguration completed with result '${JSON.stringify(e)}'.`),D(e),s()})}),L>0){const e=()=>{C("sending heartbeat ..."),G("agent.heartbeat",{title:`heartbeat from agent ${P} for group ${N}`,name:P,group:N}).on("complete",()=>{setTimeout(e,L)})};e()}}),process.on("uncaughtException",e=>{console.log("Got an uncaughtException",e)});return{}});
