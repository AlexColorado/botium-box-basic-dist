!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("node-cache"),require("nodegit"),require("botium-core/src/scripting/Constants"),require("botium-core/src/Capabilities"),require("natural"),require("mkdirp"),require("rimraf"),require("botium-core"),require("uuid/v1"),require("ioredis"),require("better-queue"),require("url"),require("jsonwebtoken"),require("watson-developer-cloud/assistant/v1"),require("botium-core/src/scripting/CompilerTxt"),require("fs"),require("path"),require("passport"),require("passport-local"),require("passport-ldapauth"),require("kue"),require("randomatic"),require("bcryptjs"),require("graphql-yoga"),require("graphql-tools"),require("graphql"),require("util"),require("express-jwt"),require("body-parser"),require("botium-connector-fbpagereceiver/src/proxy"),require("adm-zip"),require("request-promise-native"),require("slugify"),require("moment"),require("lodash"),require("debug"),require("xml"),require("pdfkit"),require("concat-stream"),require("dotenv-flow"),require("graphql-redis-subscriptions"),require("prisma-binding"),require("express"),require("connect-history-api-fallback")):"function"==typeof define&&define.amd?define(["node-cache","nodegit","botium-core/src/scripting/Constants","botium-core/src/Capabilities","natural","mkdirp","rimraf","botium-core","uuid/v1","ioredis","better-queue","url","jsonwebtoken","watson-developer-cloud/assistant/v1","botium-core/src/scripting/CompilerTxt","fs","path","passport","passport-local","passport-ldapauth","kue","randomatic","bcryptjs","graphql-yoga","graphql-tools","graphql","util","express-jwt","body-parser","botium-connector-fbpagereceiver/src/proxy","adm-zip","request-promise-native","slugify","moment","lodash","debug","xml","pdfkit","concat-stream","dotenv-flow","graphql-redis-subscriptions","prisma-binding","express","connect-history-api-fallback"],t):e.main=t(e.nodeCache,e.nodegit,e.Constants,e.Capabilities,e.natural,e.mkdirp,e.rimraf,e.botiumCore,e.v1,e.ioredis,e.betterQueue,e.url,e.jsonwebtoken,e.v1$1,e.CompilerTxt,e.fs,e.path,e.passport,e.passportLocal,e.passportLdapauth,e.kue,e.randomatic,e.bcryptjs,e.graphqlYoga,e.graphqlTools,e.graphql,e.util,e.expressJwt,e.bodyParser,e.proxy,e.admZip,e.requestPromiseNative,e.slugify,e.moment,e.lodash,e.debug,e.xml,e.pdfkit,e.concatStream,e.dotenvFlow,e.graphqlRedisSubscriptions,e.prismaBinding,e.express,e.connectHistoryApiFallback)}(this,function(e,t,s,a,r,n,i,o,c,d,l,u,p,h,S,m,f,T,y,b,g,E,w,C,v,I,O,R,P,A,$,N,_,D,x,k,B,j,q,L,F,M,U,J){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e,t=t&&t.hasOwnProperty("default")?t.default:t,s=s&&s.hasOwnProperty("default")?s.default:s,a=a&&a.hasOwnProperty("default")?a.default:a,r=r&&r.hasOwnProperty("default")?r.default:r,n=n&&n.hasOwnProperty("default")?n.default:n,i=i&&i.hasOwnProperty("default")?i.default:i,o=o&&o.hasOwnProperty("default")?o.default:o,c=c&&c.hasOwnProperty("default")?c.default:c,d=d&&d.hasOwnProperty("default")?d.default:d,l=l&&l.hasOwnProperty("default")?l.default:l,u=u&&u.hasOwnProperty("default")?u.default:u,p=p&&p.hasOwnProperty("default")?p.default:p,h=h&&h.hasOwnProperty("default")?h.default:h,S=S&&S.hasOwnProperty("default")?S.default:S,m=m&&m.hasOwnProperty("default")?m.default:m,f=f&&f.hasOwnProperty("default")?f.default:f,T=T&&T.hasOwnProperty("default")?T.default:T,y=y&&y.hasOwnProperty("default")?y.default:y,b=b&&b.hasOwnProperty("default")?b.default:b,g=g&&g.hasOwnProperty("default")?g.default:g,E=E&&E.hasOwnProperty("default")?E.default:E,w=w&&w.hasOwnProperty("default")?w.default:w,C=C&&C.hasOwnProperty("default")?C.default:C,v=v&&v.hasOwnProperty("default")?v.default:v,I=I&&I.hasOwnProperty("default")?I.default:I,O=O&&O.hasOwnProperty("default")?O.default:O,R=R&&R.hasOwnProperty("default")?R.default:R,P=P&&P.hasOwnProperty("default")?P.default:P,A=A&&A.hasOwnProperty("default")?A.default:A,$=$&&$.hasOwnProperty("default")?$.default:$,N=N&&N.hasOwnProperty("default")?N.default:N,_=_&&_.hasOwnProperty("default")?_.default:_,D=D&&D.hasOwnProperty("default")?D.default:D,x=x&&x.hasOwnProperty("default")?x.default:x,k=k&&k.hasOwnProperty("default")?k.default:k,B=B&&B.hasOwnProperty("default")?B.default:B,j=j&&j.hasOwnProperty("default")?j.default:j,q=q&&q.hasOwnProperty("default")?q.default:q,L=L&&L.hasOwnProperty("default")?L.default:L,F=F&&F.hasOwnProperty("default")?F.default:F,M=M&&M.hasOwnProperty("default")?M.default:M,U=U&&U.hasOwnProperty("default")?U.default:U,J=J&&J.hasOwnProperty("default")?J.default:J;const G={buildTarget:"COMMUNITY EDITION",buildBranch:"release/1.5.0",buildRevision:"804bc48283f032437a9470a6ccbe9669f08344ad",buildDate:"2019-04-27T09:53:10+02:00"};var V=G,H=()=>{console.log("BOTIUM BOX - SERVER"),console.log(`BUILD_TARGET: ${G.buildTarget}`),console.log(`BUILD_BRANCH: ${G.buildBranch}`),console.log(`BUILD_REVISION: ${G.buildRevision}`),console.log(`BUILD_TIMESTAMP: ${G.buildDate}`)};const Y=k("botium-box-server-cache");var z=class{constructor(t){this.cache=new e({stdTTL:t,checkperiod:.2*t,useClones:!1}),this.loading={}}get(e,t){const s=this.cache.get(e);if(s)return Y(`Serving key ${e} from cache`),Promise.resolve(s);if(this.loading[e]){return Y(`Load process for key ${e} already running, waiting ...`),new Promise((t,s)=>{this.loading[e].listeners.push({resolve:t,reject:s})})}this.loading[e]=this.loading[e]||{listeners:[]};const a=new Promise((t,s)=>{this.loading[e].listeners.push({resolve:t,reject:s})});return Y(`Load process for key ${e} started, waiting ...`),t().then(t=>{Y(`Load process for key ${e} ready, notifying listeners ...`),this.cache.set(e,t),this.loading[e].listeners.forEach(({resolve:e})=>e(t)),delete this.loading[e]}).catch(t=>{this.loading[e].listeners.forEach(({reject:e})=>e(t)),delete this.loading[e]}),a}del(e){this.cache.del(e)}delStartWith(e=""){if(!e)return;const t=this.cache.keys();for(const s of t)0===s.indexOf(e)&&this.del(s)}flush(){this.cache.flushAll()}};var W={FindFullTestSet:(e,t)=>e.query.testSet({where:{id:t}}," \n{\n  id\n  name\n  client { id }\n  expandConvos\n  expandUtterancesToConvos\n  expandUtterancesIncomprehension\n  selectionType\n  tags\n  scripts { id name script scriptType }\n  repositories { id name giturl gitbranch gitdir gituser gitpassword globFilter }\n  folders { id name path globFilter }\n  excels { id name filename filecontent hasConvos hasPartialConvos hasUtterances worksheetsConvos worksheetsPartialConvos worksheetsUtterances startRow startCol }\n}"),RetrieveTestSetDetails:e=>({id:e.id,name:e.name,expandConvos:e.expandConvos,expandUtterancesToConvos:e.expandUtterancesToConvos,expandUtterancesIncomprehension:e.expandUtterancesIncomprehension,expandScriptingMemory:e.expandScriptingMemory,convos:"SELECTION_TYPE_REMOTE_ONLY"!==e.selectionType&&e.scripts&&e.scripts.filter(e=>"SCRIPTING_TYPE_CONVO"===e.scriptType).map(t=>({format:"SCRIPTING_FORMAT_TXT",content:t.script,sourceTag:{testSetId:e.id,testSetScriptId:t.id}})),pconvos:"SELECTION_TYPE_REMOTE_ONLY"!==e.selectionType&&e.scripts&&e.scripts.filter(e=>"SCRIPTING_TYPE_PCONVO"===e.scriptType).map(t=>({format:"SCRIPTING_FORMAT_TXT",content:t.script,sourceTag:{testSetId:e.id,testSetScriptId:t.id}})),utterances:"SELECTION_TYPE_REMOTE_ONLY"!==e.selectionType&&e.scripts&&e.scripts.filter(e=>"SCRIPTING_TYPE_UTTERANCES"===e.scriptType).map(t=>({format:"SCRIPTING_FORMAT_TXT",content:t.script,sourceTag:{testSetId:e.id,testSetScriptId:t.id}})),scriptingMemories:e.scripts&&e.scripts.filter(e=>"SCRIPTING_TYPE_SCRIPTING_MEMORY"===e.scriptType).map(t=>({format:"SCRIPTING_FORMAT_TXT",content:t.script,sourceTag:{testSetId:e.id,testSetScriptId:t.id}})),folders:"SELECTION_TYPE_LOCAL_ONLY"!==e.selectionType&&e.folders&&e.folders.map(t=>({id:t.id,path:t.path,globFilter:t.globFilter,sourceTag:{testSetId:e.id,testSetFolderId:t.id}})),excels:"SELECTION_TYPE_REMOTE_ONLY"!==e.selectionType&&e.excels&&e.excels.map(t=>({id:t.id,filename:t.filename,filecontent:t.filecontent,hasConvos:t.hasConvos,hasPartialConvos:t.hasPartialConvos,hasUtterances:t.hasUtterances,worksheetsConvos:t.worksheetsConvos,worksheetsPartialConvos:t.worksheetsPartialConvos,worksheetsUtterances:t.worksheetsUtterances,startRow:t.startRow,startCol:t.startCol,sourceTag:{testSetId:e.id,testSetExcelId:t.id,filename:t.filename}}))})};const X=k("botium-retrieve-all-test-cases");var K=(e,t,r,n)=>{e.convos&&e.convos.forEach(a=>{let r=[];try{a.format===s.SCRIPTING_FORMAT_TXT&&(r=t.Compile(a.content,s.SCRIPTING_FORMAT_TXT,s.SCRIPTING_TYPE_CONVO)),r&&r.forEach(e=>{e.sourceTag=a.sourceTag})}catch(t){throw X(t),new Error(`${e.name}: Convo Script compilation failed: ${O.inspect(t)}`)}}),e.pconvos&&e.pconvos.forEach(a=>{let r=[];try{a.format===s.SCRIPTING_FORMAT_TXT&&(r=t.Compile(a.content,s.SCRIPTING_FORMAT_TXT,s.SCRIPTING_TYPE_PCONVO)),r&&r.forEach(e=>{e.sourceTag=a.sourceTag})}catch(t){throw X(t),new Error(`${e.name}: Partial Convo Script compilation failed: ${O.inspect(t)}`)}}),e.utterances&&e.utterances.forEach(a=>{let r=[];try{a.format===s.SCRIPTING_FORMAT_TXT&&(r=t.Compile(a.content,s.SCRIPTING_FORMAT_TXT,s.SCRIPTING_TYPE_UTTERANCES)),r&&r.forEach(e=>{e.sourceTag=a.sourceTag})}catch(t){throw X(t),new Error(`${e.name}: Utterance script compilation failed: ${O.inspect(t)}`)}}),e.scriptingMemories&&e.scriptingMemories.forEach(a=>{let r=[];try{a.format===s.SCRIPTING_FORMAT_TXT&&(r=t.Compile(a.content,s.SCRIPTING_FORMAT_TXT,s.SCRIPTING_TYPE_SCRIPTING_MEMORY)),r&&r.forEach(e=>{e.sourceTag=a.sourceTag})}catch(t){throw X(t),new Error(`${e.name}: Scripting Memory script compilation failed: ${O.inspect(t)}`)}}),e.folders&&e.folders.forEach(s=>{try{const{convos:a,pconvos:r,utterances:n}=t.ReadScriptsFromDirectory(s.path,s.globFilter);a&&a.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,s.sourceTag)}),r&&r.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,s.sourceTag)}),n&&n.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,s.sourceTag)})}catch(t){throw X(t),new Error(`${e.name}: Folder ${s} script compilation failed: ${O.inspect(t)}`)}});let i=Promise.resolve();e.excels&&e.excels.length>0&&(i=Promise.all(e.excels.map(({id:e,filename:r,filecontent:n,hasConvos:i,hasPartialConvos:o,hasUtterances:c,worksheetsConvos:d,worksheetsPartialConvos:l,worksheetsUtterances:u,startRow:p,startCol:h,sourceTag:S})=>new Promise(e=>{const r=Buffer.from(n,"base64");let m=[],f=[],T=[];i&&(d&&(t.caps[a.SCRIPTING_XLSX_SHEETNAMES]=d),isNaN(p)||(t.caps[a.SCRIPTING_XLSX_STARTROW]=p),isNaN(h)||(t.caps[a.SCRIPTING_XLSX_STARTCOL]=h),m=t.Compile(r,s.SCRIPTING_FORMAT_XSLX,s.SCRIPTING_TYPE_CONVO)),o&&(l&&(t.caps[a.SCRIPTING_XLSX_SHEETNAMES_PCONVOS]=l),isNaN(p)||(t.caps[a.SCRIPTING_XLSX_STARTROW]=p),isNaN(h)||(t.caps[a.SCRIPTING_XLSX_STARTCOL]=h),f=t.Compile(r,s.SCRIPTING_FORMAT_XSLX,s.SCRIPTING_TYPE_PCONVO)),c&&(u&&(t.caps[a.SCRIPTING_XLSX_SHEETNAMES_UTTERANCES]=u),isNaN(p)||(t.caps[a.SCRIPTING_XLSX_STARTROW]=p),isNaN(h)||(t.caps[a.SCRIPTING_XLSX_STARTCOL]=h),T=t.Compile(r,s.SCRIPTING_FORMAT_XSLX,s.SCRIPTING_TYPE_UTTERANCES)),m&&m.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,S)}),f&&f.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,S)}),T&&T.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,S)}),e()}))));let o=Promise.resolve();return Promise.all([o,i])};const Q=new r.RegexpTokenizer({pattern:/([A-zÀ-ÿ-$]+|[0-9._]+|.|!|\?|'|"|:|;|,|-)/i}),Z=e=>Q.tokenize(e),ee=e=>Z(e).filter(e=>!se(e));const te=(e,t,s)=>[e.substr(0,t),s,e.substr(t+1)].join("");const se=e=>e&&e.length>1&&e.startsWith("$");var ae={tokenize:ee,evaluateProbability:e=>Math.random()<e,getLongestToken:e=>{const t=ee(e).sort((e,t)=>t.length-e.length);return t.length?t[0]:""},replaceCharAtCaseSensitive:(e,t,s)=>{const a=(e=>e===e.toLocaleLowerCase())(e.charAt(t))?s.toLocaleLowerCase():s.toLocaleUpperCase();return te(e,t,a)},replaceCharAt:te,insertAt:(e,t,s)=>[e.substr(0,t),s,e.substr(t)].join(""),replaceWith:(e,t,s)=>{const a=e.indexOf(t);return[e.substr(0,a),s,e.substr(a+t.length)].join("")},reverse:e=>{return e.split("").reverse().join("")},keymap:{1:["2","q"],2:["1","q","w","3"],3:["2","w","e","4"],4:["3","e","r","5"],5:["4","r","t","6"],6:["5","t","y","z","7"],7:["6","y","z","u","8"],8:["7","u","i","9"],9:["8","i","o","0"],0:["9","o","p"],q:["1","2","w","a"],w:["q","a","s","e","3","2"],e:["w","s","d","r","4","3"],r:["e","d","f","t","5","4"],t:["r","f","g","y","z","6","5"],y:["t","g","h","u","7","6","x","s","a"],u:["y","z","h","j","i","8","7"],i:["u","j","k","o","9","8"],o:["i","k","l","p","0","9"],p:["o","l","0"],a:["y","z","s","w","q"],s:["a","y","z","x","d","e","w"],d:["s","x","c","f","r","e"],f:["d","c","v","g","t","r"],g:["f","v","b","h","y","z","t"],h:["g","b","n","j","u","y","z"],j:["h","n","m","k","i","u"],k:["j","m","l","o","i"],l:["k","p","o"],z:["x","s","a","t","g","h","u","7","6"],x:["y","z","c","d","s"],c:["x","v","f","d"],v:["c","b","g","f"],b:["v","n","h","g"],n:["b","m","j","h"],m:["n","k","j"],"ö":["l","p","ü","ä","-","."],"ä":["-","ö","ü","+","#"],"ü":["p","ö","ä","+","´","ß"],"ß":["ü","p","0"]},normalizeNumberOfResult:(e,t=3)=>{if(e.length<=t)return e;const s=[],a=(e.length-t)/t/2;for(let r=0;r<t;r++)s.push(e[Math.round(a+r*(e.length/t))]);return s},isModifiableWord:(e,t)=>{const s=((e,t)=>{const s=Z(e).sort((e,t)=>t.length-e.length);for(let a=0;a<s.length;a++){const r=s[a];let n=0;do{if((n=e.indexOf(r,n))>=0){if(n<=t&&t<n+r.length)return r;n++}}while(n>=0)}return null})(e,t);return!!s&&!se(s)}};const{normalizeNumberOfResult:re,isModifiableWord:ne}=ae;var ie={execute:e=>{let t=[""];const s=e.toLocaleLowerCase();for(let a=0;a<e.length;a++){const r=e.charAt(a)!==s.charAt(a)&&ne(e,a);r&&(t=t.concat(t));for(let n=0;n<t.length;n++){const i=r&&n<t.length/2;t[n]=t[n].concat(i?s.charAt(a):e.charAt(a))}}return t=t.slice(1),re(t)},metadata:{id:"Case sensitivity"}};const{normalizeNumberOfResult:oe}=ae;var ce={execute:e=>{const t=e.split(/(?<! ) (?! )/);let s=[t[0]];for(let e=1;e<t.length;e++){s=s.concat(s);for(let a=0;a<s.length;a++)s[a]=s[a]+(a<s.length/2?" ":"  "),s[a]=s[a]+t[e]}return s=s.slice(1),oe(s)},metadata:{id:"Duplicate space"}},de={execute:e=>[e+" :)"],metadata:{id:"Emojis"}};const{normalizeNumberOfResult:le}=ae;var ue=[ie,ce,de,{execute:e=>{let t=[""];const s=e.replace(/(.) /g,"$1\n");for(let a=0;a<e.length;a++){e.charAt(a)!==s.charAt(a)&&(t=t.concat(t));for(let r=0;r<t.length;r++)t[r]=t[r].concat(r<t.length/2?e.charAt(a):s.charAt(a))}return t=t.slice(1),le(t)},metadata:{id:"Enter instead of space"}},{execute:e=>[e.replace(" ,"," ").replace(", "," ").replace(","," ")],metadata:{id:"Missing punctuation mark"}}];const{getLongestToken:pe,insertAt:he,replaceWith:Se}=ae;const me=e=>{const t=[];let s=e;return[2,e.length-2].forEach(a=>{t.push(he(e,a,e[a])),s=he(s,a,s[a])}),t.push(s),t};var fe={execute:e=>{const t=[],s=pe(e);return s.length<5?t:(me(s).forEach(a=>{t.push(Se(e,s,a))}),t)},metadata:{id:"Double character"}};const{getLongestToken:Te,replaceWith:ye,reverse:be}=ae;const ge=e=>{const t=new Set([e]);return[1,2].forEach(s=>{let a=s,r=!1;do{const s=e.substr(a,3),n=ye(e,s,be(s));t.has(n)||(t.add(n),r=!0),++a>=e.length-2&&(r=!0)}while(!r)}),t.delete(e),t};var Ee={execute:e=>{const t=[],s=Te(e);return s.length<7?t:(ge(s).forEach(a=>{t.push(ye(e,s,a))}),t)},metadata:{id:"Duplicate space"}};const{tokenize:we,replaceWith:Ce}=ae,ve=["Aale, Ahle","Ai, Ei","Annalen, analen","aß, Aas","Bad, bat","bald, ballt","Bällen, bellen","Band, bannt","Beete, bete","bis, Biss","Block, Blog","Boot, bot","Boote, Bote","Bug, buk","Bund, bunt","Chor, Korps","Code, Kot","das, dass","dehnen, denen","erhält, erhellt","Fähre, faire","Fälle, Felle","fällt, Feld","Färse, Ferse, Verse","fast, fasst","fetter, Vetter","fiel, viel","fließt, fliehst, fliest","frisst, Frist","Fühler, Phyla","Geld, gellt","Gewand, gewandt","Grad, Grat","Graf, Graph","Halt, hallt","hallte, halte","hält, Held, hellt","Hämmer, Hemmer","hängst, Hengst","harrt, hart","hasst, hast","Häute, heute","Heer, hehr, her","Hemd, hemmt","hohl, hol","Hund, Hunt","isst, ist","kannte, Kante","konnten, Konten","Kuh, Coup","küsste, Küste","Laib, Leib","Laie, Leihe","laichen, Leichen","lasst, Last","läuten, Leuten","Lärche, Lerche","Leere, Lehre","leeren, lehren","Leerstelle, Lehrstelle","Leid, leiht","Lid, Lied","lies, ließ","liest, least","Mahl, Mal","Mähre, Märe, Meere","mahlen, malen","man, Mann","Märkte, merkte","Meer, mehr","Miene, Mine","misst, Mist","Mohr, Moor","mühten, Mythen","Mund, Munt","Nachnahme, Nachname","nahmen, Namen","packt, Pakt","pisste, Piste","rächen, Rechen","rächt, Recht","Rad, Rat","Rain, rein","Rede, Reede","Reis, reiß","reist, reißt","ruhte, Rute, Route","säen, sähen","Sämann, Seemann","Sätzen, setzen","Saite, Seite","seid, seit","schafft, Schaft","schallten, schalten","Schänke, schenke","schellte, Schelte","Schlächter, schlechter","Schlämme, schlemme","Schwälle, Schwelle","Schwämme, Schwemme","Seen, sehen","seid, seiht, seit","sie, sieh","Siegel, Sigel","Sohle, Sole","Sold, sollt","späht, spät","Stadt, statt","Städte, Stätte","Ställe, Stelle","starrt, Start","stehlen, Stelen","stiehl, Stiel, Stil","Tod, tot","Trend, trennt","Uhrzeit, Urzeit","Verband, verbannt","Verben, werben","verließ, Verlies","verwaist, verweist","Villen, Willen","Waage, vage","Waagen, wagen","Wahl, Wal","wahr, war","wahre, Ware","Waise, Weise","Wald, wallt","Wälle, Welle","Wände, Wende","Weck, weg","Wehr, wer","wehrt, Wert","weiht, weit","weis, weiß","weist, weißt","wieder, wider","wird, Wirt","Zunahme, Zuname","accept,except","acclamation,acclimation","acts,ax,axe","adolescence,adolescents","aeration,erration","aerie,airy","affect,effect","aid,aide","ail,ale","air,heir,err,ere","aisle,isle,I'll","all,awl","allowed,aloud","allude,elude","altar,alter","appose,oppose","arc,ark","are,our","ascent,assent","ate,eight","away,aweigh","aye,I,eye","bade,bayed","bail,bale","bait,bate","bald,bawled,balled","ball,bawl","band,banned","bard,barred","bare,bear","baron,barren","base,bass","based,baste","bazaar,bizarre","be,bee","beach,beech","bean,been","beat,beet","been,bin","beer,bier","bell,belle","berry,bury","berth,birth","better,bettor","bight,bite","billed,build","bird,burred","blew,blue","boar,bore,boor","board,bored","boarder,border","bode,bowed","bold,bowled","bolder,boulder,bowlder","bole,bowl","boos,booze","bough,bow","boy,buoy","braid,brayed","braise,braze,brays,braize","brake,break","breach,breech","bread,bred","brewed,brood","brews,bruise","bridal,bridle","burro,burrow","bus,buss","bused,bust","but,butt","buy,bye,by","cache,cash","callous,callus","can't,cant","cannon,canon","canter,cantor","carat,carrot,caret","caries,carries","cast,caste","cede,seed","cell,sell","cellar,seller","censor,sensor","cent,sent,scent","cents,sense,scents","cereal,serial","cession,session","chaise,chase","chalk,chock","chance,chants","chased,chaste","cheap,cheep","chews,choose","chic,sheik","choir,quire","chord,cored,cord","chute,shoot","cite,site,sight","clause,claws","click,clique","close,clothes","coal,cole","coaled,cold","coarse,course","coated,coded","cocks,cox","complement,compliment","contingence,contingents","coo,coup","coop,coupe","correspondence,correspondents","cosign,cosine","council,counsel","councilor,counselor","creak,creek","crewed,crude","crews,cruise","cue,queue","currant,current","curser,cursor","dam,damn","Dane,deign","days,daze","dear,deer","dense,dents","dependence,dependents","dew,due,do","die,dye","dire,dyer","discreet,discrete","doe,dough","does,doze,doughs","done,dun","dual,duel","ducked,duct","earn,urn","either,ether","emigrant,immigrant","eutopia,utopia","ewe,you,yew","eyed,I'd","fain,feign","faint,feint","fair,fare","fairy,ferry","fate,fete","faze,phase","feat,feet","feudal,futile","find,fined","finish,Finnish","fir,fur","flair,flare","flea,flee","flecks,flex","flew,flue","flour,flower","foaled,fold","for,four,fore","forego,forgo","foreword,forward","forth,fourth","foul,fowl","frees,frieze,freeze","friar,fryer","gage,gauge","gait,gate","gel,jell","gene,jean","gild,guild","gneiss,nice","gored,gourd","grade,grayed,greyed","grate,great","grays,greys,graze","grisly,grizzly","groan,grown","guessed,guest","guide,guyed","guise,guys","hail,hale","hair,hare","hairy,harry","hall,haul","halve,have","hangar,hanger","hay,hey","hays,haze","he'd,heed","he'll,heel,heal","hear,here","heard,herd","heated,heeded","hew,hue","hi,high","higher,hire","him,hymn","ho,hoe","hoar,whore","hoard,horde","hoarse,horse","hoes,hose","hold,holed","hole,whole","holey,wholly,holy","hostel,hostile","hour,our","idle,idol","immanent,imminent","in,inn","incidence,incidents","incite,insight","instance,instants","intense,intents","intension,intention","it's,its","jam,jamb","knave,nave","knead,need,kneed","knew,new","knight,night","knit,nit","knot,not,naught","know,no","knows,nose","lacks,lax","lade,laid","lain,lane","lair,layer","lam,lamb","laps,lapse","lay,lei","lays,laze","leach,leech","lead,led","leak,leek","lean,lien","leased,least","lends,lens","lessen,lesson","lesser,lessor","let's,lets","levee,levy","liar,lyre","lichen,liken","lickerish,licorice","lie,lye","links,lynx","lo,low","load,lode","loan,lone","loch,lock","locks,lox","loop,loupe","loos,lose","lose,loose","made,maid","mail,male","main,mane","maize,maze,Mays","mall,maul","manner,manor","marshal,martial","massed,mast","mat,matte","mean,mien","meat,mete,meet","medal,mettle,meddle,metal","might,mite","mince,mints","mind,mined","miner,minor","missed,mist","moat,mote","mood,mooed","moor,more","morning,mourning","muscle,mussel","mussed,must","naval,navel","nay,neigh","nicks,nix","none,nun","oar,ore,or","ode,owed","oh,owe","once,wants","one,won","oohs,ooze","overseas,oversees","paced,paste","packed,pact","pail,pale","pain,pane","pair,pear,pare","palate,pallet,palette","parish,perish","passed,past","patience,patients","pause,paws","peace,piece","peak,pique,peek","peal,peel","pearl,purl","pedal,petal,peddle","peer,pier","penance,pennants","per,purr","pi,pie","plain,plane","plainer,planer,planar","plait,plate","pleas,please","pole,poll","poor,pour,pore","populace,populous","praise,preys,prays","pray,prey","precedence,precedents","premier,premiere","presence,presents","pride,pried","prier,prior","pries,prize","prince,prints","principal,principle","profit,prophet","rack,wrack","raid,rayed","rail,rale","rain,rein,reign","raise,raze,rays","rap,wrap","rapt,wrapped,wrapt","re-cover,recover","re-lay,relay","read,red","read,reed","real,reel","recede,reseed","reek,wreak","residence,residents","rest,wrest","retch,wretch","rhyme,rime","right,write,rite,wright","ring,wring","ringer,wringer","rise,ryes","road,rowed,rode","roe,row","roil,royal","role,roll","roomer,rumor,rumour","root,route","rose,rows","rote,wrote","rude,rued","rues,ruse","rung,wrung","rye,wry","sail,sale","scene,seen","sea,see","seam,seem","sear,seer","seas,seize,sees","sects,sex","sew,sow,so","shake,sheik","shear,sheer","shoe,shoo","sic,sick","sics,six","side,sighed","sighs,size","sign,sine","slay,sleigh","sleight,slight","slew,slough","soar,sore","soared,sword","sold,soled","sole,soul","some,sum","son,sun","stair,stare","stake,steak","steal,steel","step,steppe","storey,story","straight,strait","suite,sweet","tacked,tact","tacks,tax","tail,tale","taper,tapir","tarry,terry","taught,taut","tea,tee","team,teem","tears,tiers","teas,tees,tease","tense,tents","than,then","there,they're,their","threw,through","throne,thrown","thyme,time","tide,tied","tier,tire","tighten,titan","to,two,too","toad,towed,toed","toe,tow","told,tolled","tracked,tract","tray,trey","udder,utter","vain,vein,vane","vale,veil","vial,vile","vice,vise","wade,weighed","wail,whale","waist,waste","wait,weight","waive,wave","waiver,waver","wale,whale","war,wore","ward,warred","ware,where,wear","warn,worn","wax,whacks","way,whey,weigh","we,wee","we'd,weed","we'll,wheel,weal,wheal","we're,weir,were","we're,whir","we've,weave","weak,week","wearer,where're","weather,whether","wet,whet","wheeled,wield","which,witch","while,wile","whiled,wild","whine,wine","whined,wined,wind","whirled,world","whit,wit","whither,wither","who's,whose","whoa,woe","wood,would","yack,yak","yaw,your,yore,you're","yoke,yolk","yore,your,you're","you'll,Yule","aahed,odd","adieu,ado","ant,aunt","aural,oral","marry,merry","rout,route","seated,seeded","shone,shown","tidal,title","trader,traitor","vary and very"];let Ie;const Oe=()=>{if(Ie)return Ie;const e=ve.map(function(e){return e.toLocaleLowerCase().trim().split(",")});return Ie=[],e.forEach(function(e){e.forEach(function(t){Ie[t]=e.filter(e=>e!==t)})}),Ie},Re=e=>{const t=Oe();if((e=e.toLocaleLowerCase())in t)return t[e][0]};var Pe={execute:e=>{const t=we(e);let s=e;return t.forEach(e=>{const t=Re(e);t&&(s=Ce(s,e,t))}),s!==e?[s]:[]},metadata:{id:"Homophones"}};const{getLongestToken:Ae,replaceCharAtCaseSensitive:$e,replaceWith:Ne,keymap:_e}=ae;const De=e=>{const t=[];return[2,e.length-2].forEach(s=>{const a=e[s].toLocaleLowerCase();if(a in _e){const r=_e[a];[r[0],r[r.length-1]].forEach(a=>{t.push($e(e,s,a))})}}),t};var xe={execute:e=>{const t=[],s=Ae(e);return s.length<5?t:(De(s).forEach(a=>{t.push(Ne(e,s,a))}),t)},metadata:{id:"Mishit"}};const{getLongestToken:ke,replaceCharAtCaseSensitive:Be,replaceWith:je}=ae;const qe=e=>{const t=[];return[2,e.length-2].forEach(s=>{t.push(Be(e,s,""))}),t};var Le={execute:e=>{const t=[],s=ke(e);return s.length<5?t:(qe(s).forEach(a=>{t.push(je(e,s,a))}),t)},metadata:{id:"Missing character"}};const{getLongestToken:Fe,replaceWith:Me,reverse:Ue}=ae;const Je=e=>{const t=new Set([e]);return[2,e.length-2].forEach(s=>{let a=s,r=!1;do{const s=e.substr(a,2),n=Me(e,s,Ue(s));t.has(n)||(t.add(n),r=!0),++a>=e.length-2&&(r=!0)}while(!r)}),t.delete(e),t};var Ge={execute:e=>{const t=[],s=Fe(e);return s.length<5?t:(Je(s).forEach(a=>{t.push(Me(e,s,a))}),t)},metadata:{id:"Mixing character"}};const{replaceCharAt:Ve}=ae,He={z:"y",Z:"Y",y:"z",Y:"Z"};var Ye={execute:e=>{let t=e;for(let e=0;e<t.length;e++){const s=t.charAt(e);s in He&&(t=Ve(t,e,He[s]))}return t===e?[]:[t]},metadata:{id:"qwertz vs qwerty keyboard"}};const{getLongestToken:ze,replaceCharAtCaseSensitive:We,replaceWith:Xe,keymap:Ke}=ae;const Qe=e=>{const t=[],s=Math.round(e.length/2),a=e[s].toLocaleLowerCase();if(a in Ke){const r=Ke[a];[r[0],r[r.length-1]].forEach(a=>{t.push(We(e,s,e[s]+a))})}return t};var Ze={execute:e=>{const t=[],s=ze(e);return s.length<5?t:(Qe(s).forEach(a=>{t.push(Xe(e,s,a))}),t)},metadata:{id:"Sausage fingers"}};const{getLongestToken:et,replaceWith:tt}=ae;const st=e=>{const t=new Set([e]);return[1,2].forEach(s=>{let a=s,r=!1;do{const s=e.substr(a,3).split("");let n=Array.from(s);n.push(n[0]),n.shift();const i=tt(e,s.join(""),n.join(""));t.has(i)||(t.add(i),r=!0),++a>=e.length-2&&(r=!0)}while(!r)}),t.delete(e),t};var at=[fe,Ee,Pe,xe,Le,Ge,Ye,Ze,{execute:e=>{const t=[],s=et(e);return s.length<7?t:(st(s).forEach(a=>{t.push(tt(e,s,a))}),t)},metadata:{id:"Shift characters"}}];const rt=ue.concat(at),nt={};rt.forEach(e=>{nt[e.metadata.id]=e});const it={};ue.forEach(e=>{it[e.metadata.id]="habits"}),at.forEach(e=>{it[e.metadata.id]="typo"});var ot={GetMutatorById:e=>{if(!(e in it))throw Error(`Unknown ID: ${e}`);return nt[e]},allMutatorNames:Object.keys(nt),pipelineAllMutatorCombined:[[ue,at],[ue],[at]],pipelineAllMutatorNotCombined:[[ue],[at]]};const{pipelineAllMutatorCombined:ct,pipelineAllMutatorNotCombined:dt,GetMutatorById:lt,allMutatorNames:ut}=ot;const pt=(e,t)=>{let s=new Set;for(const a of t){let t=[e];for(const e of a){let s=[];for(const a of e)for(const e of t)s=s.concat(a.execute(e));t=s}for(const e of t)s.has(e)?console.log("duplicate utterance : <"+e+"> created by "+JSON.stringify(a,2)):s.add(e)}return[...s]};const ht=e=>{if(!e.humanifiersToExecute||!e.humanifiersToExecute.length)return[[dt]];return[[(e=>e.map(e=>lt(e)))(e.humanifiersToExecute)]]};var St={pipelineAllMutatorCombined:ct,pipelineAllMutatorNotCombined:dt,allHumanifiers:ut,Execute:(e,t)=>{const s=ht(t);return pt(e,s)},ExecutePipeline:pt};const mt=k("botium-box-clone-testset"),{BotDriver:ft}=o,{RetrieveTestSetDetails:Tt}=W;const yt=(e,t)=>{const a=f.join(process.env.TESTSETDIR,`${_(t)}_CLONED_${E("Aa0",5)}`);n.sync(a);const r=Object.keys(e.utterances);for(let t=0;t<r.length;t++){let s=[r[t]].concat(e.utterances[r[t]].utterances).join("\r\n");m.writeFile(f.join(a,`${r[t]}.utterances.txt`),s,function(e){if(e)throw e})}const i=e.GetCompiler(s.SCRIPTING_FORMAT_TXT);for(let t=0;t<e.convos.length;t++){let s=i.Decompile([e.convos[t]]);m.writeFile(f.join(a,`c${t}.convo.txt`),s,function(e){if(e)throw e})}return a},bt=(e,t)=>{const s={all:e.utterances,me:new Set,bot:new Set,both:null,neither:null,toHumanify:{},allUtteranceCount:0,utterancesToHumanifyCount:0};s.neither=new Set(Object.keys(s.all)),e.convos.forEach(e=>{e.conversation.forEach(e=>{e.messageText&&e.messageText in s.all&&(s[e.sender].add(e.messageText),s.neither.delete(e.messageText))})});const a=x.uniq(Array.from(s.me)).filter(e=>s.bot.has(e));s.both=new Set(a);const r={};let n=0,i=0;return t.humanifiersToExecute&&t.humanifiersToExecute.length&&[...s.me,...a,...s.neither].forEach(e=>{i+=s.all[e].utterances.length;let a=Math.round(i*t.percentToHumanify-n);0===n&&0===a&&(a=1),r[e]=a,n+=a}),s.toHumanify=r,s.allUtteranceCount=i,s.utterancesToHumanifyCount=n,s},gt=(e,t,s)=>{t.both.forEach(s=>{if(t.toHumanify[s]){let t=s+"_JUST_BOT";if(t in e.utterances)throw new Error(`There is already an utterance ${t} in the testset!`)}});const a={humanifiedRefs:[],humanifiedRefCount:0,humanifiedUtterancesCount:0,duplicates:0};t.both.forEach(s=>{t.toHumanify[s]&&(e.utterances[s+"_JUST_BOT"]=x.cloneDeep(e.utterances[s]))});Object.keys(t.toHumanify).forEach(r=>{if(t.toHumanify[r]){const n=(a=>{e.utterances[a].utterances=x.uniq(e.utterances[a].utterances);const r=t.toHumanify[a],n=e.utterances[a].utterances;let i=0;for(let t=0;t<r;t++){const r=St.Execute(n[t],{humanifiersToExecute:s.humanifiersToExecute});e.utterances[a].utterances=e.utterances[a].utterances.concat(r),i+=r.length}let o=e.utterances[a].utterances.length;return e.utterances[a].utterances=x.uniq(e.utterances[a].utterances),{humanifiedRefCount:r,humanifiedUtterancesCount:i,duplicates:o-e.utterances[a].length}})(r);a.humanifiedRefs.push(r),a.humanifiedRefCount+=n.humanifiedRefCount,a.humanifiedUtterancesCount+=n.humanifiedUtterancesCount,a.duplicates+=n.duplicates}});const r=[];return e.convos.forEach(e=>{((e,t)=>(e.conversation.forEach(e=>{if(e.messageText&&t.both.has(e.messageText))return!0}),!1))(e,t)}),e.convos=e.convos.concat(r),a.clonedConvoCount=r.length,a};var Et={possibleOptions:{humanifiers:St.allHumanifiers},CloneTestset:(e,t)=>{const s=new ft,a=s.BuildCompiler(),r=f.join(process.env.BOTIUM_TEMPDIR,`${_(e.name)}_CLONED_${E("Aa0",5)}`);return n.sync(r),K(Tt(e),a,0,s.sources).then(()=>{i(r,e=>{e&&mt(`Failed rimraf ${r}: ${e}`)});const s={},n=bt(a,t);return s.utterances={all:Object.keys(n.all).length,me:n.me.size,bot:n.bot.size,both:n.both.size,neither:n.neither.size,toHumanify:Object.values(n.toHumanify).filter(e=>e).length,allUtteranceCount:n.allUtteranceCount,utterancesToHumanifyCount:n.utterancesToHumanifyCount},s.process=gt(a,n,t),mt(`Cloning finished: ${JSON.stringify(s)}`),yt(a,e.name)})}};const{BotDriver:wt}=o,{FindFullTestSet:Ct,RetrieveTestSetDetails:vt}=W,It=k("botium-box-mutate-testset");var Ot={createTestSet:async(e,{testSet:t},s,a)=>s.db.mutation.createTestSet({data:t},a),async updateTestSet(e,{id:t,testSet:s},a,r){if(!await a.db.exists.TestSet({id:t}))throw new Error(`TestSet not found ${t}`);return a.db.mutation.updateTestSet({where:{id:t},data:s},r)},deleteTestSet:async(e,{id:t},s)=>new Promise((e,a)=>{s.db.mutation.deleteTestSet({where:{id:t}},"{id}").then(()=>e(!0)).catch(e=>a(e))}),createTestSetScript:async(e,{testSetScript:t},s,a)=>s.db.mutation.createTestSetScript({data:t},a),async updateTestSetScript(e,{id:t,testSetScript:s},a,r){if(!await a.db.exists.TestSetScript({id:t}))throw new Error(`TestSetScript not found ${t}`);return a.db.mutation.updateTestSetScript({where:{id:t},data:s},r)},deleteTestSetScript:async(e,{id:t},s)=>new Promise((e,a)=>{s.db.mutation.deleteTestSetScript({where:{id:t}},"{id}").then(()=>e(!0)).catch(e=>a(e))}),async createTestSetRepository(e,{testSetRepository:t},s,a){},async updateTestSetRepository(e,{id:t,testSetRepository:s},a,r){},async deleteTestSetRepository(e,{id:t},s){},createTestSetFolder:async(e,{testSetFolder:t},s,a)=>s.db.mutation.createTestSetFolder({data:t},a),async updateTestSetFolder(e,{id:t,testSetFolder:s},a,r){if(!await a.db.exists.TestSetFolder({id:t}))throw new Error(`TestSetFolder not found ${t}`);return a.db.mutation.updateTestSetFolder({where:{id:t},data:s},r)},deleteTestSetFolder:async(e,{id:t},s)=>new Promise((e,a)=>{s.db.mutation.deleteTestSetFolder({where:{id:t}},"{id}").then(()=>e(!0)).catch(e=>a(e))}),createTestSetExcel:async(e,{testSetExcel:t},s,a)=>s.db.mutation.createTestSetExcel({data:t},a),async updateTestSetExcel(e,{id:t,testSetExcel:s},a,r){if(!await a.db.exists.TestSetExcel({id:t}))throw new Error(`TestSetExcel not found ${t}`);return a.db.mutation.updateTestSetExcel({where:{id:t},data:s},r)},deleteTestSetExcel:async(e,{id:t},s)=>new Promise((e,a)=>{s.db.mutation.deleteTestSetExcel({where:{id:t}},"{id}").then(()=>e(!0)).catch(e=>a(e))}),async cloneTestSet(e,{id:t,options:s},a,r){const n=await Ct(a.db,t);if(!n)throw new Error(`TestSet not found ${t}`);const i=await Et.CloneTestset(n,s),o=`${n.name}/${f.basename(i)}`,c=`${n.name} cloned to "${f.basename(i)}", Humanifiers "${s.humanifiersToExecute&&s.humanifiersToExecute.join(", ")}", percentage ${s.percentToHumanify}.`,d={data:{...n,name:o,client:n.client&&{connect:{id:n.client.id}}||null,description:c,tags:{set:n.tags?[...n.tags,"Cloned"]:["Cloned"]},folders:{create:[{name:"cloned",path:f.resolve(i)}]},repositories:{},scripts:[],excels:{}}};return delete d.data.id,a.db.mutation.createTestSet(d,r)},exportTestSetToGit:async(e,{id:t,options:s},a,r)=>!0,async exportTestSetToFolder(e,{id:t,options:s},a,r){const i=await Ct(a.db,t);if(!i)throw new Error(`TestSet not found ${t}`);const o=i.folders&&i.folders.find(e=>e.id===s.id);if(!o)throw new Error(`Folder ${s.id} not found in Test Set ${t}`);let c=o.path;s.subdirectory&&(c=f.join(c,s.subdirectory));try{n.sync(c),It(`Created output directory ${c}`)}catch(e){throw new Error(`Failed to create output directory ${c}: ${e}`)}const d=(e,t)=>{try{m.writeFileSync(f.join(c,e),t),It(`Wrote file ${e} to output directory ${c}`)}catch(t){throw new Error(`Failed to write file ${e} to output directory ${c}: ${t}`)}};return i.scripts&&i.scripts.forEach(e=>{"SCRIPTING_TYPE_CONVO"===e.scriptType&&d(`${_(e.name)}.convo.txt`,e.script),"SCRIPTING_TYPE_PCONVO"===e.scriptType&&d(`${_(e.name)}.pconvo.txt`,e.script),"SCRIPTING_TYPE_UTTERANCES"===e.scriptType&&d(`${_(e.name)}.utterances.txt`,e.script),"SCRIPTING_TYPE_SCRIPTING_MEMORY"===e.scriptType&&d(`${_(e.name)}.scriptingmemory.txt`,e.script)}),i.excels&&i.excels.forEach(e=>{const t=Buffer.from(e.filecontent,"base64");d(`${_(e.name)}.xlsx`,t)}),!0},async updateTestSetStats(e,{id:t},s,a){const r=await Ct(s.db,t);if(!r)throw new Error(`TestSet not found ${t}`);const o=new wt,c=o.BuildCompiler(),d=f.join(process.env.BOTIUM_TEMPDIR,`${_(r.name)}_STATS_${E("Aa0",5)}`);n.sync(d);const l=vt(r);try{await K(l,c,0,o.sources);const e=c.convos&&c.convos.map(e=>({name:e.header.name,order:e.header.order,description:e.header.description,sourceTag:JSON.stringify(e.sourceTag),stepCount:e.conversation&&e.conversation.length||0}))||[],r=c.partialConvos&&Object.values(c.partialConvos).map(e=>({name:e.header.name,description:e.header.description,sourceTag:JSON.stringify(e.sourceTag),stepCount:e.conversation&&e.conversation.length||0}))||[],n=e.length,u=r.length,p=Object.keys(c.utterances).reduce((e,t)=>e+c.utterances[t].utterances.length,0),h=c.scriptingMemories.length,S=await s.db.query.testSet({where:{id:t}},"{ statsCompiledConvos { id } }");return await s.db.mutation.updateTestSet({where:{id:t},data:{statsUpdatedAt:new Date,statsConvoCount:n||0,statsPartialConvoCount:u||0,statsUtterancesCount:p||0,statsScriptingMemoryCount:h||0,statsCompiledConvos:{create:e.concat(r),deleteMany:{id_in:S.statsCompiledConvos&&S.statsCompiledConvos.map(e=>e.id)||[]}}}},a)}finally{i(d,e=>{e&&It(`Failed rimraf ${d}: ${e}`)})}}};const{updateTestSetStats:Rt}=Ot,Pt=k("botium-box-testset-scanner"),At=(e,t)=>process.env.TESTSETDIR_PUBLIC?f.resolve(process.env.TESTSETDIR_PUBLIC,t):f.resolve(e,t),$t=(e,t)=>m.readdirSync(e).reduce((s,a)=>{const r=f.join(e,a);return t(r)&&s.push(a),s},[]),Nt=async(e,t,s)=>{const a=f.join(t,s);Pt(`scanDirForTestSets scanning ${a} ...`);const r=(e=>$t(e,e=>m.statSync(e).isDirectory()))(a),n=(e=>$t(e,e=>m.statSync(e).isFile()))(a);if(r&&r.length>0)await r.forEach(async a=>{const r=At(t,f.join(s,a));await(async(e,t)=>{let s=await e.query.testSetFolders({where:{path:t}},"{ id name testSet { id name } }");return s&&0!==s.length||(s=await e.query.testSetFolders({where:{path:t+f.sep}},"{ id name testSet { id name } }")),!!(s&&s.length>0)&&(Pt(`Folder ${t} already in use - ${s[0].name} in Test Set ${s[0].testSet.name}`),!0)})(e,r)||await Nt(e,t,f.join(s,a))});else if(n&&n.length>0){const r={data:{name:s.split(f.sep).join("/"),description:`Imported from directory ${a}, ${n.length} files`,expandConvos:!0,expandUtterancesToConvos:!0,expandScriptingMemory:!1,tags:{set:s.split(f.sep)},folders:{create:[{name:s,path:At(t,s)}]}}};try{const t=await e.mutation.createTestSet(r,"{ id }");Pt(`scanDirForTestSets ${s} Imported Test Set ${t.id} with ${n.length} files`),await Rt(void 0,{id:t.id},{db:e}),Pt(`scanDirForTestSets ${s} Updated Test Set Stats ${t.id}`)}catch(e){Pt(`scanDirForTestSets ${s} Failed to create ${r.data}: ${e}`)}}};var _t=e=>{(async()=>{Nt(e,process.env.TESTSETDIR,".")})().catch(e=>{Pt(`scanForTestSets failed: ${e}`)})};const Dt=k("botium-box-server-livechat"),xt=o.BotDriver,kt=process.env.BOTIUMBOX_LIVECHAT_IDLE_TIMEOUT||3e5,Bt={},jt={},qt=({conversationId:e,queueSettings:t,pubsub:s})=>{jt[e]&&clearTimeout(jt[e]),jt[e]=setTimeout(async()=>{const a=new d(t.redis);Dt(`Auto cleanup of conversation ${e} after ${kt}ms idle time`),Lt(e),await a.del(e),s.publish(e,{liveChatConvoStepAdded:{err:`Automatically closed chatbot connection after ${kt}ms idle time`}})},kt)},Lt=async e=>{jt[e]&&clearTimeout(jt[e]),delete jt[e];const t=Bt[e];if(t){try{await t.Stop()}catch(t){Dt(`stopConversation(${e}) Stop failed: ${t}`)}try{await t.Clean()}catch(t){Dt(`stopConversation(${e}) Clean failed: ${t}`)}Dt(`stopConversation(${e}) container stopped.`),delete Bt[e]}},Ft=async({conversationId:e},{queueSettings:t})=>{const s=new d(t.redis),a=await s.get(e);return a&&JSON.parse(a)},Mt=async(e,t,s)=>{await s.set(e,JSON.stringify(t)),await s.expire(e,kt/1e3);const a=await s.ttl(e);Dt(`updateConversation(${e}) TTL(seconds): ${a}`)};var Ut={startListeners:async({db:e,pubsub:t,queueSettings:s})=>new Promise((e,a)=>{const r=new d(s.redis);r.subscribe("livechat.send","livechat.stop",(t,s)=>{t?a(new Error(`Redis subscribe failed: ${t}`)):(Dt(`Livechat Redis connected to ${s} channels.`),e())}),r.on("message",async(e,s)=>{const{conversationId:a,convoStep:r}=JSON.parse(s);if(!Bt[a])return;const n=Bt[a];if("livechat.send"===e){Dt(`liveChatSendToBot(${a}) sending convoStep ${r}`);try{await n.UserSays(r)}catch(e){Dt(`liveChatSendToBot UserSays failed: ${e}`),t.publish(a,{liveChatConvoStepAdded:{err:`${e}`}})}}else"livechat.stop"===e&&Lt(a)})}),startBot:async({caps:e},{pubsub:t,queueSettings:s})=>{const a=new d(s.redis),r=c(),n=new xt(e);var i=new l(async(e,n)=>{try{const n=await Ft({conversationId:r},{queueSettings:s}),i=n.length,o=JSON.stringify(Object.assign(e,{convoStepIndex:i}));t.publish(r,{liveChatConvoStepAdded:{convoStep:o}}),n.push(o),Mt(r,n,a),qt({conversationId:r,queueSettings:s,pubsub:t})}catch(e){Dt(`listenerQueue err: ${e}`)}n()});n.on("MESSAGE_SENTTOBOT",(e,t)=>i.push(t)),n.on("MESSAGE_RECEIVEDFROMBOT",(e,t)=>i.push(t));const o=await n.Build();return Bt[r]=o,Dt(`liveChatStartBot(${r}) container built, now starting`),await o.Start(),Dt(`liveChatStartBot(${r}) container started.`),Mt(r,[],a),qt({conversationId:r,queueSettings:s,pubsub:t}),r},sendToBot:async({conversationId:e,convoStep:t},{queueSettings:s})=>{new d(s.redis).publish("livechat.send",JSON.stringify({conversationId:e,convoStep:t}))},stopBot:async({conversationId:e},{queueSettings:t})=>{new d(t.redis).publish("livechat.stop",JSON.stringify({conversationId:e}))},getConversation:Ft,getConversationScript:async({caps:e,conversationId:t,testCaseName:s},{queueSettings:a})=>{const r=await Ft({conversationId:t},{queueSettings:a});if(!x.isArray(r))throw new Error("Conversation not available (anymore).");const n=new xt(e).BuildCompiler(),i={header:{name:s},conversation:r.map(e=>JSON.parse(e))},o=n.Decompile([i],"SCRIPTING_FORMAT_TXT");return Dt(`Decompiled script: ${o}`),o}};const Jt=k("botium-box-server-agents-utils");const Gt=e=>({ref:e.ref,src:e.src,global:e.global,args:e.args&&JSON.parse(e.args)});var Vt={getServerDefaultCapabilities:e=>({FBPAGERECEIVER_REDISURL:e&&e.queueSettings&&e.queueSettings.redis}),getAttachment:(e,t)=>e.query.testSessionTestCaseResultAttachment({where:{id:t}},"{ id name mimeType base64 testSessionTestCaseResult { testSession { client { id } } } }"),getExcel:(e,t)=>e.query.testSetExcel({where:{id:t}},"{ id filename filecontent testSet { client { id } } }"),lookupApiKey:(e,t)=>{const s=new Date(Date.now()).toISOString();if(!t)return;const a={where:{AND:[{key:t},{OR:[{validFrom:null},{validFrom_lte:s}]},{OR:[{validTo:null},{validTo_gte:s}]}]}};return e.query.apiKeys(a,"{ id name clients { id name } }").then(e=>e&&0!==e.length?(e[0].roles=[{id:"APIKEY",name:"APIKEY",permissions:["*"]}],e[0]):null)},findFullTestSession:(e,t)=>e.query.testSession({where:{id:t}},"{ \n    id \n    name\n    client { id name }\n    description\n    createdAt\n    tags\n    batchCount\n    chatbot { \n      id \n      name\n      description \n      tags\n      capabilities { name type stringValue intValue booleanValue jsonValue } \n      sources { name type stringValue intValue booleanValue jsonValue } \n      envs { name type stringValue intValue booleanValue jsonValue } \n    } \n    testSets { \n      id \n      name\n      description \n      tags\n      expandConvos\n      expandUtterancesToConvos\n      expandUtterancesIncomprehension\n      expandScriptingMemory\n      selectionType\n      scripts { id name script scriptType } \n      repositories { id name giturl gitbranch gitdir gituser gitpassword globFilter } \n      folders { id name path globFilter }\n      excels { id name filename filecontent hasConvos hasPartialConvos hasUtterances worksheetsConvos worksheetsPartialConvos worksheetsUtterances startRow startCol }\n    }\n    deviceSets { id name description tags provider { id name type url username password } devices { id name capabilities } } \n    testProject { id name description tags capabilities { name type stringValue intValue booleanValue jsonValue } }\n    registeredComponents { id name type default src ref global args }\n    agent { id name } \n    capabilities { name type stringValue intValue booleanValue jsonValue } \n    sources { name type stringValue intValue booleanValue jsonValue } \n    envs { name type stringValue intValue booleanValue jsonValue } \n    }"),findSimpleTestSessionResults:(e,t)=>e.query.testSession({where:{id:t}},"{ id name status createdAt\n    client { id name }\n    results { \n      id testcaseName createdAt testcaseSource success err duration \n      testSet { id name tags } \n      testSetRepository { id name gitbranch }\n      testSetFolder { id name }\n      testSetExcel { id name }\n      testSetFilename\n    } }"),findAgentFromJobData:(e,t,s)=>{if(!t.data.name||!t.data.group){const e=`invalid agent event, name or group not given ${t.data}`;return Jt(e),Promise.reject(e)}return e.query.agent({where:{name:t.data.name}},s||"{ id name debug capabilities { name type stringValue intValue booleanValue jsonValue } }")},findAgentFromName:(e,t,s)=>e.query.agent({where:{name:t}},s||"{ id name debug capabilities { name type stringValue intValue booleanValue jsonValue } }"),combineRegisteredComponents:(...e)=>{const t={ASSERTERS:[],LOGIC_HOOKS:[],USER_INPUTS:[]},s={ASSERTER:"ASSERTERS",LOGICHOOK:"LOGIC_HOOKS",USERINPUT:"USER_INPUTS"};return e&&e.forEach(e=>{e&&e.forEach(e=>{const a=s[e.type];if(!a)return;const r=t[a].findIndex(t=>t.ref===e.ref);r>=0?t[a][r]=Gt(e):t[a].push(Gt(e))})}),t},composeBotiumCapabilities:e=>e&&e.reduce((e,t)=>("STRING"!==t.type&&"TEXT"!==t.type||(e[t.name]=t.stringValue?t.stringValue.replace(/\\n/g,"\n"):""),"INT"===t.type&&(e[t.name]=parseInt(t.intValue)),"BOOLEAN"===t.type&&(e[t.name]=!!t.booleanValue),"JSON"===t.type&&(e[t.name]=t.jsonValue),e),{}),combineBotiumCapabilities:(...e)=>{const t={};return e&&e.forEach(e=>{e&&Object.keys(e).forEach(s=>{t[s]=e[s]})}),t}};const Ht=k("botium-box-server-charts-mutation");var Yt={updateChartCacheForTestSession:(e,{testSessionId:t},s,a)=>s.db.query.testSession({where:{id:t}},"{ id status results { success testSet { id } } jobs { status totalCount failedCount successCount } }").then(e=>{if(!e)return;const a={};return"READY"===e.status||"FAILED"===e.status?(a.totalCount=e.jobs.filter(e=>"READY"===e.status||"FAILED"===e.status).reduce((e,t)=>e+(t.totalCount||0),0)||0,a.failedCount=e.jobs.filter(e=>"READY"===e.status||"FAILED"===e.status).reduce((e,t)=>e+(t.failedCount||0),0)||0,a.successCount=e.jobs.filter(e=>"READY"===e.status||"FAILED"===e.status).reduce((e,t)=>e+(t.successCount||0),0)||0):(a.totalCount=e.results.length,a.failedCount=e.results.filter(e=>!e.success).length,a.successCount=e.results.filter(e=>e.success).length),a.countByTestSetId=e.results.reduce((e,t)=>{const s=t.testSet?t.testSet.id:"NULL";return e[s]||(e[s]={totalCount:0,failedCount:0,successCount:0}),e[s].totalCount++,t.success?e[s].successCount++:e[s].failedCount++,e},{}),a.countByDeviceSetId=e.results.reduce((e,t)=>{const s=t.deviceSet?t.deviceSet.id:"NULL";return e[s]||(e[s]={totalCount:0,failedCount:0,successCount:0}),e[s].totalCount++,t.success?e[s].successCount++:e[s].failedCount++,e},{}),Ht(`updateChartCacheForTestSession ${t} chartData updated: ${O.inspect(a)}`),s.db.mutation.updateTestSession({where:{id:e.id},data:{chartData:JSON.stringify(a)}}).then(()=>a)}).then(e=>(s.chartsCache.flush(),e))};const{URL:zt}=u,Wt=k("botium-box-server-agents-testsession"),{RetrieveTestSetDetails:Xt}=W,{updateChartCacheForTestSession:Kt}=Yt;const Qt=new l(async(e,t)=>{const s=x.uniq(e.map(e=>e.testSessionId));Wt(`sendProgressProcessingQueue for testSessionIds: ${s}`),s.forEach(async t=>{try{await Kt(null,{testSessionId:t},e[0].ctx)}catch(e){Wt(`updateChartCacheForTestSession failed: ${e}`)}e[0].ctx.pubsub.publish("TEST_SESSION_PROGRESS",{testSessionProgress:{id:t}})}),t()},{batchSize:1e3,batchDelay:3e3}),Zt=(e,t)=>{Qt.push({testSessionId:t,ctx:e})};var es={startTestSession:async(e,{testSessionId:t})=>{try{const s=await Vt.findFullTestSession(e.db,t);if(!s)throw new Error(`Test Session ${t} not configured`);const a=s.agent?"process.run."+s.agent.name:"process.run";Wt(`startTestSession ${s.id} queueToSend: ${a}`);const r=await e.db.query.registeredComponents({where:{default:!0}}),n=Vt.combineRegisteredComponents(r,s.registeredComponents),i=Vt.combineBotiumCapabilities(n,{PROJECTNAME:s.name},Vt.composeBotiumCapabilities(s.chatbot.capabilities),s.testProject&&Vt.composeBotiumCapabilities(s.testProject.capabilities)||[],Vt.composeBotiumCapabilities(s.capabilities),Vt.getServerDefaultCapabilities(e));Wt(`startTestSession ${s.id} testSessionCaps: ${JSON.stringify(i)}`);const o=Vt.combineBotiumCapabilities(Vt.composeBotiumCapabilities(s.chatbot.sources),Vt.composeBotiumCapabilities(s.sources));Wt(`startTestSession ${s.id} testSessionSources: ${JSON.stringify(o)}`);const c=Vt.combineBotiumCapabilities(Vt.composeBotiumCapabilities(s.chatbot.envs),Vt.composeBotiumCapabilities(s.envs));Wt(`startTestSession ${s.id} testSessionEnvs: ${JSON.stringify(c)}`);const d=s.testSets.map(e=>Xt(e));Wt(`startTestSession ${s.id} testSessionTestSets: ${JSON.stringify(d)}`);let l=1;const u=async(t,r)=>{for(let n=1;n<=l;n++){const i=await e.db.mutation.createTestSessionJob({data:{status:"PENDING",progressPercent:0,testSession:{connect:{id:s.id}}}},"{ id }"),d=e.queueConnector.create(a,{title:`Processing Job #${n}/${l} for Test Session ${s.name}`,testSessionId:s.id,testSessionName:s.name,testSessionJobId:i.id,botium:{Capabilities:t,Sources:o,Envs:c},testSets:r,batchNum:n,batchCount:l}).removeOnComplete(!0).save(async t=>{if(t)return Wt(`Saving batchJob failed: ${t}`);const a=d.id;try{await e.db.mutation.updateTestSessionJob({data:{jobId:a},where:{id:i.id}}),Wt(`TestSessionJob for TestSession ${s.name} registered (jobId: ${a} id: ${i.id})`)}catch(t){Wt(`TestSessionJob for TestSession ${s.name} registration failed (jobId: ${a}): ${t}`)}try{await e.db.mutation.createTestSessionJobLog({data:{log:"Job queued for execution",testSessionJob:{connect:{id:i.id}}}},"{ id }")}catch(t){Wt(`TestSessionJob for TestSession ${s.name} logging failed (jobId: ${a}): ${t}`)}})}};if(s.deviceSets&&s.deviceSets.length>0){const e=s.deviceSets.reduce((e,t)=>[...e,...t.devices.map(e=>{const a=t.provider.url&&new zt(t.provider.url),r=a?{protocol:a&&a.protocol.replace(":",""),host:a&&a.host,port:a&&a.port,path:a&&a.pathname}:{};return"SAUCELABS"===t.provider.type?{deviceSetId:t.id,deviceName:e.name,deviceOptions:Object.assign({desiredCapabilities:Object.assign({},JSON.parse(e.capabilities),{name:s.name,username:t.provider.username,accessKey:t.provider.password})},r)}:"TESTOBJECTS"===t.provider.type?{deviceSetId:t.id,deviceName:e.name,deviceOptions:Object.assign({desiredCapabilities:Object.assign({},JSON.parse(e.capabilities),{testobject_suite_name:s.name,testobject_api_key:t.provider.password})},r)}:"EXPERITEST"===t.provider.type?{deviceSetId:t.id,deviceName:e.name,deviceOptions:Object.assign({desiredCapabilities:Object.assign({},JSON.parse(e.capabilities),{testName:s.name,accessKey:t.provider.password})},r)}:"LOCALSELENIUM"===t.provider.type?{deviceSetId:t.id,deviceName:e.name,deviceOptions:Object.assign({desiredCapabilities:Object.assign({},JSON.parse(e.capabilities),{name:s.name})},r)}:("INTEGRATED"===t.provider.type&&(Wt(`startTestSession ${s.id} adding capability for starting integrated PhantomJS`),i.WEBDRIVERIO_START_PHANTOMJS=!0),{deviceSetId:t.id,deviceName:e.name,deviceOptions:Object.assign({desiredCapabilities:Object.assign({},JSON.parse(e.capabilities),{name:s.name})},r)})})],[]);Wt(`startTestSession ${s.id} testSessionDevices: ${JSON.stringify(e,null,2)}`);let t=Promise.resolve();e.forEach(e=>{const s=t=>t&&t.forEach(t=>{t.sourceTag=Object.assign({},t.sourceTag,{deviceSetId:e.deviceSetId,deviceName:e.deviceName})}),a=x.cloneDeep(d);a.forEach(e=>{s(e.convos),s(e.utterances),s(e.repositories),s(e.folders),s(e.excels)});const r=Object.assign({},i,{WEBDRIVERIO_OPTIONS:e.deviceOptions});t=t.then(()=>u(r,a))}),await t}else await u(i,d)}catch(e){throw Wt(`startTestSession failed: ${e}`),e}},testSessionLog:async(e,{testSessionJobId:t,log:s})=>{try{await e.db.mutation.createTestSessionJobLog({data:{log:s,testSessionJob:{connect:{id:t}}}},"{ id }")}catch(e){throw Wt(`testSessionJobCompleted failed: ${e}`),e}},testSessionProgress:async(e,{testSessionId:t,testSessionJobId:s,batchNum:a,progress:r,...n})=>{try{const{count:r}=await e.db.mutation.updateManyTestSessions({data:{status:"RUNNING"},where:{id:t,status:"PENDING"}});r>0&&Wt(`Test Session Job ${s}/#${a} set Test Session ${t} RUNNING.`)}catch(e){throw Wt(`Test Session Job ${s}/#${a} set Test Session ${t} RUNNING failed: ${e}`),e}try{const{count:n}=await e.db.mutation.updateManyTestSessionJobs({data:{status:"RUNNING",started:new Date(Date.now()).toISOString(),progressPercent:x.isNumber(r)&&r},where:{id:s,status:"PENDING"}});n>0&&Wt(`Test Session Job ${s}/#${a} set Test Session ${t} Job RUNNING.`)}catch(e){throw Wt(`Test Session Job ${s}/#${a} set Test Session ${t} Job RUNNING failed: ${e}`),e}if(x.isNumber(r))try{const{count:t}=await e.db.mutation.updateManyTestSessionJobs({data:{progressPercent:r},where:{id:s,progressPercent_lt:r}});t>0&&Wt(`Test Session Job ${s}/#${a} set Test Session Job progressPercent ${r}.`)}catch(e){throw Wt(`Test Session Job ${s}/#${a} set Test Session Job progressPercent ${r} failed: ${e}`),e}if(n.testcase){const r={testcaseName:n.testcase,testcaseSource:n.source,success:n.success,err:n.err,testSession:{connect:{id:t}}};n.transcript&&(n.transcript.convoBegin&&n.transcript.convoEnd&&(r.duration=D(n.transcript.convoEnd).diff(n.transcript.convoBegin)),n.transcript.steps&&(r.steps={create:n.transcript.steps.map((e,t)=>({step:t,sender:e.expected&&e.expected.sender,expected:x.isString(e.expected)?e.expected:JSON.stringify(e.expected),not:!!e.not,actual:x.isString(e.actual)?e.actual:JSON.stringify(e.actual),stepDuration:e.stepBegin&&e.stepEnd&&D(e.stepEnd).diff(e.stepBegin),botDuration:e.botBegin&&e.botEnd&&D(e.botEnd).diff(e.botBegin),err:e.err}))})),n.sourceTag&&(n.sourceTag.filename&&(r.testSetFilename=n.sourceTag.filename),n.sourceTag.testSetId&&(r.testSet={connect:{id:n.sourceTag.testSetId}}),n.sourceTag.testSetScriptId&&(r.testSetScript={connect:{id:n.sourceTag.testSetScriptId}}),n.sourceTag.testSetRepositoryId&&(r.testSetRepository={connect:{id:n.sourceTag.testSetRepositoryId}}),n.sourceTag.testSetFolderId&&(r.testSetFolder={connect:{id:n.sourceTag.testSetFolderId}}),n.sourceTag.testSetExcelId&&(r.testSetExcel={connect:{id:n.sourceTag.testSetExcelId}}),n.sourceTag.deviceSetId&&(r.deviceSet={connect:{id:n.sourceTag.deviceSetId}}),n.sourceTag.deviceName&&(r.deviceName=n.sourceTag.deviceName)),n.attachments&&(r.attachments={create:n.attachments.map(e=>({name:e.name,mimeType:e.mimeType,base64:e.base64}))});try{const i=await e.db.mutation.createTestSessionTestCaseResult({data:r},"{ id }");Wt(`TestResult for TestCase "${n.testcase}" in TestSession "${t}" registered (jobId: ${s}/#${a} id: ${i.id})`)}catch(e){throw Wt(`TestResult for TestCase "${n.testcase}" in TestSession "${t}" registration failed (jobId: ${s}/#${a}): ${e}`),e}}Wt(`testSessionProgress - Testsession "${t}", Job ${s}/#${a}, progress ${r}, ready.`),Zt(e,t)},testSessionSetJobCompletedResult:async(e,{testSessionId:t,testSessionJobId:s,result:a})=>{try{Wt(`Test Session Job ${s}/${t} completed: ${JSON.stringify(a)}`),await e.db.mutation.updateTestSessionJob({data:{status:"READY",finished:new Date(Date.now()).toISOString(),progressPercent:100,totalCount:a&&a.totalCount,failedCount:a&&a.failedCount,successCount:a&&a.successCount},where:{id:s}},"{ id }"),await e.db.mutation.createTestSessionJobLog({data:{log:"Job completed",testSessionJob:{connect:{id:s}}}},"{ id }"),Zt(e,t)}catch(e){throw Wt(`testSessionJobCompleted failed: ${e}`),e}},testSessionSetJobFailedErr:async(e,{testSessionId:t,testSessionJobId:s,result:a,err:r})=>{try{Wt(`Test Session Job ${s}/${t} failed: ${r}.`),await e.db.mutation.updateTestSessionJob({data:{status:"FAILED",finished:new Date(Date.now()).toISOString(),progressPercent:100,totalCount:a&&a.totalCount,failedCount:a&&a.failedCount,successCount:a&&a.successCount,err:r},where:{id:s}},"{ id }"),await e.db.mutation.createTestSessionJobLog({data:{log:`Job failed: ${r}`,testSessionJob:{connect:{id:s}}}},"{ id }"),Zt(e,t)}catch(r){throw Wt(`testSessionJobFailed failed: ${r}`),r}},testSessionCheckFinished:async(e,{testSessionId:t,testSessionJobId:s})=>{try{const a=await e.db.query.testSession({where:{id:t}},"{ id name status jobs { status finished failedCount } }");if(!a)return;if(a.jobs&&a.jobs.find(e=>"READY"!==e.status&&"FAILED"!==e.status))return void Wt(`Test Session testSessionCheckFinished ${t}/${s} waiting for other jobs to finish.`);const r=a.jobs&&!!a.jobs.find(e=>"FAILED"===e.status),n=a.jobs&&!!a.jobs.find(e=>e.failedCount>0);r||n?(Wt(`testSessionCheckFinished test session ${t}/${a.name} failed (job failed: ${r}, result failed: ${n})`),await e.db.mutation.updateTestSession({where:{id:t},data:{status:"FAILED"}})):(Wt(`testSessionCheckFinished test session ${t}/${a.name} success`),await e.db.mutation.updateTestSession({where:{id:t},data:{status:"READY"}})),Zt(e,t)}catch(e){throw Wt(`testSessionCheckFinished ${t} failed: ${e}`),e}}};const ts=k("botium-box-server-agents-heartbeat");const ss=k("botium-box-server-agents-registeragent");const as=k("botium-box-server-agents"),{startTestSession:rs,testSessionSetJobCompletedResult:ns,testSessionSetJobFailedErr:is,testSessionLog:os,testSessionProgress:cs,testSessionCheckFinished:ds}=es;const ls=k("botium-box-server-testcasecleanup"),us=async(e,t,s,a)=>{const r=await e.db.query.testSessionTestCaseResults({where:{createdAt_lte:t,success:a,attachments_some:{base64_not:""}}},"{ id attachments { id } }");r.length>0?(ls(`Found ${r.length} screenshots to cleanup for ${s} (older than ${t}`),await e.db.mutation.deleteManyTestSessionTestCaseResultAttachments({where:{id_in:r.reduce((e,t)=>e.concat(t.attachments.map(e=>e.id)),[])}})):ls(`Found no screenshots to cleanup for ${s} (older than ${t}`)},ps=async(e,t,s,a)=>{const r=await e.db.query.testSessionTestCaseResults({where:{createdAt_lte:t,success:a,steps_some:{expected_not:""}}},"{ id steps { id } }");r.length>0?(ls(`Found ${r.length} transcripts to cleanup for ${s} (older than ${t}`),await e.db.mutation.deleteManyTestSessionTestCaseResultTranscripts({where:{id_in:r.reduce((e,t)=>e.concat(t.steps.map(e=>e.id)),[])}})):ls(`Found no transcripts to cleanup for ${s} (older than ${t}`)},hs=async(e,t,s,a)=>{const r=await e.db.query.testSessionTestCaseResults({where:{createdAt_lte:t,success:a,testcaseSource_not:""}},"{ id }");r.length>0?(ls(`Found ${r.length} results to cleanup for ${s} (older than ${t}`),await e.db.mutation.updateManyTestSessionTestCaseResults({data:{testcaseSource:""},where:{id_in:r.map(e=>e.id)}})):ls(`Found no results to cleanup for ${s} (older than ${t}`)},Ss=async(e,t)=>{const s=await e.db.query.systemSettingses();if(isNaN(t)&&(!s||!s[0].cleanupJobIntervalMinutes))return void ls("cleanupJobIntervalMinutes not configured, not scheduling cleanup task.");const a=isNaN(t)?60*s[0].cleanupJobIntervalMinutes*1e3:t;let r=[];try{r=await O.promisify(g.Job.rangeByType)("box.testcasecleanup","delayed",0,10,"")}catch(e){ls(`error checking job states: ${e}`)}if(r&&r.length)for(const e of r)try{await O.promisify(e.remove).bind(e)(),ls(`Removed duplicate Scheduled Test Case Cleanup Job ${e.id}.`)}catch(t){return ls(`Removing Scheduled Test Case Cleanup Job ${e.id} failed: ${t}`),void ls("Skipping cleanup job removal.")}return new Promise(t=>{const s=e.queueConnector.create("box.testcasecleanup",{title:"Scheduled Test Case Cleanup Job"}).removeOnComplete(!0).delay(a).save(e=>{if(e)ls(`Scheduling Test Case Cleanup Job failed: ${e}`);else{const e=s.id;ls(`Scheduled Test Case Cleanup Job ${e}, next run delay: ${a}`)}return t()})})};var ms=async e=>{e.queueConnector.process("box.testcasecleanup",async(t,s)=>{try{await(async e=>{ls("runCleanup started ...");const t=await e.db.query.systemSettingses();if(t&&!isNaN(t[0].keepTestCaseSuccessScreenshotsDays)){const s=D().subtract(t[0].keepTestCaseSuccessScreenshotsDays,"days").startOf("day").toDate();try{await us(e,s,"keepTestCaseSuccessScreenshotsDays",!0)}catch(e){ls(`runCleanupScreenshots keepTestCaseSuccessScreenshotsDays failed: ${e}`)}}if(t&&!isNaN(t[0].keepTestCaseFailedScreenshotsDays)){const s=D().subtract(t[0].keepTestCaseFailedScreenshotsDays,"days").startOf("day").toDate();try{await us(e,s,"keepTestCaseFailedScreenshotsDays",!1)}catch(e){ls(`runCleanupScreenshots keepTestCaseFailedScreenshotsDays failed: ${e}`)}}if(t&&!isNaN(t[0].keepTestCaseSuccessConversationDays)){const s=D().subtract(t[0].keepTestCaseSuccessConversationDays,"days").startOf("day").toDate();try{await ps(e,s,"keepTestCaseSuccessConversationDays",!0)}catch(e){ls(`runCleanupTranscripts keepTestCaseSuccessConversationDays failed: ${e}`)}try{await hs(e,s,"keepTestCaseSuccessConversationDays",!0)}catch(e){ls(`runCleanupDetails keepTestCaseSuccessConversationDays failed: ${e}`)}}if(t&&!isNaN(t[0].keepTestCaseFailedConversationDays)){const s=D().subtract(t[0].keepTestCaseFailedConversationDays,"days").startOf("day").toDate();try{await ps(e,s,"keepTestCaseFailedConversationDays",!1)}catch(e){ls(`runCleanupTranscripts keepTestCaseFailedConversationDays failed: ${e}`)}try{await hs(e,s,"keepTestCaseFailedConversationDays",!1)}catch(e){ls(`runCleanupDetails keepTestCaseFailedConversationDays failed: ${e}`)}}})(e),ls("Test Case Cleanup ready."),s(),await Ss(e)}catch(t){ls(`Test Case Cleanup failed: ${t}`),s(),await Ss(e)}}),await Ss(e,0)};const fs=e=>({id:e}),Ts=e=>e&&e.id;var ys={jwtSettings:()=>({secret:process.env.JWT_SECRET,audience:process.env.JWT_AUDIENCE||"botiumbox",issuer:process.env.JWT_ISSUER||"botiumbox"}),userIdToToken:fs,tokenToUserId:Ts,generateToken:e=>p.sign(fs(e.id),process.env.JWT_SECRET,{expiresIn:86400*(process.env.JWT_EXPIRY_DAYS||30),audience:process.env.JWT_AUDIENCE||"botiumbox",issuer:process.env.JWT_ISSUER||"botiumbox",subject:e.id.toString()}),validateToken:async(e,t)=>{const s=p.verify(e,process.env.JWT_SECRET,{audience:process.env.JWT_AUDIENCE||"botiumbox",issuer:process.env.JWT_ISSUER||"botiumbox"});return await t.query.user({where:{id:Ts(s)}},"{ id name email roles { id name permissions } clients { id name } }")}};const{generateToken:bs}=ys;var gs={me:async(e,t,s,a)=>s.request&&s.request.user,async autologin(e,t,s,a){if(s.request&&s.request.user)return{user:s.request.user,token:bs(s.request.user)}}},Es={agents:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"name_ASC",n.db.query.agents({where:t,orderBy:s,skip:a,first:r},i)),agent:(e,{id:t},s,a)=>s.db.query.agent({where:{id:t}},a)};const ws=k("botium-box-server-resolvers-chatbots");var Cs={chatbots:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"name_ASC",n.db.query.chatbots({where:t,orderBy:s,skip:a,first:r},i)),chatbot:(e,{id:t},s,a)=>s.db.query.chatbot({where:{id:t}},a),availablewatsonworkspaces:(e,{url:t,version:s,apikey:a,username:r,password:n})=>new Promise((e,i)=>{const o={url:t,version:s};a?Object.assign(o,{iam_apikey:a}):Object.assign(o,{username:r,password:n}),ws(`listWorkspaces for watson assistant: ${JSON.stringify(o)}`),new h(o).listWorkspaces((t,s)=>{if(t)i(t);else{const t=s.workspaces.map(e=>({name:e.name,description:e.description,value:e.workspace_id}));e(t)}})})};const vs=(e,t)=>{if(!e)return!1;if(!e.roles)return!1;if("admin"!==e.name&&process&&process.env&&process.env.BOTIUMBOX_DISABLE_PERMISSIONS&&process.env.BOTIUMBOX_DISABLE_PERMISSIONS.indexOf(t)>=0)return!1;for(const s of e.roles)if(s.permissions)for(const e of s.permissions)if(e.endsWith("*")){if(t.startsWith(e.substr(0,e.length-1)))return!0}else if(e.startsWith("*")){if(t.endsWith(e.substr(1)))return!0}else if(e===t)return!0;return!1};var Is={permissionTypes:{AGENTS_SELECT:"AGENTS_SELECT",AGENTS_CREATE:"AGENTS_CREATE",AGENTS_UPDATE:"AGENTS_UPDATE",AGENTS_DELETE:"AGENTS_DELETE",CHATBOTS_SELECT:"CHATBOTS_SELECT",CHATBOTS_CREATE:"CHATBOTS_CREATE",CHATBOTS_UPDATE:"CHATBOTS_UPDATE",CHATBOTS_DELETE:"CHATBOTS_DELETE",CHATBOTS_LIVECHAT:"CHATBOTS_LIVECHAT",DEVICESETS_SELECT:"DEVICESETS_SELECT",DEVICESETS_CREATE:"DEVICESETS_CREATE",DEVICESETS_UPDATE:"DEVICESETS_UPDATE",DEVICESETS_DELETE:"DEVICESETS_DELETE",TESTPROJECTS_SELECT:"TESTPROJECTS_SELECT",TESTPROJECTS_CREATE:"TESTPROJECTS_CREATE",TESTPROJECTS_UPDATE:"TESTPROJECTS_UPDATE",TESTPROJECTS_DELETE:"TESTPROJECTS_DELETE",TESTSETS_SELECT:"TESTSETS_SELECT",TESTSETS_CREATE:"TESTSETS_CREATE",TESTSETS_UPDATE:"TESTSETS_UPDATE",TESTSETS_DELETE:"TESTSETS_DELETE",TESTSESSIONS_SELECT:"TESTSESSIONS_SELECT",TESTSESSIONS_CREATE:"TESTSESSIONS_CREATE",TESTSESSIONS_DELETE:"TESTSESSIONS_DELETE",TESTSESSIONS_REPORTS:"TESTSESSIONS_REPORTS",APIKEYS_SELECT:"APIKEYS_SELECT",APIKEYS_MANAGE:"APIKEYS_MANAGE",DEVICEPROVIDERS_SELECT:"DEVICEPROVIDERS_SELECT",DEVICEPROVIDERS_MANAGE:"DEVICEPROVIDERS_MANAGE",REGISTEREDCOMPONENTS_SELECT:"REGISTEREDCOMPONENTS_SELECT",REGISTEREDCOMPONENTS_MANAGE:"REGISTEREDCOMPONENTS_MANAGE",USERS_MANAGE:"USERS_MANAGE",SYSTEMSETTINGS_MANAGE:"SYSTEMSETTINGS_MANAGE"},hasPermission:vs,hasAnyPermission:(e,t)=>{for(const s of t)if(vs(e,s))return!0;return!1},hasAllPermissions:(e,t)=>{for(const s of t)if(!vs(e,s))return!1;return!0}};var Os={isLoggedIn:e=>{const t=(e=>x.get(e,"request.user"))(e),s=(e=>x.get(e,"request.apiKey"))(e),a=(e=>x.get(e,"connection.context.user"))(e);if(!t&&!s&&!a)throw new Error("Not logged in");return t||s||a},getClientIdFilter:e=>{return null},withClientConnect:(e,t,s)=>{if(s&&!e.client&&(e.client={connect:{id:s}}),e.client&&e.client.connect&&e.client.connect.id){if(!t)throw new Error("Unauthorized, missing client access");if(!t.find(t=>t.id===e.client.connect.id))throw new Error("Unauthorized, missing client access")}return e},withClientFilter:(e,t,s)=>{return{AND:[e||{}]}},assertClient:(e,t)=>{if(e&&(!t||!t.find(t=>t.id===e)))throw new Error("Unauthorized, missing client access")}};const Rs=k("botium-box-server-livechat"),{hasPermission:Ps}=Is,{isLoggedIn:As,getClientIdFilter:$s,withClientConnect:Ns}=Os,{startBot:_s,sendToBot:Ds,stopBot:xs,getConversation:ks,getConversationScript:Bs}=Ut,{composeBotiumCapabilities:js,combineBotiumCapabilities:qs,getServerDefaultCapabilities:Ls}=Vt,Fs=async(e,t,s)=>{const a=await t.query.chatbot({where:{id:e}},"{ id name capabilities { name type stringValue intValue booleanValue jsonValue } }");return qs(js(a.capabilities),Ls({queueSettings:s}))};var Ms={liveChatConvoStepAdded:{subscribe:(e,{conversationId:t},{pubsub:s})=>s.asyncIterator(t)}},Us={async liveChatConvoSteps(e,{conversationId:t},s){try{return ks({conversationId:t},s)}catch(e){throw Rs(e),new Error(`Conversation ${t} not available.`)}}},Js={async liveChatStartBot(e,{chatbotId:t},{db:s,pubsub:a,queueSettings:r}){const n=await Fs(t,s,r);return await _s({caps:n},{pubsub:a,queueSettings:r})},liveChatSendToBot:async(e,{conversationId:t,convoStep:s},{queueSettings:a})=>(await Ds({conversationId:t,convoStep:JSON.parse(s)},{queueSettings:a}),!0),liveChatStopBot:async(e,{conversationId:t},{queueSettings:s})=>(await xs({conversationId:t},{queueSettings:s}),!0),async liveChatSaveConvoSteps(e,{chatbotId:t,conversationId:s,testSetId:a,newTestSetName:r,testCaseName:n},i){const o=As(i),c=await Fs(t,i.db,i.queueSettings);let d=null;if(r){if(!Ps(o,"TESTSETS_CREATE"))throw new Error("Missing permission TESTSETS_CREATE");d=await i.db.mutation.createTestSet({data:Ns({name:r},o.clients,$s(i))},"{ id name }")}else d=await i.db.query.testSet({where:{id:a}},"{ id name }");Rs(`liveChatSaveConvoSteps(${s}) saving test case for test set ${d.id}/${d.name}`);const l=await Bs({caps:c,conversationId:s,testCaseName:n},i);let u=await i.db.mutation.createTestSetScript({data:{name:n,script:l,scriptType:"SCRIPTING_TYPE_CONVO",testSet:{connect:{id:d.id}}}},"{ id name }");return Rs(`liveChatSaveConvoSteps(${s}) saved test case for test set ${d.id}/${d.name} - ${u.id}/${u.name}`),u.id}},Gs={testsessions:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"createdAt_DESC",a=isNaN(a)?0:a,r=isNaN(r)?100:r,n.db.query.testSessions({where:t,orderBy:s,skip:a,first:r},i)),testsession:(e,{id:t},s,a)=>s.db.query.testSession({where:{id:t}},a),testsessiontestcaseresult:(e,{id:t},s,a)=>s.db.query.testSessionTestCaseResult({where:{id:t}},a),testsessionjoblogs:(e,{jobId:t,orderBy:s,skip:a,first:r},n,i)=>n.db.query.testSessionJobLogs({where:{testSessionJob:{id:t}},orderBy:s,skip:a,first:r},i)},Vs={testsets:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"name_ASC",n.db.query.testSets({where:t,orderBy:s,skip:a,first:r},i).then(e=>(e&&e.forEach(e=>{e.repositories&&e.repositories.forEach(e=>{delete e.gitpassword})}),e))),testset:(e,{id:t},s,a)=>s.db.query.testSet({where:{id:t}},a).then(e=>(e.repositories&&e.repositories.forEach(e=>{delete e.gitpassword}),e)),testsetscripts:(e,{testSetId:t,skip:s,first:a},r,n)=>r.db.query.testSetScripts({where:{testSet:{id:t}},skip:s,first:a},n),testsetscript:(e,{id:t},s,a)=>s.db.query.testSetScript({where:{id:t}},a),validatetestsetscript(e,{script:t,scriptType:s}){const a=new S({AddConvos:()=>{},AddPartialConvos:()=>{},AddUtterances:()=>{},AddScriptingMemories:()=>{},IsAsserterValid:()=>!0,IsLogicHookValid:()=>!0,IsUserInputValid:()=>!0,GetPartialConvos:()=>[],scriptingEvents:{}},{SCRIPTING_TXT_EOL:"\n"}).Compile(t,s);return a&&a.length>0?"SCRIPTING_TYPE_UTTERANCES"===s?Promise.resolve({name:a[0].name,description:"Utterances",script:t,scriptType:s}):"SCRIPTING_TYPE_SCRIPTING_MEMORY"===s?Promise.resolve({name:"Scripting Memory",description:`Test Cases: ${a.map(e=>e.header.name).join("/")}`,script:t,scriptType:s}):Promise.resolve({name:a[0].header.name,description:a[0].header.description,script:t,scriptType:s}):Promise.reject(new Error("no script provided"))},testsetrepositories:(e,{testSetId:t,skip:s,first:a},r,n)=>r.db.query.testSetRepositories({where:{testSet:{id:t}},skip:s,first:a},n).then(e=>(e&&e.forEach(e=>{delete e.gitpassword}),e)),testsetrepository:(e,{id:t},s,a)=>s.db.query.testSetRepository({where:{id:t}},a).then(e=>(e&&delete e.password,e)),testsetfolders:(e,{testSetId:t,skip:s,first:a},r,n)=>r.db.query.testSetFolders({where:{testSet:{id:t}},skip:s,first:a},n),testsetfolder:(e,{id:t},s,a)=>s.db.query.testSetFolder({where:{id:t}},a),testsetexcels:(e,{testSetId:t,skip:s,first:a},r,n)=>r.db.query.testSetExcels({where:{testSet:{id:t}},skip:s,first:a},n),testsetexcel:(e,{id:t},s,a)=>s.db.query.testSetExcel({where:{id:t}},a),clonetestsetoptions:(e,t,s,a)=>Et.possibleOptions};const Hs=new z(3600);var Ys={devicesets:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"name_ASC",n.db.query.deviceSets({where:t,orderBy:s,skip:a,first:r},i)),deviceset:(e,{id:t},s,a)=>s.db.query.deviceSet({where:{id:t}},a),async availabledevices(e,{provider:t},s){const a=await s.db.query.deviceProvider({where:{id:t}});if(!a)return[];let r=[];"SAUCELABS"===a.type?r=await Hs.get("SAUCELABS",()=>N({url:"https://saucelabs.com/rest/v1/info/platforms/all",json:!0}).then(e=>{return e.filter(e=>!e.device).map(e=>({name:`${e.long_name} ${e.short_version}, ${e.os}`,value:JSON.stringify({type:"DESKTOP",capabilities:{browserName:e.api_name,platform:e.os,version:e.short_version}})})).concat(e.filter(e=>e.device).map(e=>({name:`${e.long_name}, ${e.short_version}`,value:JSON.stringify({type:"MOBILEBROWSER",capabilities:{browserName:["iphone","ipad"].indexOf(e.api_name)>=0?"Safari":"Chrome",deviceName:e.device,platformName:["iphone","ipad"].indexOf(e.api_name)>=0?"iOS":"Android",platformVersion:e.short_version}})})))})):"TESTOBJECTS"===a.type?a.username&&a.password&&(r=await Hs.get("TESTOBJECTS_"+a.url,()=>N({url:"https://app.testobject.com/api/rest/v2/devices",json:!0}).auth(a.username,a.password).then(e=>{return e[a.url.includes("eu1")?"EU":"US"].map(e=>({name:`${e.name}, ${e.os}, ${e.osVersion}`,value:JSON.stringify({type:"MOBILEAPP",capabilities:{deviceName:e.name,platformName:e.os,platformVersion:e.osVersion}})}))}))):"EXPERITEST"===a.type&&(r=await Hs.get("EXPERITEST",()=>N({url:"https://cloud.seetest.io/api/v1/devices",headers:{Authorization:`Bearer ${a.password}`},json:!0}).then(e=>{return e.data&&e.data.filter(e=>e.deviceName).map(e=>({name:`${e.deviceName}, ${e.deviceOs} ${e.osVersion}`,value:JSON.stringify({type:"MOBILEBROWSER",capabilities:{browserName:"iOS"===e.deviceOs?"Safari":"Chrome",platformName:e.deviceOs,platformVersion:e.osVersion,deviceManufacturer:e.manufacturer,deviceModel:e.model,deviceCategory:e.deviceCategory}})}))})));const n=(r||[]).concat((e=>{const t=f.join("resources",`${e.type}.json`);if(m.existsSync(t)){const e=JSON.parse(m.readFileSync(t,"utf8"));if(x.isArray(e)){let t=e.filter(e=>e.name&&e.value).map(e=>({name:e.name,value:JSON.stringify(e.value)}));return x.uniqBy(x.orderBy(t,"name","asc"),"name")}}return[]})(a)||[]);return x.uniqBy(x.orderBy(n,"name","asc"),"name")}},zs={testprojects:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"name_ASC",n.db.query.testProjects({where:t,orderBy:s,skip:a,first:r},i)),testproject:(e,{id:t},s,a)=>s.db.query.testProject({where:{id:t}},a)},Ws={users:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"name_ASC",n.db.query.users({where:t,orderBy:s,skip:a,first:r},i)),user:(e,{id:t},s,a)=>s.db.query.user({where:{id:t}},a),userroles:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"name_ASC",n.db.query.userRoles({where:t,orderBy:s,skip:a,first:r},i)),clients:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"name_ASC",n.db.query.clients({where:t,orderBy:s,skip:a,first:r},i)),apikeys:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"name_ASC",n.db.query.apiKeys({where:t,orderBy:s,skip:a,first:r},i)),apikey:(e,{id:t},s,a)=>s.db.query.apiKey({where:{id:t}},a),deviceproviders:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"name_ASC",n.db.query.deviceProviders({where:t,orderBy:s,skip:a,first:r},i).then(e=>(e&&e.forEach(e=>{delete e.password}),e))),deviceprovider:(e,{id:t},s,a)=>s.db.query.deviceProvider({where:{id:t}},a).then(e=>(e&&delete e.password,e)),registeredcomponents:(e,{where:t,orderBy:s,skip:a,first:r},n,i)=>(s=s||"name_ASC",n.db.query.registeredComponents({where:t,orderBy:s,skip:a,first:r},i)),registeredcomponent:(e,{id:t},s,a)=>s.db.query.registeredComponent({where:{id:t}},a),systemsettings:(e,t,s,a)=>s.db.query.systemSettingses({skip:0,first:1},a).then(e=>e&&e.length&&e[0]),availableconnectors(e,t,s,a){const r=[{name:"echo",description:"Botium Sample Chatbot (Echo)"},{name:"watson",description:"IBM Watson Assistant API"},{name:"directline3",description:"Microsoft Bot Framework (Directline 3)"},{name:"dialogflow",description:"Google Dialogflow"},{name:"koreai-webhook",description:"Kore.ai"},{name:"fbpagereceiver",description:"Facebook Messenger Bots"},{name:"botkit",description:"Botkit Anywhere"},{name:"botpress",description:"Botpress.io"},{name:"simplerest",description:"Generic HTTP/JSON Interface"},{name:"lex",description:"Amazon Lex"},{name:"alexa-avs",description:"Alexa Voice Service"},{name:"alexa-smapi",description:"Alexa Skill Management API"},{name:"luis",description:"Microsoft LUIS"},{name:"google-assistant",description:"Google Assistant"},{name:"wechat",description:"Wechat Webhook"},{name:"webdriverio",description:"WebdriverIO (Selenium or Appium)"}],n=[{name:"docker",description:"Dockerize Facebook/Slack/Botkit Chatbot"},{name:"fbdirect",description:"Connect Live Facebook Chatbot"},{name:"webspeech",description:"Webspeech (Talk/Listen)"}];if(process.env.BOTIUMBOX_DISABLE_CONNECTORS){process.env.BOTIUMBOX_DISABLE_CONNECTORS.split(",").forEach(e=>r.findIndex(t=>t.name===e)>=0&&r.splice(r.findIndex(t=>t.name===e),1))}if(process.env.BOTIUMBOX_ENABLE_CONNECTORS){process.env.BOTIUMBOX_ENABLE_CONNECTORS.split(",").forEach(e=>{r.findIndex(t=>t.name===e)>=0||(n.findIndex(t=>t.name===e)>=0?r.push(n.find(t=>t.name===e)):r.push({name:e,value:e,description:e}))})}return r.forEach(e=>{e.value=e.name}),x.sortBy(r,"description")}};const Xs=k("botium-box-server-charts-query"),{updateChartCacheForTestSession:Ks}=Yt,{isLoggedIn:Qs,getClientIdFilter:Zs,withClientFilter:ea}=Os,ta=e=>"TODAY"===e?D().utc().startOf("day"):"LASTWEEK"===e?D().utc().subtract(6,"days").startOf("day"):"LAST2WEEKS"===e?D().utc().subtract(13,"days").startOf("day"):"LASTMONTH"===e?D().utc().subtract(30,"days").startOf("day"):"LAST2MONTHS"===e?D().utc().subtract(60,"days").startOf("day"):void 0,sa=e=>D().utc().endOf("day"),aa=(e,t)=>{let s=Promise.resolve();return t&&t.forEach(t=>{s=s.then(()=>{if(!t.chartData)return Ks(null,{testSessionId:t.id},e).then(e=>{t.chartData=e});t.chartData=JSON.parse(t.chartData)})}),s};var ra={chartFailedCountByTestSetByDay(e,{testProjectId:t,timeFrame:s},a,r){const n=Qs(a),i=ta(s||"LAST2WEEKS"),o=sa();Xs(`called chartFailedCountByTestSetByDay ${i} - ${o}`);const c=`chartFailedCountByTestSetByDay_${JSON.stringify({fromDate:i,testProjectId:t,clientId:Zs(a)})}`;return a.chartsCache.get(c,()=>{const e=ea({status_in:["READY","FAILED"],createdAt_gte:D(i).toDate(),createdAt_lte:D(o).toDate(),jobs_every:{status:"READY"}},n.clients,Zs(a));return t&&(e.testProject={id:t}),a.db.query.testSessions({where:e},"{ id createdAt testSets { id name } chartData }").then(e=>aa(a,e).then(()=>e)).then(e=>{if(!e)return;const t=e.filter(e=>e.chartData).reduce((e,t)=>e.concat(t.testSets.map(e=>({testSet:e,createdAt:t.createdAt,chartData:t.chartData.countByTestSetId[e.id]}))),[]).filter(e=>e.chartData),s=x.groupBy(t,e=>e.testSet.id),a={};Object.keys(s).forEach(e=>{a[e]=s[e][0].testSet.name,s[e]=x.groupBy(s[e],e=>D.utc(e.createdAt).startOf("day")),Object.keys(s[e]).forEach(t=>{const a=s[e][t];s[e][t]=Math.ceil(a.reduce((e,t)=>e+t.chartData.failedCount,0)/a.length)})});const r=[];for(const e=D(i);e.isBefore(o);e.add(1,"days"))r.push(D(e));const n=Object.keys(s).map(e=>({id:e,name:a[e],data:r.map(t=>s[e][t])}));return x.sortBy(n,"name")})})},chartFailedCountByChatbotByDay(e,{timeFrame:t},s,a){const r=Qs(s),n=ta(t||"LAST2WEEKS"),i=sa();Xs(`called chartFailedCountByChatbotByDay ${n} - ${i}`);const o=`chartFailedCountByChatbotByDay_${JSON.stringify({fromDate:n,clientId:Zs(s)})}`;return s.chartsCache.get(o,()=>s.db.query.testSessions(ea({where:{status_in:["READY","FAILED"],createdAt_gte:D(n).toDate(),createdAt_lte:D(i).toDate(),jobs_every:{status:"READY"}}},r.clients,Zs(s)),"{ id createdAt chatbot { id name } chartData }").then(e=>aa(s,e).then(()=>e)).then(e=>{if(!e)return;const t=x.groupBy(e,e=>e.chatbot.id),s={};Object.keys(t).forEach(e=>{s[e]=t[e][0].chatbot.name,t[e]=x.groupBy(t[e],e=>D.utc(e.createdAt).startOf("day")),Object.keys(t[e]).forEach(s=>{const a=t[e][s];t[e][s]=Math.ceil(a.reduce((e,t)=>e+t.chartData.failedCount,0)/a.length)})});const a=[];for(const e=D(n);e.isBefore(i);e.add(1,"days"))a.push(D(e));const r=Object.keys(t).map(e=>({id:e,name:s[e],data:a.map(s=>t[e][s])}));return x.sortBy(r,"name")}).then(e=>e.filter(e=>e.data&&e.data.filter(e=>!isNaN(e)).length>0)))},chartTestSetResultCount(e,{testProjectId:t},s,a){const r=Qs(s),n=`chartTestSetResultCount_${JSON.stringify({testProjectId:t,clientId:Zs(s)})}`;return s.chartsCache.get(n,()=>s.db.query.testSets({orderBy:"name_ASC"},"{ id name }").then(e=>Promise.all(e.map(e=>{const a=ea({status_in:["READY","FAILED"],testSets_some:{id:e.id},jobs_every:{status:"READY"}},r.clients,Zs(s));return t&&(a.testProject={id:t}),s.db.query.testSessions({where:a,orderBy:"createdAt_DESC",skip:0,first:2},"{ id createdAt chartData }").then(e=>aa(s,e).then(()=>e)).then(t=>{const s={id:e.id,name:e.name,testCaseLastTotalCount:0,testCaseLastSuccessCount:0,testCaseLastSuccessRate:0,testCasePreviousTotalCount:0,testCasePreviousSuccessCount:0,testCasePreviousSuccessRate:0,testCaseTrend:"UNKNOWN"};if(t&&t.length>0){const a=t[0].chartData.countByTestSetId[e.id];s.lastRun=t[0].createdAt,s.lastTestSessionId=t[0].id,s.testCaseLastTotalCount=a?a.totalCount:0,s.testCaseLastSuccessCount=a?a.successCount:0,s.testCaseLastSuccessRate=s.testCaseLastTotalCount===s.testCaseLastSuccessCount?100:s.testCaseLastSuccessCount/s.testCaseLastTotalCount*100}if(t&&t.length>1){const a=t[1].chartData.countByTestSetId[e.id];s.previousRun=t[1].createdAt,s.previousTestSessionId=t[1].id,s.testCasePreviousTotalCount=a?a.totalCount:0,s.testCasePreviousSuccessCount=a?a.successCount:0,s.testCasePreviousSuccessRate=s.testCasePreviousTotalCount===s.testCasePreviousSuccessCount?100:s.testCasePreviousSuccessCount/s.testCasePreviousTotalCount*100,s.testCaseLastSuccessRate>s.testCasePreviousSuccessRate?s.testCaseTrend="GOOD":s.testCaseLastSuccessRate<s.testCasePreviousSuccessRate?s.testCaseTrend="BAD":s.testCaseTrend="CONSTANT"}return s})}))).then(e=>{const t=e.filter(e=>e.testCaseLastTotalCount>0);return x.orderBy(t,"lastRun","desc")}))},chartTestProjectTrainingStatusByTestSet(e,{testProjectId:t},s,a){const r=Qs(s),n=`chartTestProjectTrainingStatusByTestSet_${JSON.stringify({testProjectId:t,clientId:Zs(s)})}`;return s.chartsCache.get(n,async()=>{const e=ea({status_in:["READY","FAILED"],testProject:{id:t},jobs_every:{status:"READY"}},r.clients,Zs(s)),a=await s.db.query.testSessions({where:e,orderBy:"createdAt_DESC",skip:0,first:1},"{ id createdAt testSets { id name } chartData }");return a&&0!==a.length?(await aa(s,a),a[0].testSets.forEach(e=>{const t=a[0].chartData.countByTestSetId[e.id];e.totalCount=t?t.totalCount:0,e.successCount=t?t.successCount:0,e.failedCount=t?t.failedCount:0}),x.sortBy(a[0].testSets,"name")):[]})},chartTestProjectTrainingStatusByDeviceSet(e,{testProjectId:t},s,a){const r=Qs(s),n=`chartTestProjectTrainingStatusByDeviceSet_${JSON.stringify({testProjectId:t,clientId:Zs(s)})}`;return s.chartsCache.get(n,async()=>{const e=ea({status_in:["READY","FAILED"],testProject:{id:t},jobs_every:{status:"READY"}},r.clients,Zs(s)),a=await s.db.query.testSessions({where:e,orderBy:"createdAt_DESC",skip:0,first:1},"{ id createdAt deviceSets { id name } chartData }");if(!a||0===a.length)return[];await aa(s,a);const n=a[0].deviceSets||[];n.forEach(e=>{const t=a[0].chartData.countByDeviceSetId[e.id];e.totalCount=t?t.totalCount:0,e.successCount=t?t.successCount:0,e.failedCount=t?t.failedCount:0});const i=a[0].chartData.countByDeviceSetId.NULL;return i&&n.push({id:"",name:"No Device Set",totalCount:i.totalCount,successCount:i.successCount,failedCount:i.failedCount}),x.sortBy(n,"name")})}};const na=y.Strategy,{generateToken:ia}=(k("botium-box-server-passport"),ys);var oa={loadStrategy:async e=>{const t=e();T.use(new na(async(e,s,a)=>{try{const r={OR:[{name:e},{email:e}]},n=await t.db.query.users({where:r},"{ id name password email roles { id name permissions } clients { id name } }");if(!n||0===n.length)return a(null,!1,{message:`No such user found: ${e}`});const i=n[0];return i.password&&await w.compare(s,i.password)?(delete i.password,a(null,i)):a(null,!1,{message:"Invalid password."})}catch(e){return a(e)}}))},authenticate:(e,t)=>new Promise((s,a)=>{T.authenticate(t||"local",(e,t,r)=>e?a(e):t?void s({token:ia(t),user:t}):a(new Error(r.message)))(e.request,e.response,()=>{})})};const{authenticate:ca}=oa;var da={login:async(e,{name:t,email:s,password:a},r,n)=>(r.request.body={username:t||s,password:a},"admin"===t?ca(r,"local"):ca(r))};const la=k("botium-box-server-agents-mutation"),ua=(e,t)=>{e.forEach(e=>{const s=`agent.reconfigure.${e}`;t.queueConnector.create(s,{title:`Reconfigure Agent ${e}`}).removeOnComplete(!0).save(t=>{if(t)return la(`Saving reconfigure job failed: ${t}`);la(`Sent reconfigure job to ${e}`)})})};var pa={async createAgent(e,{agent:t},s,a){},async updateAgent(e,{id:t,agent:s},a,r){if(!await a.db.exists.Agent({id:t}))throw new Error(`Agent not found ${t}`);const n=await a.db.mutation.updateAgent({where:{id:t},data:s},r),i=(await a.db.query.agent({where:{id:t}})).name;if("Default Agent"===i){const e=await a.db.query.agents({where:{name_not:"Default Agent"}});ua(e.map(e=>e.name),a)}else ua([i],a);return n},async deleteAgent(e,{id:t},s){}},ha={createChatbot:async(e,{chatbot:t},s,a)=>s.db.mutation.createChatbot({data:t},a),async updateChatbot(e,{id:t,chatbot:s},a,r){if(!await a.db.exists.Chatbot({id:t}))throw new Error(`Chatbot not found ${t}`);return a.db.mutation.updateChatbot({where:{id:t},data:s},r)},deleteChatbot:async(e,{id:t},s)=>(await s.db.mutation.deleteChatbot({where:{id:t}},"{id}"),!0)};const Sa=k("botium-box-server-mutation-testsession");var ma={createTestSession:async(e,{testSession:t},s,a)=>s.db.mutation.createTestSession({data:t},a).then(e=>new Promise((a,r)=>{s.queueConnector.create("box.createprocessingjobs",{title:`Job Creation Job for Test Session ${t.name}`,testSessionId:e.id}).removeOnComplete(!0).save(t=>{if(t)return r(t);a(e)})})),deleteTestSession:async(e,{id:t},s)=>new Promise((e,a)=>{s.db.mutation.deleteManyTestSessionJobLogs({where:{testSessionJob:{testSession:{id:t}}}}).then(()=>s.db.mutation.deleteManyTestSessionJobs({where:{testSession:{id:t}}})).then(()=>s.db.mutation.deleteManyTestSessionTestCaseResults({where:{testSession:{id:t}}})).then(()=>s.db.mutation.deleteTestSession({where:{id:t}},"{id}")).then(()=>e(!0)).catch(e=>(Sa(`Error deleting test session ${t}: ${e}`),a(e)))}),async cancelTestSession(e,{id:t},s){const a=await s.db.query.testSession({where:{id:t}},"{ id name jobs { jobId } }");return!!a&&(a.jobs.filter(e=>e.jobId).forEach(async e=>{g.Job.remove(e.jobId,t=>{Sa(t?`cancelTestSession - Failed to remove job ${e.jobId}: ${t}`:`cancelTestSession - removed job ${e.jobId}`)})}),(await s.db.query.agents({where:{}},"{ id name }")).forEach(async e=>{Sa(`cancelTestSession - sending cancel test session event ${a.id}/${a.name} to agent ${e.id}/${e.name}`),await s.queueConnector.create(`process.cancel.${e.name}`,{title:`Cancel Test Session Job for Test Session ${a.id}/${a.name}, Agent ${e.name}`,testSessionId:a.id,testSessionName:a.name}).removeOnComplete(!0).save(e=>{if(e)throw e})}),!0)}};const fa=ma.createTestSession,Ta=k("botium-box-server-mutation-testproject"),ya=(e,t,s,a)=>{const r={testSession:Object.assign({},{status:"PENDING",chatbot:{connect:{id:t.chatbot.id}},testSets:{connect:t.testSets&&t.testSets.map(e=>({id:e.id}))},deviceSets:{connect:t.deviceSets&&t.deviceSets.map(e=>({id:e.id}))},registeredComponents:{connect:t.registeredComponents&&t.registeredComponents.map(e=>({id:e.id}))},testProject:{connect:{id:t.id}},batchCount:t.batchCount},s)};return t.client&&(r.testSession.client={connect:{id:t.client.id}}),t.agent&&(r.testSession.agent={connect:{id:t.agent.id}}),fa(e,r,a,"{ id }")};var ba={createTestProject:async(e,{testProject:t},s,a)=>s.db.mutation.createTestProject({data:{...t,code:_(t.name)}},a),startTestProject:async(e,{id:t,code:s},a)=>a.db.query.testProject({where:{id:t,code:s}},"{ id name client { id } chatbot { id } testSets { id } deviceSets { id } agent { id } registeredComponents { id } batchCount }").then(r=>{if(!r)throw new Error(`Test Project ${t}/${s} not found`);return ya(e,r,{name:r.name+" - Test Session",tags:{set:["BoxTriggered"]}},a)}).then(e=>e.id),quickstartTestProject:async(e,{testProject:t,startProject:s},a)=>a.db.mutation.createTestProject({data:{...t,code:_(t.name)}},"{ id name client { id } chatbot { id } testSets { id } deviceSets { id } agent { id } registeredComponents { id } batchCount }").then(t=>s?ya(e,t,{name:t.name+" - Initial Test Session",tags:{set:["QuickStart"]}},a).then(e=>e.id):t.id),async updateTestProject(e,{id:t,testProject:s},a,r){if(!await a.db.exists.TestProject({id:t}))throw new Error(`TestProject not found ${t}`);return a.db.mutation.updateTestProject({where:{id:t},data:{...s,code:_(s.name)}},r)},deleteTestProject:async(e,{id:t},s)=>new Promise((e,a)=>{s.db.mutation.deleteTestProject({where:{id:t}},"{id}").then(()=>e(!0)).catch(e=>(Ta(`Error deleting TestProject ${t}: ${e}`),a(e)))})};const ga=k("botium-box-server-mutation-settings");let Ea=["LOCALSELENIUM"];var wa={createUser:async(e,{user:t},s,a)=>(t.password&&(t.password=await w.hash(t.password,10)),s.db.mutation.createUser({data:t},a)),async updateUser(e,{id:t,user:s},a,r){const n=await a.db.query.user({where:{id:t}});if(!n)throw new Error(`User not found ${t}`);return s.password&&(s.password=await w.hash(s.password,10)),"admin"===n.name&&(s.name="admin",s.roles={connect:[{name:"ADMIN"}]}),a.db.mutation.updateUser({where:{id:t},data:s},r)},async deleteUser(e,{id:t},s){const a=await s.db.query.user({where:{id:t}});if(!a)return!0;if("admin"===a.name)throw new Error('Not allowed to delete user "admin"');return s.db.mutation.deleteUser({where:{id:t}},"{id}").then(()=>!0).catch(e=>{throw ga(`Error deleting User ${t}: ${e}`),e})},createApiKey:async(e,{apiKey:t},s,a)=>(t.key=E("Aa0",20),s.db.mutation.createApiKey({data:t},a)),async updateApiKey(e,{id:t,apiKey:s},a,r){if(!await a.db.exists.ApiKey({id:t}))throw new Error(`ApiKey not found ${t}`);return delete s.key,a.db.mutation.updateApiKey({where:{id:t},data:s},r)},deleteApiKey:async(e,{id:t},s)=>s.db.mutation.deleteApiKey({where:{id:t}},"{id}").then(()=>!0).catch(e=>{throw ga(`Error deleting ApiKey ${t}: ${e}`),e}),async createDeviceProvider(e,{deviceProvider:t},s,a){if("INTEGRATED"===t.type)throw new Error("DeviceProvider type INTEGRATED not allowed to create");if(Ea.indexOf(t.type)<0)throw new Error(`DeviceProvider type ${t.type} not supported in this version`);return s.db.mutation.createDeviceProvider({data:t},a)},async updateDeviceProvider(e,{id:t,deviceProvider:s},a,r){if(!await a.db.exists.DeviceProvider({id:t}))throw new Error(`DeviceProvider not found ${t}`);if(Ea.indexOf(s.type)<0)throw new Error(`DeviceProvider type ${s.type} not supported in this version`);const n=await a.db.mutation.updateDeviceProvider({where:{id:t},data:s},r);return delete n.password,n},async deleteDeviceProvider(e,{id:t},s){const a=await s.db.query.deviceProvider({where:{id:t}});if(!a)return!0;if("INTEGRATED"===a.type)throw new Error("DeviceProvider type INTEGRATED not allowed to delete");try{return await s.db.mutation.deleteDeviceProvider({where:{id:t}},"{id}"),!0}catch(e){throw ga(`Error deleting DeviceProvider ${t}: ${e}`),e}},createRegisteredComponent:async(e,{registeredComponent:t},s,a)=>s.db.mutation.createRegisteredComponent({data:t},a),async updateRegisteredComponent(e,{id:t,registeredComponent:s},a,r){if(!await a.db.exists.RegisteredComponent({id:t}))throw new Error(`RegisteredComponent not found ${t}`);return a.db.mutation.updateRegisteredComponent({where:{id:t},data:s},r)},deleteRegisteredComponent:async(e,{id:t},s)=>s.db.mutation.deleteRegisteredComponent({where:{id:t}},"{id}").then(()=>!0).catch(e=>{throw ga(`Error deleting RegisteredComponent ${t}: ${e}`),e}),async updateSystemSettings(e,{systemSettings:t},s,a){const r=await s.db.query.systemSettingses({skip:0,first:1});return r&&r.length>0?s.db.mutation.updateSystemSettings({where:{id:r[0].id},data:t},a):s.db.mutation.createSystemSettings({data:t},a)}};const Ca=k("botium-box-server-mutation-deviceset");var va={createDeviceSet:async(e,{deviceSet:t},s,a)=>s.db.mutation.createDeviceSet({data:t},a),async updateDeviceSet(e,{id:t,deviceSet:s},a,r){if(!await a.db.exists.DeviceSet({id:t}))throw new Error(`DeviceSet not found ${t}`);return a.db.mutation.updateDeviceSet({where:{id:t},data:s},r)},deleteDeviceSet:async(e,{id:t},s)=>new Promise((e,a)=>{s.db.query.deviceSet({where:{id:t}},"{ id devices { id } }").then(e=>{if(!e)throw new Error(`DeviceSet not found ${t}`);return s.db.mutation.deleteManyDeviceDescriptors({where:{id_in:e.devices.map(e=>e.id)}})}).then(()=>s.db.mutation.deleteDeviceSet({where:{id:t}},"{id}")).then(()=>e(!0)).catch(e=>(Ca(`Error deleting DeviceSet ${t}: ${e}`),a(e)))})};var Ia={};const{withFilter:Oa}=C;var Ra={testSessionProgress:{resolve:(e,{testSessionId:t},s,a)=>s.db.query.testSession({where:{id:t}},a),subscribe:Oa((e,{testSessionId:t},{pubsub:s})=>s.asyncIterator("TEST_SESSION_PROGRESS"),(e,{testSessionId:t})=>e&&e.testSessionProgress&&e.testSessionProgress.id===t)}},Pa={Query:{...gs,...Es,...Cs,...Us,...Gs,...Vs,...Ys,...zs,...Ws,...ra},Mutation:{...da,...pa,...ha,...Js,...ma,...Ot,...ba,...wa,...va},Subscription:{...Ia,...Ms,...Ra}};const{SchemaDirectiveVisitor:Aa}=v,{defaultFieldResolver:$a}=I,{hasPermission:Na,hasAnyPermission:_a}=Is,{isLoggedIn:Da,getClientIdFilter:xa,withClientConnect:ka,withClientFilter:Ba,assertClient:ja}=Os,qa=k("botium-box-server-directives");var La={hasAnyPermission:class extends Aa{visitFieldDefinition(e){const{resolve:t=$a}=e,{permissions:s}=this.args;e.resolve=(async(e,a,r,n)=>{const i=Da(r);if(_a(i,s))return t.call(this,e,a,r,n);throw qa(`User ${JSON.stringify(i)} missing any permissions ${s.join("|")}`),new Error(`Unauthorized, missing any permissions ${s.join("|")}`)})}},hasPermission:class extends Aa{visitFieldDefinition(e){const{resolve:t=$a}=e,{permission:s}=this.args;e.resolve=(async(e,a,r,n)=>{const i=Da(r);if(Na(i,s))return t.call(this,e,a,r,n);throw qa(`User ${JSON.stringify(i)} missing permission ${s}`),new Error(`Unauthorized, missing permission ${s}`)})}},clientFilter:class extends Aa{visitFieldDefinition(e){const{resolve:t=$a}=e;e.resolve=(async(e,{where:s,...a},r,n)=>{const i=Da(r),o=Ba(s,i.clients,xa(r));return t.call(this,e,{where:o,...a},r,n)})}},assertClient:class extends Aa{visitFieldDefinition(e){const{resolve:t=$a}=e,{query:s,argsBase:a,idParam:r,selector:n}=this.args,i=e=>e&&e.client?e.client.id:e&&Object.keys(e).length>0?i(e[Object.keys(e)[0]]):null;e.resolve=(async(e,o,c,d)=>{const l=Da(c),u=x.isArray(s)?s:[s],p=a&&(x.isArray(a)?a:[a]),h=r&&(x.isArray(r)?r:[r]),S=n&&(x.isArray(n)?n:[n]);for(let e in u){const t=p?x.get(o,p[e]):o;if(t)for(const s of x.isArray(t)?t:[t]){const t=x.get(s,h&&h[e]||"id");if(!t)continue;const a=await c.db.query[u[e]]({where:{id:t}},S&&S[e]||"{ client { id } }"),r=i(a);try{ja(r,l.clients)}catch(s){throw qa(`User ${JSON.stringify(l)} missing client access, query ${u[e]}, id ${t}, clientId ${r}`),s}}}return t.call(this,e,o,c,d)})}},clientConnector:class extends Aa{visitFieldDefinition(e){const{resolve:t=$a}=e,{dataParam:s}=this.args,a=x.isArray(s)?s:[s];e.resolve=(async(e,s,r,n)=>{const i=Da(r);return a.forEach(e=>{const t=x.get(s,e);if(!t)return;const a=xa(r);for(const e of x.isArray(t)?t:[t])ka(e,i.clients,a)}),t.call(this,e,s,r,n)})}},clientDisconnector:class extends Aa{visitFieldDefinition(e){const{resolve:t=$a}=e,{dataParam:s}=this.args;e.resolve=(async(e,a,r,n)=>{const i=a[s];return i&&i.client&&delete i.client,t.call(this,e,a,r,n)})}}};const{jwtSettings:Fa,tokenToUserId:Ma}=ys,Ua=k("botium-box-middleware-jwt");let Ja=null;var Ga=(e,t,s)=>{e.use((()=>R(Object.assign({},Fa(),{credentialsRequired:!1,getToken:e=>e.headers.authorization&&"Bearer"===e.headers.authorization.split(" ")[0]?e.headers.authorization.split(" ")[1]:e.query&&e.query.token?e.query.token:e.body&&e.body.token?e.body.token:null})))()),e.use((e,t,a)=>(async(e,t,s,a)=>{if(e.user){const t=a({request:e}),r=e.user,n=await t.db.query.user({where:{id:Ma(r)}},"{ id name email roles { id name permissions } clients { id name } }");return e.user={...n,token:r},s()}if(process.env.JWT_AUTOLOGIN_USERNAME){if(!Ja){const t=a({request:e});Ja=await t.db.query.user({where:{name:process.env.JWT_AUTOLOGIN_USERNAME}},"{ id name email roles { id name permissions } clients { id name } }"),Ua(`Auto login user ${process.env.JWT_AUTOLOGIN_USERNAME}.`)}return e.user={...Ja,token:null},s()}return s()})(e,0,a,s)),e.use((e,t,a)=>(async(e,t,s,a)=>{const r=e.query.APIKEY||e.body&&e.body.APIKEY||e.headers.APIKEY,n=a({request:e});if(!r)return s();Vt.lookupApiKey(n.db,r).then(t=>t?(Ua(`Api Key found - ${O.inspect(t)}`),e.apiKey=t,s()):(Ua(`Api Key not found - ${r}`),s())).catch(e=>(Ua(`Api Key lookup error - ${r} - ${e}`),s()))})(e,0,a,s))};const{setupEndpoints:Va,verifySignature:Ha}=A,Ya=k("botium-box-server-fbproxy");const za=k("botium-box-server-endpoints-testset"),{isLoggedIn:Wa,assertClient:Xa}=Os,{FindFullTestSet:Ka}=W;const Qa=k("botium-box-server-endpoints-attachments"),{isLoggedIn:Za,assertClient:er}=Os;const tr=k("botium-box-server-endpoints-build"),{isLoggedIn:sr,assertClient:ar}=Os,rr=ma.createTestSession,nr=e=>{if(!e)return"";return e.split("\n").map(e=>e.trim()).join("     ")},ir=(e,t)=>e.query[t]||e.query[t.toLowerCase()]||e.body&&e.body[t]||e.body&&e.body[t.toLowerCase()]||e.headers[`X-BOTIUM-${t}`],or=(e,t)=>{const s=(ir(e,"REPORTER")||"json").toLowerCase();return"json"===s||"junit"===s||"csv"===s||"jiracsv"===s||"pdf"===s||(t.sendStatus(404).send("VALID REPORTER OPTIONS: json, junit, csv, jiracsv, pdf"),!1)},cr=(e,t)=>{return e.map(e=>`"${e.map(e=>x.isString(e)&&e.replace(/"/g,'""')).join(`"${t||";"}"`)}"`).join("\r\n")},dr=async(e,t,s,a)=>{try{const r=(ir(s,"REPORTER")||"json").toLowerCase();if("json"===r){const{ts:s,output:n}=await ur(e,t,r);a.setHeader("Content-Type","application/json"),a.setHeader("Content-disposition",`attachment; filename="${_(s.name)}.json"`),a.status(200).send(n)}else if("junit"===r){const{ts:s,output:n}=await ur(e,t,r);a.setHeader("Content-Type","text/xml"),a.setHeader("Content-disposition",`attachment; filename="${_(s.name)}.xml"`),a.status(200).send(n)}else if("csv"===r||"jiracsv"===r){const{ts:s,output:n}=await ur(e,t,r);a.setHeader("Content-Type","text/csv"),a.setHeader("Content-disposition",`attachment; filename="${_(s.name)}.csv"`),a.status(200).send(n)}else if("pdf"===r){const{ts:s,output:n}=await ur(e,t,r);a.setHeader("Content-Type","application/pdf"),a.setHeader("Content-disposition",`attachment; filename=${_(s.name)}.pdf`),a.status(200).send(n)}}catch(t){tr(`Test Session lookup error - ${e} - ${t}`),a.sendStatus(404)}},lr=async(e,t,s,a,r)=>{try{const n=(r||"json").toLowerCase(),i={uri:s,method:a,headers:{}};if("get"!==a.toLowerCase()){const{output:s}=await ur(e,t,n);"json"===n?(i.body=s,i.json=!0):"junit"===n?(i.headers["Content-Type"]="text/xml",i.body=s):"csv"===n||"jiracsv"===n?(i.headers["Content-Type"]="text/csv",i.body=s):"pdf"===n&&(i.headers["Content-Type"]="application/pdf",i.body=s)}await N(i),tr(`sendTestSessionOutput callbackUrl ${s} ready for test session ${e}`)}catch(t){tr(`sendTestSessionOutput callbackUrl ${s} failed for test session ${e} - ${t}`)}},ur=async(e,t,s)=>{const a=await Vt.findSimpleTestSessionResults(t.db,e);if(!a)throw new Error(`Test Session ${e} not found`);if("json"===s)return delete a.results,{ts:a,output:a};if("pdf"===s){const s=await Vt.findFullTestSession(t.db,e),r=new j({bufferPages:!0,margins:{top:50,bottom:50,left:72,right:72}});r.reset=(()=>r.font("Helvetica").fontSize(12).fillColor("black")),r.bold=(()=>r.font("Helvetica-Bold")),r.fontSize(25).text(s.name,{underline:!0}).reset(),r.text(`Test Session Started: ${D(s.createdAt).format("lll")}`),r.moveDown(),"READY"===a.status&&r.fillColor("green").fontSize(25).bold().text("TEST SESSION OK").reset(),"FAILED"===a.status&&r.fillColor("red").fontSize(25).bold().text("TEST SESSION FAILED").reset(),r.text(`${a.results.length} Test Case(s)`),r.fillColor("green").text(`${a.results.filter(e=>e.success).length} Test Case(s) succeeded`).reset(),r.fillColor("red").text(`${a.results.filter(e=>!e.success).length} Test Case(s) failed`).reset(),s.testProject&&(r.moveDown(),r.font("Helvetica-Bold").text(`Test Project: ${s.testProject.name}`).reset(),s.testProject.description&&r.text(s.testProject.description),s.testProject.tags&&r.fillColor("darkgrey").text(s.testProject.tags.join(" | ")).reset()),s.chatbot&&(r.moveDown(),r.font("Helvetica-Bold").text(`Chatbot Under Test: ${s.chatbot.name}`).reset(),s.chatbot.description&&r.text(s.chatbot.description),s.chatbot.tags&&r.fillColor("darkgrey").text(s.chatbot.tags.join(" | ")).reset()),s.testSets&&s.testSets.forEach(e=>{r.moveDown(),r.font("Helvetica-Bold").text(`Test Set: ${e.name}`).reset(),e.description&&r.text(e.description),e.scripts&&r.text(`Scripts: ${e.scripts.length}`),e.repositories&&e.repositories.forEach(e=>{r.text(`Repository: ${e.name}, ${e.gitbranch}`)}),e.folders&&e.folders.forEach(e=>{r.text(`Shared Folder: ${e.name}`)}),e.excels&&e.excels.forEach(e=>{r.text(`Excel File: ${e.name}, ${e.filename}`)}),e.tags&&r.fillColor("darkgrey").text(e.tags.join(" | ")).reset()});const n=r.bufferedPageRange();for(let e=n.start;e<n.start+n.count;e++)r.switchToPage(e),r.fontSize(8),r.image("media/botium-logo.png",r.page.width-35,10,{width:25}),r.text(`${s.name}, page ${e+1} of ${n.count}`,200,r.page.height-40,{height:25});return r.end(),new Promise(e=>{r.pipe(q(t=>e({ts:a,output:t})))})}if("junit"===s){const e=x.groupBy(a.results,e=>e.testSet?e.testSet.name:""),t=x.keys(e).map(t=>{const s=e[t];return{testsuite:[{_attr:{name:t||"unnamed",tests:s.length,failures:s.filter(e=>!e.success).length,time:s.reduce((e,t)=>t.duration?e+t.duration:e,0)/1e3}}]}}),s=B({testsuites:[{_attr:{name:a.name,tests:a.results.length,failures:a.results.filter(e=>!e.success).length,time:a.results.reduce((e,t)=>t.duration?e+t.duration:e,0)/1e3}}].concat(t)},{declaration:!0});return{ts:a,output:s}}if("csv"===s){delete a.results;const e=[];e.push(["testSessionId","testSessionStatus","testSessionName","testCaseId","testCaseName","testCaseSource","testCaseSuccess","testCaseErr","testCaseDuration","testSetId","testSetName","testSetTags","testSetRepository","testSetRepositoryBranch","testSetFolder","testSetExcel","testSetFilename"]);const t=(e,t)=>{t?(e.push(t.id),e.push(t.testcaseName),e.push(nr(t.testcaseSource)),e.push(t.success),e.push(nr(t.err)),e.push(t.duration),t.testSet?(e.push(t.testSet.id),e.push(t.testSet.name),e.push(t.testSet.tags&&t.testSet.tags.join("|")),t.testSetRepository?(e.push(t.testSetRepository.name),e.push(t.testSetRepository.gitbranch)):e.push(null,null),t.testSetFolder?e.push(t.testSetFolder.name):e.push(null),t.testSetExcel?e.push(t.testSetExcel.name):e.push(null),e.push(t.testSetFilename)):e.push(null,null,null,null,null,null,null,null)):e.push(null,null,null,null,null,null,null,null,null,null,null,null,null,null)},s=[a.id,a.status,a.name];return a.results&&a.results.length>0?a.results.forEach(a=>{const r=s.slice(0);t(r,a),e.push(r)}):(t(s,null),e.push(s)),{ts:a,output:cr(e)}}if("jiracsv"===s){const e=[];return e.push(["Build","Date","Summary","Description"]),"FAILED"!==a.status&&e.push([a.name,a.createdAt,`${a.name}: Botium Test Session failed`,`${a.results.filter(e=>!e.success).length} Test Cases failed of ${a.results.length}`]),{ts:a,output:cr(e,",")}}},pr=(e,t,s)=>{const a=t.pubsub.asyncIterator("TEST_SESSION_PROGRESS");!async function(){for(;;){const{value:r}=await a.next();if(r.testSessionProgress&&r.testSessionProgress.id===e){const a=await t.db.query.testSession({where:{id:e}},"{ id status }");if(tr(`Test Project ${e} got status: ${a.status}`),"READY"===a.status)return s();if("FAILED"===a.status)return s()}}}()},hr=(e,t,s,a)=>{const r=ir(s,"WAIT");"READY"!==e.status&&"FAILED"!==e.status&&"1"===r?pr(e.id,t,()=>dr(e.id,t,s,a)):dr(e.id,t,s,a)},Sr=(e,t,s)=>{const a=ir(s,"CALLBACKURL"),r=ir(s,"CALLBACKMETHOD")||"POST",n=ir(s,"REPORTER");a&&("READY"!==e.status&&"FAILED"!==e.status?pr(e.id,t,()=>lr(e.id,t,a,r,n)):lr(e.id,t,a,r,n))};var mr=(e,t)=>{const s=(e,s)=>{(({ctxFactory:e,testProjectCode:t,req:s,res:a})=>{if(!or(s,a))return;const r=e({request:s}),n=sr(r);r.db.query.testProject({where:{code:t}},"{ id name chatbot { id } testSets { id } deviceSets { id } agent { id } batchCount client { id } }").then(e=>{if(!e)throw new Error(`Test Project ${t} not found`);const a=x.get(e,"client.id");ar(a,n.clients);const i=ir(s,"BUILDID"),o=ir(s,"BUILDCOMMENT"),c=ir(s,"TAG"),d=e=>Object.keys(e).reduce((t,s)=>(t.push({name:s,type:"STRING",stringValue:e[s]}),t),[]),l=s.body&&s.body.CAPS&&d(s.body.CAPS)||[],u=s.body&&s.body.SOURCES&&d(s.body.SOURCES)||[],p=s.body&&s.body.ENVS&&d(s.body.ENVS)||[],h={name:i||e.name+" - Test Session",description:o,status:"PENDING",tags:{set:c?x.isArray(c)?c:[c]:[]},chatbot:{connect:{id:e.chatbot.id}},testSets:{connect:e.testSets&&e.testSets.map(e=>({id:e.id}))},deviceSets:{connect:e.deviceSets&&e.deviceSets.map(e=>({id:e.id}))},testProject:{connect:{id:e.id}},capabilities:{create:l},sources:{create:u},envs:{create:p},batchCount:e.batchCount};return e.agent&&(h.agent={connect:{id:e.agent.id}}),tr(`Creating Test Session ${JSON.stringify(h,null,2)}`),rr(null,{testSession:h},r,"{ id status }")}).then(e=>{hr(e,r,s,a),Sr(e,r,s)}).catch(e=>{tr(`Test Project start error - ${t} - ${e}`),a.sendStatus(404)})})({testProjectCode:e.params.code,ctxFactory:t,req:e,res:s})};e.post("/api/triggerbuild/:code",s),e.get("/api/triggerbuild/:code",s),e.get("/api/build/:nameOrId",(e,s)=>{(({ctxFactory:e,nameOrId:t,req:s,res:a})=>{if(!or(s,a))return;const r=e({request:s}),n=sr(r);r.db.query.testSessions({where:{OR:[{id:t},{name:t}]},orderBy:"createdAt_DESC",first:1},"{ id name status client { id } }").then(e=>{if(!e)return a.sendStatus(404);const t=e[0],i=x.get(t,"client.id");ar(i,n.clients),hr(t,r,s,a),Sr(t,r,s)}).catch(e=>{tr(`Test Session lookup error - ${t} - ${e}`),a.sendStatus(404)})})({nameOrId:e.params.nameOrId,ctxFactory:t,req:e,res:s})}),e.get("/api/log/:nameOrId",(e,s)=>{(({ctxFactory:e,nameOrId:t,req:s,res:a})=>{const r=e({request:s}),n=sr(r);r.db.query.testSessions({where:{OR:[{id:t},{name:t}]},orderBy:"createdAt_DESC",first:1},"{ id name jobs { id logs { createdAt log } } client { id } }").then(e=>{if(!e)return a.sendStatus(404);const t=e[0],s=x.get(t,"client.id");ar(s,n.clients),a.set("Content-Type","text/plain"),t.jobs&&t.jobs.forEach(e=>{a.write(`Job Output (${e.id})\n`),e.logs&&e.logs.forEach(e=>{a.write(e.createdAt+": "+e.log+"\n")}),a.write("\n\n"),a.write("##############################################################\n"),a.write("##############################################################\n"),a.write("##############################################################\n"),a.write("\n\n")}),a.status(200).end()}).catch(e=>{tr(`Test Session lookup error - ${t} - ${e}`),a.sendStatus(404)})})({nameOrId:e.params.nameOrId,ctxFactory:t,req:e,res:s})}),e.get("/api/joblog/:id",(e,s)=>{(({ctxFactory:e,id:t,req:s,res:a})=>{const r=e({request:s}),n=sr(r);r.db.query.testSessionJob({where:{id:t},orderBy:"createdAt_ASC"},"{ id logs { createdAt log } testSession { client { id } } }").then(e=>{if(!e)return a.sendStatus(404);const t=x.get(e,"testSession.client.id");ar(t,n.clients),a.set("Content-Type","text/plain"),e.logs&&e.logs.forEach(e=>{a.write(e.createdAt+": "+e.log+"\n")}),a.status(200).end()}).catch(e=>{tr(`Test Session Job lookup error - ${t} - ${e}`),a.sendStatus(404)})})({id:e.params.id,ctxFactory:t,req:e,res:s})}),e.get("/api/transcript/:nameOrId",(e,s)=>{(({ctxFactory:e,nameOrId:t,req:s,res:a})=>{const r=e({request:s}),n=sr(r);r.db.query.testSessions({where:{OR:[{id:t},{name:t}]},orderBy:"createdAt_DESC",first:1},"{ id status name client { id } results { id testcaseName createdAt success err duration steps { step expected not actual stepDuration botDuration err } } }").then(e=>{if(!e)return a.sendStatus(404);const t=e[0],r=x.get(t,"client.id");ar(r,n.clients);const i=ir(s,"REPORTER")||"json";if(delete t.results,t.results&&t.results.forEach(e=>{e.steps&&e.steps.forEach(e=>{e.actual&&x.isString(e.actual)&&(e.actual=JSON.parse(e.actual)),e.expected&&x.isString(e.expected)&&(e.expected=JSON.parse(e.expected))})}),"json"===i)a.setHeader("Content-disposition",`attachment; filename="${_(t.name)}.json"`),a.status(200).send(t);else if("csv"===i){const e=[];e.push(["testSessionId","testSessionStatus","testSessionName","testCaseId","testCaseName","testCaseCreatedAt","testCaseSuccess","testCaseErr","testCaseDuration","convoStepIndex","convoStepSender","convoStepActual","convoStepNot","convoStepExpected","convoStepDuration","convoStepBotDuration","convoStepErr"]);const s=(e,t)=>{t?(e.push(t.id),e.push(t.testcaseName),e.push(t.createdAt),e.push(t.success),e.push(nr(t.err)),e.push(t.duration)):e.push(null,null,null,null,null,null)},r=e=>{if("me"===e.sender){if(e.buttons&&e.buttons.length>0)return`BUTTON ${e.buttons[0].payload||e.buttons[0].text}`;if(e.media&&e.media.length>0)return`MEDIA ${e.media[0].mediaUri}`}return e.messageText},n=(e,t)=>{t?(e.push(t.step),e.push(t.actual&&t.actual.sender),e.push(t.actual&&nr(r(t.actual))),e.push(t.not),e.push(t.expected&&nr(r(t.expected))),e.push(t.stepDuration),e.push(t.botDuration),e.push(nr(t.err))):e.push(null,null,null,null,null,null,null,null)},i=[t.id,t.status,t.name];t.results&&t.results.length>0?t.results.forEach(t=>{const a=i.slice(0);s(a,t),t.steps&&t.steps.length>0?t.steps.forEach(t=>{const s=a.slice(0);n(s,t),e.push(s)}):(n(a,null),e.push(a))}):(s(i,null),n(i,null),e.push(i));const o=cr(e);a.setHeader("Content-disposition",`attachment; filename="${_(t.name)}.csv"`),a.status(200).send(o)}else a.sendStatus(404).send("VALID REPORTER OPTIONS: json, csv");a.status(200).end()}).catch(e=>{tr(`Test Session lookup error - ${t} - ${e}`),a.sendStatus(404)})})({nameOrId:e.params.nameOrId,ctxFactory:t,req:e,res:s})})};const{hasPermission:fr}=Is,Tr={"/api/testset/":"TESTSETS_SELECT","/api/attachment/excel/":"TESTSETS_SELECT","/api/attachment/screenshot/":"TESTSESSIONS_SELECT","/api/triggerbuild/":"TESTSESSIONS_CREATE","/api/build/":"TESTSESSIONS_REPORTS","/api/log/":"TESTSESSIONS_REPORTS","/api/joblog/":"TESTSESSIONS_REPORTS","/api/transcript/":"TESTSESSIONS_REPORTS"};var yr=async(e,t)=>{await(async(e,t)=>{const s=t();(await s.db.query.chatbots({where:{}}," { id name capabilities { name type stringValue intValue booleanValue jsonValue } } ")).filter(e=>e.capabilities&&e.capabilities.filter(e=>"CONTAINERMODE"===e.name&&"fbpagereceiver"===e.stringValue).length>0).forEach(t=>{const a={app:e,endpoint:"/api/fbproxy/"+t.capabilities.find(e=>"FBPAGERECEIVER_ENDPOINT"===e.name).stringValue,verifytoken:t.capabilities.find(e=>"FBPAGERECEIVER_VERIFYTOKEN"===e.name).stringValue,accesstoken:t.capabilities.find(e=>"FBPAGERECEIVER_ACCESSTOKEN"===e.name).stringValue,redisurl:s.queueSettings.redis},r=t.capabilities.find(e=>"FBPAGERECEIVER_APPSECRET"===e.name);r&&r.stringValue?e.use(a.endpoint,P.json({verify:Ha.bind(null,r.stringValue)})):e.use(a.endpoint,P.json()),Va(a),Ya(`Started FB Proxy for chatbot ${t.id}/${t.name}, endpoint: ${a.endpoint}`)})})(e,t),e.use(P.json({limit:"50mb",extended:!0})),e.use(["/api/testset/*","/api/attachment/*","/api/build/*","/api/triggerbuild/*","/api/log/*","/api/joblog/*","/api/transcript/*"],((e,t,s,a)=>{if(!t.apiKey&&!t.user)return s.sendStatus(401);if(t.apiKey)return a();for(const e in Tr)if(t.baseUrl.startsWith(e)&&!fr(t.user,Tr[e]))return s.sendStatus(401);return a()}).bind(null,t)),((e,t)=>{e.get("/api/testset/:id",async(e,s)=>{const a=e.params.id,r=t({request:e});try{const e=Wa(r),t=await Ka(r.db,a);if(t){const a=x.get(t,"client.id");Xa(a,e.clients);const r=new $;t.scripts&&t.scripts.forEach(e=>{"SCRIPTING_TYPE_CONVO"===e.scriptType&&r.addFile(`scripts/${e.name}.convo.txt`,Buffer.alloc(e.script.length,e.script)),"SCRIPTING_TYPE_PCONVO"===e.scriptType&&r.addFile(`scripts/${e.name}.pconvo.txt`,Buffer.alloc(e.script.length,e.script)),"SCRIPTING_TYPE_UTTERANCES"===e.scriptType&&r.addFile(`scripts/${e.name}.utterances.txt`,Buffer.alloc(e.script.length,e.script)),"SCRIPTING_TYPE_SCRIPTING_MEMORY"===e.scriptType&&r.addFile(`scripts/${e.name}.scriptingmemory.txt`,Buffer.alloc(e.script.length,e.script))});const n=r.toBuffer();s.writeHead(200,{"Content-disposition":`attachment; filename="${t.name}.zip"`,"Content-Length":n.length}),s.end(n)}else za(`TestSet not found - ${a}`),s.sendStatus(404)}catch(e){za(`TestSet lookup error - ${a} - ${e}`),s.sendStatus(404)}})})(e,t),((e,t)=>{e.get("/api/attachment/excel/:id",async(e,s)=>{const a=e.params.id,r=t({request:e});try{const e=Za(r),t=await Vt.getExcel(r.db,a);if(t){const a=x.get(t,"testSet.client.id");er(a,e.clients);const r=Buffer.from(t.filecontent,"base64");s.writeHead(200,{"Content-disposition":`attachment; filename="${t.filename}"`,"Content-Length":r.length}),s.end(r)}else Qa(`Excel not found - ${a}`),s.sendStatus(404)}catch(e){Qa(`Excel lookup error - ${a} - ${e}`),s.sendStatus(404)}}),e.get("/api/attachment/screenshot/:id",async(e,s)=>{const a=e.params.id,r=t({request:e});try{const e=Za(r),t=await Vt.getAttachment(r.db,a);if(t){const a=x.get(t,"testSessionTestCaseResult.testSession.client.id");er(a,e.clients);const r=Buffer.from(t.base64,"base64");s.writeHead(200,{"Content-Disposition":`inline; filename="${t.name}"`,"Content-Type":t.mimeType,"Content-Length":r.length}),s.end(r)}else Qa(`Attachment not found - ${a}`),s.sendStatus(404)}catch(e){Qa(`Attachment lookup error - ${a} - ${e}`),s.sendStatus(404)}})})(e,t),mr(e,t),((e,t)=>{e.get("/api/version",(e,t)=>{t.status(200).send(V)})})(e)};L.config(),H();const{GraphQLServer:br}=C,{RedisPubSub:gr}=F,{Prisma:Er}=M,{validateToken:wr}=ys,Cr=k("botium-box-server-index"),vr=()=>new Er({typeDefs:process.env.PRISMA_SCHEMA||"src/generated/prisma.graphql",endpoint:process.env.PRISMA_ENDPOINT,debug:process.env.PRISMA_DEBUG,secret:process.env.PRISMA_SECRET}),Ir=(e,t)=>{e&&console.log(e),t&&console.log(t),process.exit(1)};let Or={};if(process.env.BOTIUMBOX_QUEUE_SETTINGS)try{Or=JSON.parse(process.env.BOTIUMBOX_QUEUE_SETTINGS),Cr(`Got queue settings '${JSON.stringify(Or)}'`)}catch(e){Ir(`ERROR parsing queue settings "${process.env.BOTIUMBOX_QUEUE_SETTINGS}":`,e)}else process.env.BOTIUMBOX_QUEUE_PREFIX&&(Or.prefix=process.env.BOTIUMBOX_QUEUE_PREFIX),process.env.BOTIUMBOX_QUEUE_REDISURL&&(Or.redis=process.env.BOTIUMBOX_QUEUE_REDISURL);Cr(`connecting to Botium queue '${JSON.stringify(Or)}'`);const Rr=g.createQueue(Or);Rr.setMaxListeners(1e3),Rr.watchStuckJobs(),Rr.on("error",e=>{console.log(`ERROR on queue '${JSON.stringify(Or)}':`,e)}),process.env.BOTIUM_TEMPDIR=process.env.BOTIUM_TEMPDIR||"./botiumwork";try{n.sync(process.env.BOTIUM_TEMPDIR),Cr(`Using BOTIUM_TEMPDIR ${process.env.BOTIUM_TEMPDIR}`)}catch(e){Ir(`ERROR verifying BOTIUM_TEMPDIR '${process.env.BOTIUM_TEMPDIR}':`,e)}process.env.TESTSETDIR=process.env.TESTSETDIR||"./testsets";try{n.sync(process.env.TESTSETDIR),Cr(`Using TESTSETDIR ${process.env.TESTSETDIR}`)}catch(e){Ir(`ERROR verifying TESTSETDIR '${process.env.TESTSETDIR}':`,e)}_t(vr());const Pr=new gr({connection:Or.redis});Pr.ee&&Pr.ee.setMaxListeners&&Pr.ee.setMaxListeners(0);const Ar=new z(43200),$r=e=>({...e||{},db:vr(),queueConnector:Rr,queueSettings:Or,pubsub:Pr,chartsCache:Ar});Cr(`Using Prisma Endpoint ${process.env.PRISMA_ENDPOINT}`);const Nr=new br({typeDefs:process.env.GRAPHQL_SCHEMA||"./src/schema.graphql",resolvers:Pa,resolverValidationOptions:{requireResolversForResolveType:!1},schemaDirectives:La,context:$r,middlewares:[async(e,t,s,a,r)=>{try{const n=await e(t,s,a,r);return n instanceof Error&&Cr(n),n}catch(e){throw Cr(e),e}}]}),_r={port:process.env.PORT||4e3,endpoint:"/graphql",subscriptions:{path:"/subscriptions",onConnect:async(e,t,s)=>{if(e.Authorization){return{user:await wr(e.Authorization,vr())}}throw new Error("Missing auth token!")},onDisconnect:(e,t)=>{}},playground:"/playground"};(async()=>{await oa.loadStrategy($r),await Ga(Nr.express,0,$r),await yr(Nr.express,$r),Nr.start(_r,({port:e})=>{const t=process.env.BOTIUMBOX_STATIC_PATH?f.resolve(process.env.BOTIUMBOX_STATIC_PATH):f.resolve(f.join(__dirname,"../../botium-box-client/build"));Nr.express.use(J()),Nr.express.use("/",U.static(t)),console.log(`Server started, listening on port ${e} for incoming requests, static files served from ${t}`)})})(),new class{constructor(e){this.ctxFactory=e}start(){const e=this.ctxFactory();e.queueConnector.process("agent.heartbeat",1,(t,s)=>{as("agent.heartbeat: "+JSON.stringify(t.data)),(async(e,t,s)=>{try{const{count:a}=await e.db.mutation.updateManyAgents({data:{heartbeat:new Date(Date.now()).toISOString()},where:{name:t.data.name}});if(!(a>0)){const e=`Agent ${t.data.name} not configured`;return ts(e),s(e)}s()}catch(e){s(e)}})(e,t,s)}),e.queueConnector.process("agent.register",1,(t,s)=>{as("agent.register: "+JSON.stringify(t.data)),(async(e,t,s)=>{const a=process.env.BOTIUMBOX_AGENTREGISTRATION&&"AUTO"===process.env.BOTIUMBOX_AGENTREGISTRATION||!0;try{let r=await Vt.findAgentFromJobData(e.db,t);if(!r){if(!a){const e=`Agent ${t.data.name} not configured`;return ss(e),s(e)}ss(`Agent ${t.data.name} not yet registered, automatically registering.`),r=await e.db.mutation.createAgent({data:{name:t.data.name}})}let n=await Vt.findAgentFromName(e.db,"Default Agent");const i=Vt.combineBotiumCapabilities(Vt.composeBotiumCapabilities(n&&n.capabilities||[]),Vt.composeBotiumCapabilities(r.capabilities)),o={debug:!!(r.debug||n&&n.debug),botium:{Capabilities:i}};ss(`Agent ${t.data.name} registered, config: ${JSON.stringify(o)}`),s(null,o)}catch(e){ss(`Agent ${t.data.name} registration failed: ${O.inspect(e)}`),s(e)}})(e,t,s)}),e.queueConnector.process("box.createprocessingjobs",1,(t,s)=>{as("box.createprocessingjobs: "+JSON.stringify(t.data)),rs(e,t.data).then(()=>s()).catch(s)}),e.queueConnector.on("error",e=>{as("ERROR connecting to queue:"),as(e)}),e.queueConnector.on("job failed attempt",(e,t)=>{g.Job.get(e,(s,a)=>{s||(a=a.toJSON(),as(`Job ${e}/${a.type} failed attempt, ${JSON.stringify(a.attempts)} - Err: ${t}`))})}).on("job failed",(e,t)=>{g.Job.get(e,(s,a)=>{s||(a=a.toJSON(),as(`Job ${e}/${a.type} failed finally, ${JSON.stringify(a.attempts)} - Err: ${t} - Job Data: ${JSON.stringify(a.data)}`))})}),e.queueConnector.process("process.progress",1,async(t,s)=>{try{await cs(e,t.data),s()}catch(e){s(e)}}),e.queueConnector.process("process.log",1,async(t,s)=>{try{await os(e,t.data),s()}catch(e){s(e)}}),e.queueConnector.process("process.ready.success",1,async(t,s)=>{as("process.ready.success: "+JSON.stringify(t.data));try{await ns(e,t.data),await ds(e,t.data),s()}catch(e){s(e)}}),e.queueConnector.process("process.ready.failed",1,async(t,s)=>{as("process.ready.failed: "+JSON.stringify(t.data));try{await is(e,t.data),await ds(e,t.data),s()}catch(e){s(e)}})}}($r).start(),new class{constructor(e){this.ctxFactory=e}start(){const e=this.ctxFactory();ms(e)}}($r).start(),Ut.startListeners($r()),process.on("uncaughtException",e=>{console.log("UNCAUGHTEXCEPTION",e),console.log(e.stack)}),process.on("warning",e=>{Cr("WARNING",e)});return{}});
