!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("node-cache"),require("nodegit"),require("botium-core/src/scripting/Constants"),require("natural"),require("mkdirp"),require("rimraf"),require("botium-core"),require("uuid/v1"),require("child_process"),require("ioredis"),require("botium-core/src/Capabilities"),require("better-queue"),require("url"),require("kue"),require("jsonwebtoken"),require("watson-developer-cloud/assistant/v1"),require("botium-core/src/scripting/CompilerTxt"),require("fs"),require("path"),require("passport"),require("passport-local"),require("passport-ldapauth"),require("randomatic"),require("bcryptjs"),require("graphql-yoga"),require("graphql-tools"),require("graphql"),require("util"),require("express-jwt"),require("body-parser"),require("botium-connector-fbpagereceiver/src/proxy"),require("adm-zip"),require("request-promise-native"),require("moment"),require("xml"),require("pdfkit"),require("concat-stream"),require("slugify"),require("debug"),require("lodash"),require("dotenv-flow"),require("graphql-redis-subscriptions"),require("prisma-binding"),require("express"),require("connect-history-api-fallback")):"function"==typeof define&&define.amd?define(["node-cache","nodegit","botium-core/src/scripting/Constants","natural","mkdirp","rimraf","botium-core","uuid/v1","child_process","ioredis","botium-core/src/Capabilities","better-queue","url","kue","jsonwebtoken","watson-developer-cloud/assistant/v1","botium-core/src/scripting/CompilerTxt","fs","path","passport","passport-local","passport-ldapauth","randomatic","bcryptjs","graphql-yoga","graphql-tools","graphql","util","express-jwt","body-parser","botium-connector-fbpagereceiver/src/proxy","adm-zip","request-promise-native","moment","xml","pdfkit","concat-stream","slugify","debug","lodash","dotenv-flow","graphql-redis-subscriptions","prisma-binding","express","connect-history-api-fallback"],t):e.main=t(e.nodeCache,e.nodegit,e.Constants,e.natural,e.mkdirp,e.rimraf,e.botiumCore,e.v1,e.child_process,e.ioredis,e.Capabilities,e.betterQueue,e.url,e.kue,e.jsonwebtoken,e.v1$1,e.CompilerTxt,e.fs,e.path,e.passport,e.passportLocal,e.passportLdapauth,e.randomatic,e.bcryptjs,e.graphqlYoga,e.graphqlTools,e.graphql,e.util,e.expressJwt,e.bodyParser,e.proxy,e.admZip,e.requestPromiseNative,e.moment,e.xml,e.pdfkit,e.concatStream,e.slugify,e.debug,e.lodash,e.dotenvFlow,e.graphqlRedisSubscriptions,e.prismaBinding,e.express,e.connectHistoryApiFallback)}(this,function(e,t,s,n,a,r,o,i,c,d,u,l,p,S,h,m,f,T,g,b,y,E,w,C,v,I,O,R,N,P,A,$,D,_,x,k,j,M,B,q,L,F,J,U,G){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e,t=t&&t.hasOwnProperty("default")?t.default:t,s=s&&s.hasOwnProperty("default")?s.default:s,n=n&&n.hasOwnProperty("default")?n.default:n,a=a&&a.hasOwnProperty("default")?a.default:a,r=r&&r.hasOwnProperty("default")?r.default:r,o=o&&o.hasOwnProperty("default")?o.default:o,i=i&&i.hasOwnProperty("default")?i.default:i,c=c&&c.hasOwnProperty("default")?c.default:c,d=d&&d.hasOwnProperty("default")?d.default:d,u=u&&u.hasOwnProperty("default")?u.default:u,l=l&&l.hasOwnProperty("default")?l.default:l,p=p&&p.hasOwnProperty("default")?p.default:p,S=S&&S.hasOwnProperty("default")?S.default:S,h=h&&h.hasOwnProperty("default")?h.default:h,m=m&&m.hasOwnProperty("default")?m.default:m,f=f&&f.hasOwnProperty("default")?f.default:f,T=T&&T.hasOwnProperty("default")?T.default:T,g=g&&g.hasOwnProperty("default")?g.default:g,b=b&&b.hasOwnProperty("default")?b.default:b,y=y&&y.hasOwnProperty("default")?y.default:y,E=E&&E.hasOwnProperty("default")?E.default:E,w=w&&w.hasOwnProperty("default")?w.default:w,C=C&&C.hasOwnProperty("default")?C.default:C,v=v&&v.hasOwnProperty("default")?v.default:v,I=I&&I.hasOwnProperty("default")?I.default:I,O=O&&O.hasOwnProperty("default")?O.default:O,R=R&&R.hasOwnProperty("default")?R.default:R,N=N&&N.hasOwnProperty("default")?N.default:N,P=P&&P.hasOwnProperty("default")?P.default:P,A=A&&A.hasOwnProperty("default")?A.default:A,$=$&&$.hasOwnProperty("default")?$.default:$,D=D&&D.hasOwnProperty("default")?D.default:D,_=_&&_.hasOwnProperty("default")?_.default:_,x=x&&x.hasOwnProperty("default")?x.default:x,k=k&&k.hasOwnProperty("default")?k.default:k,j=j&&j.hasOwnProperty("default")?j.default:j,M=M&&M.hasOwnProperty("default")?M.default:M,B=B&&B.hasOwnProperty("default")?B.default:B,q=q&&q.hasOwnProperty("default")?q.default:q,L=L&&L.hasOwnProperty("default")?L.default:L,F=F&&F.hasOwnProperty("default")?F.default:F,J=J&&J.hasOwnProperty("default")?J.default:J,U=U&&U.hasOwnProperty("default")?U.default:U,G=G&&G.hasOwnProperty("default")?G.default:G;const V={buildTarget:"COMMUNITY EDITION",buildBranch:"feature/BOT-595-box-test-cases-should-be-execute",buildRevision:"17e99b526a4dae53d87b2f82489357dcd7bebe7e",buildDate:"2019-06-05T22:19:25+02:00"};var H=V,Y=()=>{console.log("BOTIUM BOX - SERVER"),console.log(`BUILD_TARGET: ${V.buildTarget}`),console.log(`BUILD_BRANCH: ${V.buildBranch}`),console.log(`BUILD_REVISION: ${V.buildRevision}`),console.log(`BUILD_TIMESTAMP: ${V.buildDate}`)};const z=B("botium-box-server-cache");var X=class{constructor(t){this.cache=new e({stdTTL:t,checkperiod:.2*t,useClones:!1}),this.loading={}}get(e,t){const s=this.cache.get(e);if(s)return z(`Serving key ${e} from cache`),Promise.resolve(s);if(this.loading[e]){return z(`Load process for key ${e} already running, waiting ...`),new Promise((t,s)=>{this.loading[e].listeners.push({resolve:t,reject:s})})}this.loading[e]=this.loading[e]||{listeners:[]};const n=new Promise((t,s)=>{this.loading[e].listeners.push({resolve:t,reject:s})});return z(`Load process for key ${e} started, waiting ...`),t().then(t=>{z(`Load process for key ${e} ready, notifying listeners ...`),this.cache.set(e,t),this.loading[e].listeners.forEach(({resolve:e})=>e(t)),delete this.loading[e]}).catch(t=>{this.loading[e].listeners.forEach(({reject:e})=>e(t)),delete this.loading[e]}),n}del(e){this.cache.del(e)}delStartWith(e=""){if(!e)return;const t=this.cache.keys();for(const s of t)0===s.indexOf(e)&&this.del(s)}flush(){this.cache.flushAll()}};const W=B("botium-box-server-utils");var K={FindFullTestSet:(e,t)=>e.query.testSet({where:{id:t}}," \n{\n  id\n  name\n  client { id }\n  expandConvos\n  expandUtterancesToConvos\n  expandUtterancesIncomprehension\n  selectionType\n  tags\n  scripts { id name script scriptType }\n  repositories { id name giturl gitbranch gitdir gituser gitpassword globFilter }\n  folders { id name path globFilter }\n  excels { id name filename filecontent hasConvos hasPartialConvos hasUtterances worksheetsConvos worksheetsPartialConvos worksheetsUtterances startRow startCol }\n}"),RetrieveTestSetDetails:e=>({id:e.id,name:e.name,expandConvos:e.expandConvos,expandUtterancesToConvos:e.expandUtterancesToConvos,expandScriptingMemory:e.expandScriptingMemory,convos:"SELECTION_TYPE_REMOTE_ONLY"!==e.selectionType&&e.scripts&&e.scripts.filter(e=>"SCRIPTING_TYPE_CONVO"===e.scriptType).map(t=>({format:"SCRIPTING_FORMAT_TXT",content:t.script,sourceTag:{testSetId:e.id,testSetScriptId:t.id}})),pconvos:"SELECTION_TYPE_REMOTE_ONLY"!==e.selectionType&&e.scripts&&e.scripts.filter(e=>"SCRIPTING_TYPE_PCONVO"===e.scriptType).map(t=>({format:"SCRIPTING_FORMAT_TXT",content:t.script,sourceTag:{testSetId:e.id,testSetScriptId:t.id}})),utterances:"SELECTION_TYPE_REMOTE_ONLY"!==e.selectionType&&e.scripts&&e.scripts.filter(e=>"SCRIPTING_TYPE_UTTERANCES"===e.scriptType).map(t=>({format:"SCRIPTING_FORMAT_TXT",content:t.script,sourceTag:{testSetId:e.id,testSetScriptId:t.id}})),scriptingMemories:e.scripts&&e.scripts.filter(e=>"SCRIPTING_TYPE_SCRIPTING_MEMORY"===e.scriptType).map(t=>({format:"SCRIPTING_FORMAT_TXT",content:t.script,sourceTag:{testSetId:e.id,testSetScriptId:t.id}})),folders:"SELECTION_TYPE_LOCAL_ONLY"!==e.selectionType&&e.folders&&e.folders.map(t=>({id:t.id,path:t.path,globFilter:t.globFilter,sourceTag:{testSetId:e.id,testSetFolderId:t.id}})),excels:"SELECTION_TYPE_REMOTE_ONLY"!==e.selectionType&&e.excels&&e.excels.map(t=>({id:t.id,filename:t.filename,filecontent:t.filecontent,hasConvos:t.hasConvos,hasPartialConvos:t.hasPartialConvos,hasUtterances:t.hasUtterances,worksheetsConvos:t.worksheetsConvos,worksheetsPartialConvos:t.worksheetsPartialConvos,worksheetsUtterances:t.worksheetsUtterances,startRow:t.startRow,startCol:t.startCol,sourceTag:{testSetId:e.id,testSetExcelId:t.id,filename:t.filename}}))}),ExtractQueueSettings:()=>{let e={};if(process.env.BOTIUMBOX_QUEUE_SETTINGS)try{e=JSON.parse(process.env.BOTIUMBOX_QUEUE_SETTINGS),W(`Got queue settings '${JSON.stringify(e)}'`)}catch(e){((e,t)=>{e&&console.log(e),t&&console.log(t),process.exit(1)})(`ERROR parsing queue settings "${process.env.BOTIUMBOX_QUEUE_SETTINGS}":`,e)}else process.env.BOTIUMBOX_QUEUE_PREFIX&&(e.prefix=process.env.BOTIUMBOX_QUEUE_PREFIX),process.env.BOTIUMBOX_QUEUE_REDISURL&&(e.redis=process.env.BOTIUMBOX_QUEUE_REDISURL);return e}};const Q=B("botium-retrieve-all-test-cases");var Z=(e,t,n,a)=>{e.convos&&e.convos.forEach(n=>{let a=[];try{n.format===s.SCRIPTING_FORMAT_TXT&&(a=t.Compile(n.content,s.SCRIPTING_FORMAT_TXT,s.SCRIPTING_TYPE_CONVO)),a&&a.forEach(e=>{e.sourceTag=n.sourceTag})}catch(t){throw Q(t),new Error(`${e.name}: Convo Script compilation failed: ${R.inspect(t)}`)}}),e.pconvos&&e.pconvos.forEach(n=>{let a=[];try{n.format===s.SCRIPTING_FORMAT_TXT&&(a=t.Compile(n.content,s.SCRIPTING_FORMAT_TXT,s.SCRIPTING_TYPE_PCONVO)),a&&a.forEach(e=>{e.sourceTag=n.sourceTag})}catch(t){throw Q(t),new Error(`${e.name}: Partial Convo Script compilation failed: ${R.inspect(t)}`)}}),e.utterances&&e.utterances.forEach(n=>{let a=[];try{n.format===s.SCRIPTING_FORMAT_TXT&&(a=t.Compile(n.content,s.SCRIPTING_FORMAT_TXT,s.SCRIPTING_TYPE_UTTERANCES)),a&&a.forEach(e=>{e.sourceTag=n.sourceTag})}catch(t){throw Q(t),new Error(`${e.name}: Utterance script compilation failed: ${R.inspect(t)}`)}}),e.scriptingMemories&&e.scriptingMemories.forEach(n=>{let a=[];try{n.format===s.SCRIPTING_FORMAT_TXT&&(a=t.Compile(n.content,s.SCRIPTING_FORMAT_TXT,s.SCRIPTING_TYPE_SCRIPTING_MEMORY)),a&&a.forEach(e=>{e.sourceTag=n.sourceTag})}catch(t){throw Q(t),new Error(`${e.name}: Scripting Memory script compilation failed: ${R.inspect(t)}`)}}),e.folders&&e.folders.forEach(s=>{try{const{convos:n,pconvos:a,utterances:r}=t.ReadScriptsFromDirectory(s.path,s.globFilter);n&&n.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,s.sourceTag)}),a&&a.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,s.sourceTag)}),r&&r.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,s.sourceTag)})}catch(t){throw Q(t),new Error(`${e.name}: Folder ${s} script compilation failed: ${R.inspect(t)}`)}});let r=Promise.resolve();e.excels&&e.excels.length>0&&(r=Promise.all(e.excels.map(({id:e,filename:n,filecontent:a,hasConvos:r,hasPartialConvos:o,hasUtterances:i,worksheetsConvos:c,worksheetsPartialConvos:d,worksheetsUtterances:l,startRow:p,startCol:S,sourceTag:h})=>new Promise(e=>{const n=Buffer.from(a,"base64");let m=[],f=[],T=[];r&&(c&&(t.caps[u.SCRIPTING_XLSX_SHEETNAMES]=c),isNaN(p)||(t.caps[u.SCRIPTING_XLSX_STARTROW]=p),isNaN(S)||(t.caps[u.SCRIPTING_XLSX_STARTCOL]=S),m=t.Compile(n,s.SCRIPTING_FORMAT_XSLX,s.SCRIPTING_TYPE_CONVO)),o&&(d&&(t.caps[u.SCRIPTING_XLSX_SHEETNAMES_PCONVOS]=d),isNaN(p)||(t.caps[u.SCRIPTING_XLSX_STARTROW]=p),isNaN(S)||(t.caps[u.SCRIPTING_XLSX_STARTCOL]=S),f=t.Compile(n,s.SCRIPTING_FORMAT_XSLX,s.SCRIPTING_TYPE_PCONVO)),i&&(l&&(t.caps[u.SCRIPTING_XLSX_SHEETNAMES_UTTERANCES]=l),isNaN(p)||(t.caps[u.SCRIPTING_XLSX_STARTROW]=p),isNaN(S)||(t.caps[u.SCRIPTING_XLSX_STARTCOL]=S),T=t.Compile(n,s.SCRIPTING_FORMAT_XSLX,s.SCRIPTING_TYPE_UTTERANCES)),m&&m.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,h)}),f&&f.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,h)}),T&&T.forEach(e=>{e.sourceTag=Object.assign({},e.sourceTag,h)}),e()}))));let o=Promise.resolve();return Promise.all([o,r])};const ee=new n.RegexpTokenizer({pattern:/([A-zÀ-ÿ-$]+|[0-9._]+|.|!|\?|'|"|:|;|,|-)/i}),te=e=>ee.tokenize(e),se=e=>te(e).filter(e=>!ae(e));const ne=(e,t,s)=>[e.substr(0,t),s,e.substr(t+1)].join("");const ae=e=>e&&e.length>1&&e.startsWith("$");var re={tokenize:se,evaluateProbability:e=>Math.random()<e,getLongestToken:e=>{const t=se(e).sort((e,t)=>t.length-e.length);return t.length?t[0]:""},replaceCharAtCaseSensitive:(e,t,s)=>{const n=(e=>e===e.toLocaleLowerCase())(e.charAt(t))?s.toLocaleLowerCase():s.toLocaleUpperCase();return ne(e,t,n)},replaceCharAt:ne,insertAt:(e,t,s)=>[e.substr(0,t),s,e.substr(t)].join(""),replaceWith:(e,t,s)=>{const n=e.indexOf(t);return[e.substr(0,n),s,e.substr(n+t.length)].join("")},reverse:e=>{return e.split("").reverse().join("")},keymap:{1:["2","q"],2:["1","q","w","3"],3:["2","w","e","4"],4:["3","e","r","5"],5:["4","r","t","6"],6:["5","t","y","z","7"],7:["6","y","z","u","8"],8:["7","u","i","9"],9:["8","i","o","0"],0:["9","o","p"],q:["1","2","w","a"],w:["q","a","s","e","3","2"],e:["w","s","d","r","4","3"],r:["e","d","f","t","5","4"],t:["r","f","g","y","z","6","5"],y:["t","g","h","u","7","6","x","s","a"],u:["y","z","h","j","i","8","7"],i:["u","j","k","o","9","8"],o:["i","k","l","p","0","9"],p:["o","l","0"],a:["y","z","s","w","q"],s:["a","y","z","x","d","e","w"],d:["s","x","c","f","r","e"],f:["d","c","v","g","t","r"],g:["f","v","b","h","y","z","t"],h:["g","b","n","j","u","y","z"],j:["h","n","m","k","i","u"],k:["j","m","l","o","i"],l:["k","p","o"],z:["x","s","a","t","g","h","u","7","6"],x:["y","z","c","d","s"],c:["x","v","f","d"],v:["c","b","g","f"],b:["v","n","h","g"],n:["b","m","j","h"],m:["n","k","j"],"ö":["l","p","ü","ä","-","."],"ä":["-","ö","ü","+","#"],"ü":["p","ö","ä","+","´","ß"],"ß":["ü","p","0"]},normalizeNumberOfResult:(e,t=3)=>{if(e.length<=t)return e;const s=[],n=(e.length-t)/t/2;for(let a=0;a<t;a++)s.push(e[Math.round(n+a*(e.length/t))]);return s},isModifiableWord:(e,t)=>{const s=((e,t)=>{const s=te(e).sort((e,t)=>t.length-e.length);for(let n=0;n<s.length;n++){const a=s[n];let r=0;do{if((r=e.indexOf(a,r))>=0){if(r<=t&&t<r+a.length)return a;r++}}while(r>=0)}return null})(e,t);return!!s&&!ae(s)}};const{normalizeNumberOfResult:oe,isModifiableWord:ie}=re;var ce={execute:e=>{let t=[""];const s=e.toLocaleLowerCase();for(let n=0;n<e.length;n++){const a=e.charAt(n)!==s.charAt(n)&&ie(e,n);a&&(t=t.concat(t));for(let r=0;r<t.length;r++){const o=a&&r<t.length/2;t[r]=t[r].concat(o?s.charAt(n):e.charAt(n))}}return t=t.slice(1),oe(t)},metadata:{id:"Case sensitivity"}};const{normalizeNumberOfResult:de}=re;var ue={execute:e=>{const t=e.split(/(?<! ) (?! )/);let s=[t[0]];for(let e=1;e<t.length;e++){s=s.concat(s);for(let n=0;n<s.length;n++)s[n]=s[n]+(n<s.length/2?" ":"  "),s[n]=s[n]+t[e]}return s=s.slice(1),de(s)},metadata:{id:"Duplicate space"}},le={execute:e=>[e+" :)"],metadata:{id:"Emojis"}};const{normalizeNumberOfResult:pe}=re;var Se=[ce,ue,le,{execute:e=>{let t=[""];const s=e.replace(/(.) /g,"$1\n");for(let n=0;n<e.length;n++){e.charAt(n)!==s.charAt(n)&&(t=t.concat(t));for(let a=0;a<t.length;a++)t[a]=t[a].concat(a<t.length/2?e.charAt(n):s.charAt(n))}return t=t.slice(1),pe(t)},metadata:{id:"Enter instead of space"}},{execute:e=>[e.replace(" ,"," ").replace(", "," ").replace(","," ")],metadata:{id:"Missing punctuation mark"}}];const{getLongestToken:he,insertAt:me,replaceWith:fe}=re;const Te=e=>{const t=[];let s=e;return[2,e.length-2].forEach(n=>{t.push(me(e,n,e[n])),s=me(s,n,s[n])}),t.push(s),t};var ge={execute:e=>{const t=[],s=he(e);return s.length<5?t:(Te(s).forEach(n=>{t.push(fe(e,s,n))}),t)},metadata:{id:"Double character"}};const{getLongestToken:be,replaceWith:ye,reverse:Ee}=re;const we=e=>{const t=new Set([e]);return[1,2].forEach(s=>{let n=s,a=!1;do{const s=e.substr(n,3),r=ye(e,s,Ee(s));t.has(r)||(t.add(r),a=!0),++n>=e.length-2&&(a=!0)}while(!a)}),t.delete(e),t};var Ce={execute:e=>{const t=[],s=be(e);return s.length<7?t:(we(s).forEach(n=>{t.push(ye(e,s,n))}),t)},metadata:{id:"Duplicate space"}};const{tokenize:ve,replaceWith:Ie}=re,Oe=["Aale, Ahle","Ai, Ei","Annalen, analen","aß, Aas","Bad, bat","bald, ballt","Bällen, bellen","Band, bannt","Beete, bete","bis, Biss","Block, Blog","Boot, bot","Boote, Bote","Bug, buk","Bund, bunt","Chor, Korps","Code, Kot","das, dass","dehnen, denen","erhält, erhellt","Fähre, faire","Fälle, Felle","fällt, Feld","Färse, Ferse, Verse","fast, fasst","fetter, Vetter","fiel, viel","fließt, fliehst, fliest","frisst, Frist","Fühler, Phyla","Geld, gellt","Gewand, gewandt","Grad, Grat","Graf, Graph","Halt, hallt","hallte, halte","hält, Held, hellt","Hämmer, Hemmer","hängst, Hengst","harrt, hart","hasst, hast","Häute, heute","Heer, hehr, her","Hemd, hemmt","hohl, hol","Hund, Hunt","isst, ist","kannte, Kante","konnten, Konten","Kuh, Coup","küsste, Küste","Laib, Leib","Laie, Leihe","laichen, Leichen","lasst, Last","läuten, Leuten","Lärche, Lerche","Leere, Lehre","leeren, lehren","Leerstelle, Lehrstelle","Leid, leiht","Lid, Lied","lies, ließ","liest, least","Mahl, Mal","Mähre, Märe, Meere","mahlen, malen","man, Mann","Märkte, merkte","Meer, mehr","Miene, Mine","misst, Mist","Mohr, Moor","mühten, Mythen","Mund, Munt","Nachnahme, Nachname","nahmen, Namen","packt, Pakt","pisste, Piste","rächen, Rechen","rächt, Recht","Rad, Rat","Rain, rein","Rede, Reede","Reis, reiß","reist, reißt","ruhte, Rute, Route","säen, sähen","Sämann, Seemann","Sätzen, setzen","Saite, Seite","seid, seit","schafft, Schaft","schallten, schalten","Schänke, schenke","schellte, Schelte","Schlächter, schlechter","Schlämme, schlemme","Schwälle, Schwelle","Schwämme, Schwemme","Seen, sehen","seid, seiht, seit","sie, sieh","Siegel, Sigel","Sohle, Sole","Sold, sollt","späht, spät","Stadt, statt","Städte, Stätte","Ställe, Stelle","starrt, Start","stehlen, Stelen","stiehl, Stiel, Stil","Tod, tot","Trend, trennt","Uhrzeit, Urzeit","Verband, verbannt","Verben, werben","verließ, Verlies","verwaist, verweist","Villen, Willen","Waage, vage","Waagen, wagen","Wahl, Wal","wahr, war","wahre, Ware","Waise, Weise","Wald, wallt","Wälle, Welle","Wände, Wende","Weck, weg","Wehr, wer","wehrt, Wert","weiht, weit","weis, weiß","weist, weißt","wieder, wider","wird, Wirt","Zunahme, Zuname","accept,except","acclamation,acclimation","acts,ax,axe","adolescence,adolescents","aeration,erration","aerie,airy","affect,effect","aid,aide","ail,ale","air,heir,err,ere","aisle,isle,I'll","all,awl","allowed,aloud","allude,elude","altar,alter","appose,oppose","arc,ark","are,our","ascent,assent","ate,eight","away,aweigh","aye,I,eye","bade,bayed","bail,bale","bait,bate","bald,bawled,balled","ball,bawl","band,banned","bard,barred","bare,bear","baron,barren","base,bass","based,baste","bazaar,bizarre","be,bee","beach,beech","bean,been","beat,beet","been,bin","beer,bier","bell,belle","berry,bury","berth,birth","better,bettor","bight,bite","billed,build","bird,burred","blew,blue","boar,bore,boor","board,bored","boarder,border","bode,bowed","bold,bowled","bolder,boulder,bowlder","bole,bowl","boos,booze","bough,bow","boy,buoy","braid,brayed","braise,braze,brays,braize","brake,break","breach,breech","bread,bred","brewed,brood","brews,bruise","bridal,bridle","burro,burrow","bus,buss","bused,bust","but,butt","buy,bye,by","cache,cash","callous,callus","can't,cant","cannon,canon","canter,cantor","carat,carrot,caret","caries,carries","cast,caste","cede,seed","cell,sell","cellar,seller","censor,sensor","cent,sent,scent","cents,sense,scents","cereal,serial","cession,session","chaise,chase","chalk,chock","chance,chants","chased,chaste","cheap,cheep","chews,choose","chic,sheik","choir,quire","chord,cored,cord","chute,shoot","cite,site,sight","clause,claws","click,clique","close,clothes","coal,cole","coaled,cold","coarse,course","coated,coded","cocks,cox","complement,compliment","contingence,contingents","coo,coup","coop,coupe","correspondence,correspondents","cosign,cosine","council,counsel","councilor,counselor","creak,creek","crewed,crude","crews,cruise","cue,queue","currant,current","curser,cursor","dam,damn","Dane,deign","days,daze","dear,deer","dense,dents","dependence,dependents","dew,due,do","die,dye","dire,dyer","discreet,discrete","doe,dough","does,doze,doughs","done,dun","dual,duel","ducked,duct","earn,urn","either,ether","emigrant,immigrant","eutopia,utopia","ewe,you,yew","eyed,I'd","fain,feign","faint,feint","fair,fare","fairy,ferry","fate,fete","faze,phase","feat,feet","feudal,futile","find,fined","finish,Finnish","fir,fur","flair,flare","flea,flee","flecks,flex","flew,flue","flour,flower","foaled,fold","for,four,fore","forego,forgo","foreword,forward","forth,fourth","foul,fowl","frees,frieze,freeze","friar,fryer","gage,gauge","gait,gate","gel,jell","gene,jean","gild,guild","gneiss,nice","gored,gourd","grade,grayed,greyed","grate,great","grays,greys,graze","grisly,grizzly","groan,grown","guessed,guest","guide,guyed","guise,guys","hail,hale","hair,hare","hairy,harry","hall,haul","halve,have","hangar,hanger","hay,hey","hays,haze","he'd,heed","he'll,heel,heal","hear,here","heard,herd","heated,heeded","hew,hue","hi,high","higher,hire","him,hymn","ho,hoe","hoar,whore","hoard,horde","hoarse,horse","hoes,hose","hold,holed","hole,whole","holey,wholly,holy","hostel,hostile","hour,our","idle,idol","immanent,imminent","in,inn","incidence,incidents","incite,insight","instance,instants","intense,intents","intension,intention","it's,its","jam,jamb","knave,nave","knead,need,kneed","knew,new","knight,night","knit,nit","knot,not,naught","know,no","knows,nose","lacks,lax","lade,laid","lain,lane","lair,layer","lam,lamb","laps,lapse","lay,lei","lays,laze","leach,leech","lead,led","leak,leek","lean,lien","leased,least","lends,lens","lessen,lesson","lesser,lessor","let's,lets","levee,levy","liar,lyre","lichen,liken","lickerish,licorice","lie,lye","links,lynx","lo,low","load,lode","loan,lone","loch,lock","locks,lox","loop,loupe","loos,lose","lose,loose","made,maid","mail,male","main,mane","maize,maze,Mays","mall,maul","manner,manor","marshal,martial","massed,mast","mat,matte","mean,mien","meat,mete,meet","medal,mettle,meddle,metal","might,mite","mince,mints","mind,mined","miner,minor","missed,mist","moat,mote","mood,mooed","moor,more","morning,mourning","muscle,mussel","mussed,must","naval,navel","nay,neigh","nicks,nix","none,nun","oar,ore,or","ode,owed","oh,owe","once,wants","one,won","oohs,ooze","overseas,oversees","paced,paste","packed,pact","pail,pale","pain,pane","pair,pear,pare","palate,pallet,palette","parish,perish","passed,past","patience,patients","pause,paws","peace,piece","peak,pique,peek","peal,peel","pearl,purl","pedal,petal,peddle","peer,pier","penance,pennants","per,purr","pi,pie","plain,plane","plainer,planer,planar","plait,plate","pleas,please","pole,poll","poor,pour,pore","populace,populous","praise,preys,prays","pray,prey","precedence,precedents","premier,premiere","presence,presents","pride,pried","prier,prior","pries,prize","prince,prints","principal,principle","profit,prophet","rack,wrack","raid,rayed","rail,rale","rain,rein,reign","raise,raze,rays","rap,wrap","rapt,wrapped,wrapt","re-cover,recover","re-lay,relay","read,red","read,reed","real,reel","recede,reseed","reek,wreak","residence,residents","rest,wrest","retch,wretch","rhyme,rime","right,write,rite,wright","ring,wring","ringer,wringer","rise,ryes","road,rowed,rode","roe,row","roil,royal","role,roll","roomer,rumor,rumour","root,route","rose,rows","rote,wrote","rude,rued","rues,ruse","rung,wrung","rye,wry","sail,sale","scene,seen","sea,see","seam,seem","sear,seer","seas,seize,sees","sects,sex","sew,sow,so","shake,sheik","shear,sheer","shoe,shoo","sic,sick","sics,six","side,sighed","sighs,size","sign,sine","slay,sleigh","sleight,slight","slew,slough","soar,sore","soared,sword","sold,soled","sole,soul","some,sum","son,sun","stair,stare","stake,steak","steal,steel","step,steppe","storey,story","straight,strait","suite,sweet","tacked,tact","tacks,tax","tail,tale","taper,tapir","tarry,terry","taught,taut","tea,tee","team,teem","tears,tiers","teas,tees,tease","tense,tents","than,then","there,they're,their","threw,through","throne,thrown","thyme,time","tide,tied","tier,tire","tighten,titan","to,two,too","toad,towed,toed","toe,tow","told,tolled","tracked,tract","tray,trey","udder,utter","vain,vein,vane","vale,veil","vial,vile","vice,vise","wade,weighed","wail,whale","waist,waste","wait,weight","waive,wave","waiver,waver","wale,whale","war,wore","ward,warred","ware,where,wear","warn,worn","wax,whacks","way,whey,weigh","we,wee","we'd,weed","we'll,wheel,weal,wheal","we're,weir,were","we're,whir","we've,weave","weak,week","wearer,where're","weather,whether","wet,whet","wheeled,wield","which,witch","while,wile","whiled,wild","whine,wine","whined,wined,wind","whirled,world","whit,wit","whither,wither","who's,whose","whoa,woe","wood,would","yack,yak","yaw,your,yore,you're","yoke,yolk","yore,your,you're","you'll,Yule","aahed,odd","adieu,ado","ant,aunt","aural,oral","marry,merry","rout,route","seated,seeded","shone,shown","tidal,title","trader,traitor","vary and very"];let Re;const Ne=()=>{if(Re)return Re;const e=Oe.map(function(e){return e.toLocaleLowerCase().trim().split(",")});return Re=[],e.forEach(function(e){e.forEach(function(t){Re[t]=e.filter(e=>e!==t)})}),Re},Pe=e=>{const t=Ne();if((e=e.toLocaleLowerCase())in t)return t[e][0]};var Ae={execute:e=>{const t=ve(e);let s=e;return t.forEach(e=>{const t=Pe(e);t&&(s=Ie(s,e,t))}),s!==e?[s]:[]},metadata:{id:"Homophones"}};const{getLongestToken:$e,replaceCharAtCaseSensitive:De,replaceWith:_e,keymap:xe}=re;const ke=e=>{const t=[];return[2,e.length-2].forEach(s=>{const n=e[s].toLocaleLowerCase();if(n in xe){const a=xe[n];[a[0],a[a.length-1]].forEach(n=>{t.push(De(e,s,n))})}}),t};var je={execute:e=>{const t=[],s=$e(e);return s.length<5?t:(ke(s).forEach(n=>{t.push(_e(e,s,n))}),t)},metadata:{id:"Mishit"}};const{getLongestToken:Me,replaceCharAtCaseSensitive:Be,replaceWith:qe}=re;const Le=e=>{const t=[];return[2,e.length-2].forEach(s=>{t.push(Be(e,s,""))}),t};var Fe={execute:e=>{const t=[],s=Me(e);return s.length<5?t:(Le(s).forEach(n=>{t.push(qe(e,s,n))}),t)},metadata:{id:"Missing character"}};const{getLongestToken:Je,replaceWith:Ue,reverse:Ge}=re;const Ve=e=>{const t=new Set([e]);return[2,e.length-2].forEach(s=>{let n=s,a=!1;do{const s=e.substr(n,2),r=Ue(e,s,Ge(s));t.has(r)||(t.add(r),a=!0),++n>=e.length-2&&(a=!0)}while(!a)}),t.delete(e),t};var He={execute:e=>{const t=[],s=Je(e);return s.length<5?t:(Ve(s).forEach(n=>{t.push(Ue(e,s,n))}),t)},metadata:{id:"Mixing character"}};const{replaceCharAt:Ye}=re,ze={z:"y",Z:"Y",y:"z",Y:"Z"};var Xe={execute:e=>{let t=e;for(let e=0;e<t.length;e++){const s=t.charAt(e);s in ze&&(t=Ye(t,e,ze[s]))}return t===e?[]:[t]},metadata:{id:"qwertz vs qwerty keyboard"}};const{getLongestToken:We,replaceCharAtCaseSensitive:Ke,replaceWith:Qe,keymap:Ze}=re;const et=e=>{const t=[],s=Math.round(e.length/2),n=e[s].toLocaleLowerCase();if(n in Ze){const a=Ze[n];[a[0],a[a.length-1]].forEach(n=>{t.push(Ke(e,s,e[s]+n))})}return t};var tt={execute:e=>{const t=[],s=We(e);return s.length<5?t:(et(s).forEach(n=>{t.push(Qe(e,s,n))}),t)},metadata:{id:"Sausage fingers"}};const{getLongestToken:st,replaceWith:nt}=re;const at=e=>{const t=new Set([e]);return[1,2].forEach(s=>{let n=s,a=!1;do{const s=e.substr(n,3).split("");let r=Array.from(s);r.push(r[0]),r.shift();const o=nt(e,s.join(""),r.join(""));t.has(o)||(t.add(o),a=!0),++n>=e.length-2&&(a=!0)}while(!a)}),t.delete(e),t};var rt=[ge,Ce,Ae,je,Fe,He,Xe,tt,{execute:e=>{const t=[],s=st(e);return s.length<7?t:(at(s).forEach(n=>{t.push(nt(e,s,n))}),t)},metadata:{id:"Shift characters"}}];const ot=Se.concat(rt),it={};ot.forEach(e=>{it[e.metadata.id]=e});const ct={};Se.forEach(e=>{ct[e.metadata.id]="habits"}),rt.forEach(e=>{ct[e.metadata.id]="typo"});var dt={GetMutatorById:e=>{if(!(e in ct))throw Error(`Unknown ID: ${e}`);return it[e]},allMutatorNames:Object.keys(it),pipelineAllMutatorCombined:[[Se,rt],[Se],[rt]],pipelineAllMutatorNotCombined:[[Se],[rt]]};const{pipelineAllMutatorCombined:ut,pipelineAllMutatorNotCombined:lt,GetMutatorById:pt,allMutatorNames:St}=dt;const ht=(e,t)=>{let s=new Set;for(const n of t){let t=[e];for(const e of n){let s=[];for(const n of e)for(const e of t)s=s.concat(n.execute(e));t=s}for(const e of t)s.has(e)?console.log("duplicate utterance : <"+e+"> created by "+JSON.stringify(n,2)):s.add(e)}return[...s]};const mt=e=>{if(!e.humanifiersToExecute||!e.humanifiersToExecute.length)return[[lt]];return[[(e=>e.map(e=>pt(e)))(e.humanifiersToExecute)]]};var ft={pipelineAllMutatorCombined:ut,pipelineAllMutatorNotCombined:lt,allHumanifiers:St,Execute:(e,t)=>{const s=mt(t);return ht(e,s)},ExecutePipeline:ht};const Tt=B("botium-box-clone-testset"),{BotDriver:gt}=o,{RetrieveTestSetDetails:bt}=K;const yt=(e,t)=>{const n=g.join(process.env.TESTSETDIR,`${M(t)}_CLONED_${w("Aa0",5)}`);a.sync(n);const r=Object.keys(e.utterances);for(let t=0;t<r.length;t++){let s=[r[t]].concat(e.utterances[r[t]].utterances).join("\r\n");T.writeFile(g.join(n,`${r[t]}.utterances.txt`),s,function(e){if(e)throw e})}const o=e.GetCompiler(s.SCRIPTING_FORMAT_TXT);for(let t=0;t<e.convos.length;t++){let s=o.Decompile([e.convos[t]]);T.writeFile(g.join(n,`c${t}.convo.txt`),s,function(e){if(e)throw e})}return n},Et=(e,t)=>{const s={all:e.utterances,me:new Set,bot:new Set,both:null,neither:null,toHumanify:{},allUtteranceCount:0,utterancesToHumanifyCount:0};s.neither=new Set(Object.keys(s.all)),e.convos.forEach(e=>{e.conversation.forEach(e=>{e.messageText&&e.messageText in s.all&&(s[e.sender].add(e.messageText),s.neither.delete(e.messageText))})});const n=q.uniq(Array.from(s.me)).filter(e=>s.bot.has(e));s.both=new Set(n);const a={};let r=0,o=0;return t.humanifiersToExecute&&t.humanifiersToExecute.length&&[...s.me,...n,...s.neither].forEach(e=>{o+=s.all[e].utterances.length;let n=Math.round(o*t.percentToHumanify-r);0===r&&0===n&&(n=1),a[e]=n,r+=n}),s.toHumanify=a,s.allUtteranceCount=o,s.utterancesToHumanifyCount=r,s},wt=(e,t,s)=>{t.both.forEach(s=>{if(t.toHumanify[s]){let t=s+"_JUST_BOT";if(t in e.utterances)throw new Error(`There is already an utterance ${t} in the testset!`)}});const n={humanifiedRefs:[],humanifiedRefCount:0,humanifiedUtterancesCount:0,duplicates:0};t.both.forEach(s=>{t.toHumanify[s]&&(e.utterances[s+"_JUST_BOT"]=q.cloneDeep(e.utterances[s]))});Object.keys(t.toHumanify).forEach(a=>{if(t.toHumanify[a]){const r=(n=>{e.utterances[n].utterances=q.uniq(e.utterances[n].utterances);const a=t.toHumanify[n],r=e.utterances[n].utterances;let o=0;for(let t=0;t<a;t++){const a=ft.Execute(r[t],{humanifiersToExecute:s.humanifiersToExecute});e.utterances[n].utterances=e.utterances[n].utterances.concat(a),o+=a.length}let i=e.utterances[n].utterances.length;return e.utterances[n].utterances=q.uniq(e.utterances[n].utterances),{humanifiedRefCount:a,humanifiedUtterancesCount:o,duplicates:i-e.utterances[n].length}})(a);n.humanifiedRefs.push(a),n.humanifiedRefCount+=r.humanifiedRefCount,n.humanifiedUtterancesCount+=r.humanifiedUtterancesCount,n.duplicates+=r.duplicates}});const a=[];return e.convos.forEach(e=>{((e,t)=>(e.conversation.forEach(e=>{if(e.messageText&&t.both.has(e.messageText))return!0}),!1))(e,t)}),e.convos=e.convos.concat(a),n.clonedConvoCount=a.length,n};var Ct={possibleOptions:{humanifiers:ft.allHumanifiers},CloneTestset:(e,t)=>{const s=new gt,n=s.BuildCompiler(),o=g.join(process.env.BOTIUM_TEMPDIR,`${M(e.name)}_CLONED_${w("Aa0",5)}`);return a.sync(o),Z(bt(e),n,0,s.sources).then(()=>{r(o,e=>{e&&Tt(`Failed rimraf ${o}: ${e}`)});const s={},a=Et(n,t);return s.utterances={all:Object.keys(a.all).length,me:a.me.size,bot:a.bot.size,both:a.both.size,neither:a.neither.size,toHumanify:Object.values(a.toHumanify).filter(e=>e).length,allUtteranceCount:a.allUtteranceCount,utterancesToHumanifyCount:a.utterancesToHumanifyCount},s.process=wt(n,a,t),Tt(`Cloning finished: ${JSON.stringify(s)}`),yt(n,e.name)})}};const{BotDriver:vt}=o,{FindFullTestSet:It,RetrieveTestSetDetails:Ot}=K,Rt=B("botium-box-mutate-testset");var Nt={createTestSet:async(e,{testSet:t},s,n)=>s.db.mutation.createTestSet({data:t},n),async updateTestSet(e,{id:t,testSet:s},n,a){if(!await n.db.exists.TestSet({id:t}))throw new Error(`TestSet not found ${t}`);return n.db.mutation.updateTestSet({where:{id:t},data:s},a)},deleteTestSet:async(e,{id:t},s)=>new Promise((e,n)=>{s.db.mutation.deleteTestSet({where:{id:t}},"{id}").then(()=>e(!0)).catch(e=>n(e))}),createTestSetScript:async(e,{testSetScript:t},s,n)=>s.db.mutation.createTestSetScript({data:t},n),async updateTestSetScript(e,{id:t,testSetScript:s},n,a){if(!await n.db.exists.TestSetScript({id:t}))throw new Error(`TestSetScript not found ${t}`);return n.db.mutation.updateTestSetScript({where:{id:t},data:s},a)},deleteTestSetScript:async(e,{id:t},s)=>new Promise((e,n)=>{s.db.mutation.deleteTestSetScript({where:{id:t}},"{id}").then(()=>e(!0)).catch(e=>n(e))}),async createTestSetRepository(e,{testSetRepository:t},s,n){},async updateTestSetRepository(e,{id:t,testSetRepository:s},n,a){},async deleteTestSetRepository(e,{id:t},s){},createTestSetFolder:async(e,{testSetFolder:t},s,n)=>s.db.mutation.createTestSetFolder({data:t},n),async updateTestSetFolder(e,{id:t,testSetFolder:s},n,a){if(!await n.db.exists.TestSetFolder({id:t}))throw new Error(`TestSetFolder not found ${t}`);return n.db.mutation.updateTestSetFolder({where:{id:t},data:s},a)},deleteTestSetFolder:async(e,{id:t},s)=>new Promise((e,n)=>{s.db.mutation.deleteTestSetFolder({where:{id:t}},"{id}").then(()=>e(!0)).catch(e=>n(e))}),createTestSetExcel:async(e,{testSetExcel:t},s,n)=>s.db.mutation.createTestSetExcel({data:t},n),async updateTestSetExcel(e,{id:t,testSetExcel:s},n,a){if(!await n.db.exists.TestSetExcel({id:t}))throw new Error(`TestSetExcel not found ${t}`);return n.db.mutation.updateTestSetExcel({where:{id:t},data:s},a)},deleteTestSetExcel:async(e,{id:t},s)=>new Promise((e,n)=>{s.db.mutation.deleteTestSetExcel({where:{id:t}},"{id}").then(()=>e(!0)).catch(e=>n(e))}),async cloneTestSet(e,{id:t,options:s},n,a){const r=await It(n.db,t);if(!r)throw new Error(`TestSet not found ${t}`);const o=await Ct.CloneTestset(r,s),i=`${r.name}/${g.basename(o)}`,c=`${r.name} cloned to "${g.basename(o)}", Humanifiers "${s.humanifiersToExecute&&s.humanifiersToExecute.join(", ")}", percentage ${s.percentToHumanify}.`,d={data:{...r,name:i,client:r.client&&{connect:{id:r.client.id}}||null,description:c,tags:{set:r.tags?[...r.tags,"Cloned"]:["Cloned"]},folders:{create:[{name:"cloned",path:g.resolve(o)}]},repositories:{},scripts:[],excels:{}}};return delete d.data.id,n.db.mutation.createTestSet(d,a)},exportTestSetToGit:async(e,{id:t,options:s},n,a)=>!0,async exportTestSetToFolder(e,{id:t,options:s},n,r){const o=await It(n.db,t);if(!o)throw new Error(`TestSet not found ${t}`);const i=o.folders&&o.folders.find(e=>e.id===s.id);if(!i)throw new Error(`Folder ${s.id} not found in Test Set ${t}`);let c=i.path;s.subdirectory&&(c=g.join(c,s.subdirectory));try{a.sync(c),Rt(`Created output directory ${c}`)}catch(e){throw new Error(`Failed to create output directory ${c}: ${e}`)}const d=(e,t)=>{try{T.writeFileSync(g.join(c,e),t),Rt(`Wrote file ${e} to output directory ${c}`)}catch(t){throw new Error(`Failed to write file ${e} to output directory ${c}: ${t}`)}};return o.scripts&&o.scripts.forEach(e=>{"SCRIPTING_TYPE_CONVO"===e.scriptType&&d(`${M(e.name)}.convo.txt`,e.script),"SCRIPTING_TYPE_PCONVO"===e.scriptType&&d(`${M(e.name)}.pconvo.txt`,e.script),"SCRIPTING_TYPE_UTTERANCES"===e.scriptType&&d(`${M(e.name)}.utterances.txt`,e.script),"SCRIPTING_TYPE_SCRIPTING_MEMORY"===e.scriptType&&d(`${M(e.name)}.scriptingmemory.txt`,e.script)}),o.excels&&o.excels.forEach(e=>{const t=Buffer.from(e.filecontent,"base64");d(`${M(e.name)}.xlsx`,t)}),!0},async updateTestSetStats(e,{id:t},s,n){const o=await It(s.db,t);if(!o)throw new Error(`TestSet not found ${t}`);const i=new vt,c=i.BuildCompiler(),d=g.join(process.env.BOTIUM_TEMPDIR,`${M(o.name)}_STATS_${w("Aa0",5)}`);a.sync(d);const u=Ot(o);try{await Z(u,c,0,i.sources);const e=c.convos&&c.convos.map(e=>({name:e.header.name,order:e.header.order,description:e.header.description,sourceTag:JSON.stringify(e.sourceTag),stepCount:e.conversation&&e.conversation.length||0}))||[],a=c.partialConvos&&Object.values(c.partialConvos).map(e=>({name:e.header.name,description:e.header.description,sourceTag:JSON.stringify(e.sourceTag),stepCount:e.conversation&&e.conversation.length||0}))||[],o=e.length,l=a.length,p=Object.keys(c.utterances).reduce((e,t)=>e+c.utterances[t].utterances.length,0),S=c.scriptingMemories.length,h=await s.db.query.testSet({where:{id:t}},"{ statsCompiledConvos { id } }");return await s.db.mutation.updateTestSet({where:{id:t},data:{statsUpdatedAt:new Date,statsConvoCount:o||0,statsPartialConvoCount:l||0,statsUtterancesCount:p||0,statsScriptingMemoryCount:S||0,statsCompiledConvos:{create:e.concat(a),deleteMany:{id_in:h.statsCompiledConvos&&h.statsCompiledConvos.map(e=>e.id)||[]}}}},n)}finally{r(d,e=>{e&&Rt(`Failed rimraf ${d}: ${e}`)})}}};const{updateTestSetStats:Pt}=Nt,At=B("botium-box-testset-scanner"),$t=(e,t)=>process.env.TESTSETDIR_PUBLIC?g.resolve(process.env.TESTSETDIR_PUBLIC,t):g.resolve(e,t),Dt=(e,t)=>T.readdirSync(e).reduce((s,n)=>{const a=g.join(e,n);return t(a)&&s.push(n),s},[]),_t=async(e,t,s)=>{const n=g.join(t,s);At(`scanDirForTestSets scanning ${n} ...`);const a=(e=>Dt(e,e=>T.statSync(e).isDirectory()))(n),r=(e=>Dt(e,e=>T.statSync(e).isFile()))(n);if(a&&a.length>0)await a.forEach(async n=>{const a=$t(t,g.join(s,n));await(async(e,t)=>{let s=await e.query.testSetFolders({where:{path:t}},"{ id name testSet { id name } }");return s&&0!==s.length||(s=await e.query.testSetFolders({where:{path:t+g.sep}},"{ id name testSet { id name } }")),!!(s&&s.length>0)&&(At(`Folder ${t} already in use - ${s[0].name} in Test Set ${s[0].testSet.name}`),!0)})(e,a)||await _t(e,t,g.join(s,n))});else if(r&&r.length>0){const a={data:{name:s.split(g.sep).join("/"),description:`Imported from directory ${n}, ${r.length} files`,expandConvos:!0,expandUtterancesToConvos:!0,expandScriptingMemory:!1,tags:{set:s.split(g.sep)},folders:{create:[{name:s,path:$t(t,s)}]}}};try{const t=await e.mutation.createTestSet(a,"{ id }");At(`scanDirForTestSets ${s} Imported Test Set ${t.id} with ${r.length} files`),await Pt(void 0,{id:t.id},{db:e}),At(`scanDirForTestSets ${s} Updated Test Set Stats ${t.id}`)}catch(e){At(`scanDirForTestSets ${s} Failed to create ${a.data}: ${e}`)}}};var xt=e=>{(async()=>{_t(e,process.env.TESTSETDIR,".")})().catch(e=>{At(`scanForTestSets failed: ${e}`)})};const kt=c.fork,jt=B("botium-box-server-livechat"),Mt=B("botium-box-server-livechat-worker"),Bt=o.BotDriver,qt=process.env.BOTIUMBOX_LIVECHAT_IDLE_TIMEOUT||3e5,Lt={},Ft={},Jt=(e,t,s)=>{e.send({type:t,message:s})},Ut=({conversationId:e,queueSettings:t,pubsub:s})=>{Ft[e]&&clearTimeout(Ft[e]),Ft[e]=setTimeout(async()=>{const n=new d(t.redis);jt(`Auto cleanup of conversation ${e} after ${qt}ms idle time`),Gt(e),await n.del(e),s.publish(e,{liveChatConvoStepAdded:{err:`Automatically closed chatbot connection after ${qt}ms idle time`}})},qt)},Gt=async e=>{Ft[e]&&clearTimeout(Ft[e]),delete Ft[e];const t=Lt[e];t&&Jt(t,Yt.STOP_CONVERSATION)},Vt=async({conversationId:e},{queueSettings:t})=>{const s=new d(t.redis),n=await s.get(e);return n&&JSON.parse(n)},Ht=async(e,t,s)=>{await s.set(e,JSON.stringify(t)),await s.expire(e,qt/1e3);const n=await s.ttl(e);jt(`updateConversation(${e}) TTL(seconds): ${n}`)},Yt={USER_SAYS:"USER_SAYS",USER_SAYS_FAILED:"USER_SAYS_FAILED",STOP_CONVERSATION:"STOP_CONVERSATION",STOP_CONVERSATION_FINISHED:"STOP_CONVERSATION_FINISHED",MESSAGE_SENTTOBOT:"MESSAGE_SENTTOBOT",MESSAGE_RECEIVEDFROMBOT:"MESSAGE_RECEIVEDFROMBOT",LOG:"LOG"};var zt={startListeners:async({db:e,pubsub:t,queueSettings:s})=>new Promise((e,t)=>{const n=new d(s.redis);n.subscribe("livechat.send","livechat.stop",(s,n)=>{s?t(new Error(`Redis subscribe failed: ${s}`)):(jt(`Livechat Redis connected to ${n} channels.`),e())}),n.on("message",async(e,t)=>{const{conversationId:s,convoStep:n}=JSON.parse(t);if(!Lt[s])return;const a=Lt[s];"livechat.send"===e?(jt(`liveChatSendToBot(${s}) sending convoStep ${R.inspect(n)}`),Jt(a,Yt.USER_SAYS,n)):"livechat.stop"===e&&Gt(s)})}),startBot:async({caps:e},{pubsub:t,queueSettings:s})=>{const n=new d(s.redis),a=i(),r=new l(async(e,r)=>{try{const r=await Vt({conversationId:a},{queueSettings:s}),o=r.length,i=JSON.stringify(Object.assign(e,{convoStepIndex:o}));t.publish(a,{liveChatConvoStepAdded:{convoStep:i}}),r.push(i),Ht(a,r,n),Ut({conversationId:a,queueSettings:s,pubsub:t})}catch(e){jt(`listenerQueue err: ${e}`)}r()}),o=kt(g.resolve(__dirname,process.env.BOTIUMBOX_LIVECHAT_WORKER_FILE||"livechatWorker.js"),[JSON.stringify({caps:e,conversationId:a})],{execArgv:["--inspect=0"]});return o.on("message",({type:e,message:s})=>{switch(jt(`Received IPC message ${e} from worker. conversationId: ${a}, message: ${R.inspect(s)}`),e){case Yt.USER_SAYS_FAILED:jt(`liveChatSendToBot UserSays failed: ${s}`),t.publish(a,{liveChatConvoStepAdded:{err:`${s}`}});break;case Yt.LOG:Mt(s);break;case Yt.STOP_CONVERSATION_FINISHED:delete o[s.conversationId];break;case Yt.MESSAGE_SENTTOBOT:case Yt.MESSAGE_RECEIVEDFROMBOT:r.push(s);break;default:jt(`Unknown message type: ${e}`)}}),Lt[a]=o,Ht(a,[],n),Ut({conversationId:a,queueSettings:s,pubsub:t}),a},sendToBot:async({conversationId:e,convoStep:t},{queueSettings:s})=>{new d(s.redis).publish("livechat.send",JSON.stringify({conversationId:e,convoStep:t}))},stopBot:async({conversationId:e},{queueSettings:t})=>{new d(t.redis).publish("livechat.stop",JSON.stringify({conversationId:e}))},getConversation:Vt,getConversationScript:async({caps:e,conversationId:t,testCaseName:s},{queueSettings:n})=>{const a=await Vt({conversationId:t},{queueSettings:n});if(!q.isArray(a))throw new Error("Conversation not available (anymore).");const r=new Bt(e).BuildCompiler(),o={header:{name:s},conversation:a.map(e=>(e=>(e.asserters||(e.asserters=[]),e.nlp&&(e.nlp.intent&&e.asserters.push({name:"INTENT",args:[e.nlp.intent.name]}),e.nlp.entities&&e.asserters.push({name:"ENTITIES",args:e.nlp.entities.map(e=>e.name)})),e))(JSON.parse(e)))},i=r.Decompile([o],"SCRIPTING_FORMAT_TXT");return jt(`Decompiled script: ${i}`),i},IPC_MESSAGE_TYPE:Yt};var Xt,Wt=(function(e){const t=B("botium-box-server-agents-utils"),s=e.exports,{RetrieveTestSetDetails:n}=K;e.exports.getServerDefaultCapabilities=(e=>({FBPAGERECEIVER_REDISURL:e&&e.queueSettings&&e.queueSettings.redis})),e.exports.getAttachment=((e,t)=>e.query.testSessionTestCaseResultAttachment({where:{id:t}},"{ id name mimeType base64 testSessionTestCaseResult { testSession { client { id } } } }")),e.exports.getExcel=((e,t)=>e.query.testSetExcel({where:{id:t}},"{ id filename filecontent testSet { client { id } } }")),e.exports.lookupApiKey=((e,t)=>{const s=new Date(Date.now()).toISOString();if(!t)return;const n={where:{AND:[{key:t},{OR:[{validFrom:null},{validFrom_lte:s}]},{OR:[{validTo:null},{validTo_gte:s}]}]}};return e.query.apiKeys(n,"{ id name clients { id name } }").then(e=>e&&0!==e.length?(e[0].roles=[{id:"APIKEY",name:"APIKEY",permissions:["*"]}],e[0]):null)}),e.exports.findFullPerformanceTestSession=((e,t)=>e.query.performanceTestSession({where:{id:t}},"{ \n    id \n    client { id name }\n    createdAt\n    name\n    description\n    tags\n    chatbot { \n      id \n      name\n      description \n      tags\n      capabilities { name type stringValue intValue booleanValue jsonValue } \n      sources { name type stringValue intValue booleanValue jsonValue } \n      envs { name type stringValue intValue booleanValue jsonValue } \n    } \n    testSets { \n      id \n      name\n      description \n      tags\n      expandConvos\n      expandUtterancesToConvos\n      expandUtterancesIncomprehension\n      scripts { id name script scriptType } \n      repositories { id name giturl gitbranch gitdir globFilter } \n      folders { id name path globFilter }\n      excels { id name filename filecontent hasConvos hasPartialConvos hasUtterances worksheetsConvos worksheetsPartialConvos worksheetsUtterances startRow startCol }\n    }\n    registeredComponents { id name type default src ref global args }\n    testProject { id name description tags capabilities { name type stringValue intValue booleanValue jsonValue } }\n    results {id stepIndex convo execCount execDurationMin execDurationMax execDurationSum waitCount waitDurationMin waitDurationMax waitDurationSum}\n    jobs {id status err started finished agentName}\n    capabilities { name type stringValue intValue booleanValue jsonValue } \n    sources { name type stringValue intValue booleanValue jsonValue } \n    envs { name type stringValue intValue booleanValue jsonValue }\n    parallelConvoCount\n    parallelJobCount\n    tickRepeatInitial\n    tickRepeatPerTick\n    tickMaxTime\n    tickTime\n    dataDensity     \n    }")),e.exports.findFullTestSession=((e,t)=>e.query.testSession({where:{id:t}},"{ \n    id \n    name\n    client { id name }\n    description\n    createdAt\n    tags\n    batchCount\n    bail\n    chatbot { \n      id \n      name\n      description \n      tags\n      capabilities { name type stringValue intValue booleanValue jsonValue } \n      sources { name type stringValue intValue booleanValue jsonValue } \n      envs { name type stringValue intValue booleanValue jsonValue } \n    } \n    testSets { \n      id \n      name\n      description \n      tags\n      useMatchingMode\n      expandConvos\n      expandConvosMode\n      expandConvosModeRandomCount\n      expandUtterancesToConvos\n      expandUtterancesIncomprehension\n      useScriptingMemory\n      useScriptingMemoryMatchingMode\n      expandScriptingMemory\n      normalizeText\n      selectionType\n      scripts { id name script scriptType } \n      repositories { id name giturl gitbranch gitdir gituser gitpassword globFilter } \n      folders { id name path globFilter }\n      excels { id name filename filecontent hasConvos hasPartialConvos hasUtterances worksheetsConvos worksheetsPartialConvos worksheetsUtterances startRow startCol }\n    }\n    deviceSets { id name description tags provider { id name type url username password } devices { id name capabilities } } \n    testProject { id name description tags capabilities { name type stringValue intValue booleanValue jsonValue } }\n    registeredComponents { id name type default src ref global args }\n    agent { id name } \n    capabilities { name type stringValue intValue booleanValue jsonValue } \n    sources { name type stringValue intValue booleanValue jsonValue } \n    envs { name type stringValue intValue booleanValue jsonValue } \n    }")),e.exports.findSimpleTestSessionResults=((e,t)=>e.query.testSession({where:{id:t}},"{ id name status createdAt\n    client { id name }\n    results { \n      id testcaseName createdAt testcaseSource success err duration \n      testSet { id name tags } \n      testSetRepository { id name gitbranch }\n      testSetFolder { id name }\n      testSetExcel { id name }\n      testSetFilename\n    } }")),e.exports.findSimplePerformanceTestSessionResults=((e,t)=>e.query.performanceTestSession({where:{id:t}},"{ id name createdAt\n    client { id name }\n    results {id stepIndex convo execCount execDurationMin execDurationMax execDurationSum waitCount waitDurationMin waitDurationMax waitDurationSum stepStartAt job {id}}\n    jobs {id status err started finished agentName}\n    }")),e.exports.findAgentFromJobData=((e,s,n)=>{if(!s.data.name||!s.data.group){const e=`invalid agent event, name or group not given ${s.data}`;return t(e),Promise.reject(e)}return e.query.agent({where:{name:s.data.name}},n||"{ id name debug capabilities { name type stringValue intValue booleanValue jsonValue } }")}),e.exports.findAgentFromName=((e,t,s)=>e.query.agent({where:{name:t}},s||"{ id name debug capabilities { name type stringValue intValue booleanValue jsonValue } }"));const a=e=>({ref:e.ref,src:e.src,global:e.global,args:e.args&&JSON.parse(e.args)});e.exports.combineRegisteredComponents=((...e)=>{const t={ASSERTERS:[],LOGIC_HOOKS:[],USER_INPUTS:[]},s={ASSERTER:"ASSERTERS",LOGICHOOK:"LOGIC_HOOKS",USERINPUT:"USER_INPUTS"};return e&&e.forEach(e=>{e&&e.forEach(e=>{const n=s[e.type];if(!n)return;const r=t[n].findIndex(t=>t.ref===e.ref);r>=0?t[n][r]=a(e):t[n].push(a(e))})}),t}),e.exports.composeBotiumCapabilities=(e=>e&&e.reduce((e,t)=>("STRING"!==t.type&&"TEXT"!==t.type&&"JS"!==t.type||(e[t.name]=t.stringValue?t.stringValue.replace(/\\n/g,"\n"):""),"INT"===t.type&&(e[t.name]=parseInt(t.intValue)),"BOOLEAN"===t.type&&(e[t.name]=!!t.booleanValue),"JSON"===t.type&&(e[t.name]=t.jsonValue),e),{})),e.exports.combineBotiumCapabilities=((...e)=>{const t={};return e&&e.forEach(e=>{e&&Object.keys(e).forEach(s=>{t[s]=e[s]})}),t}),e.exports.extractTestSessionLike=(async(e,a)=>{const r=await e.db.query.registeredComponents({where:{default:!0}}),o=s.combineRegisteredComponents(r,a.registeredComponents),i=s.combineBotiumCapabilities(o,{PROJECTNAME:a.name},s.composeBotiumCapabilities(a.chatbot.capabilities),s.combineScriptingCapabilities(a.testSets),a.testProject&&s.composeBotiumCapabilities(a.testProject.capabilities)||[],s.composeBotiumCapabilities(a.capabilities),s.getServerDefaultCapabilities(e));t(`extractTestSessionLike ${a.id} testSessionCaps: ${JSON.stringify(i)}`);const c=s.combineBotiumCapabilities(s.composeBotiumCapabilities(a.chatbot.sources),s.composeBotiumCapabilities(a.sources));t(`extractTestSessionLike ${a.id} testSessionSources: ${JSON.stringify(c)}`);const d=s.combineBotiumCapabilities(s.composeBotiumCapabilities(a.chatbot.envs),s.composeBotiumCapabilities(a.envs));t(`extractTestSessionLike ${a.id} testSessionEnvs: ${JSON.stringify(d)}`);const u=a.testSets.map(e=>n(e));return t(`extractTestSessionLike ${a.id} testSessionTestSets: ${JSON.stringify(u)}`),{testSessionCaps:i,testSessionSources:c,testSessionEnvs:d,testSessionTestSets:u}});const r={UTTEXPANSION_MODE_ALL:"all",UTTEXPANSION_MODE_FIRST:"first",UTTEXPANSION_MODE_RANDOM:"random"},o={MATCHING_MODE_REGEXP:"regexp",MATCHING_MODE_INCLUDE:"include",MATCHING_MODE_INCLUDELOWERCASE:"includeLowerCase"},i={MATCHING_MODE_NON_WHITESPACE:"non_whitespace",MATCHING_MODE_WORD:"word"};e.exports.combineScriptingCapabilities=(e=>{if(!e)return{};const t={},s=e.filter(e=>e.useMatchingMode).map(e=>e.useMatchingMode);if(q.uniq(s).length>1)throw new Error(`Test Sets not compatible, found multiple SCRIPTING_MATCHING_MODE: ${R.inspect(s)} ...`);s.length>0&&(t[u.SCRIPTING_MATCHING_MODE]=o[s[0]]),t[u.SCRIPTING_NORMALIZE_TEXT]=!!(e.findIndex(e=>e.normalizeText)>=0),t[u.SCRIPTING_ENABLE_MEMORY]=!!(e.findIndex(e=>e.useScriptingMemory)>=0);const n=q.uniq(e.filter(e=>e.useScriptingMemory&&e.useScriptingMemoryMatchingMode).map(e=>e.useScriptingMemoryMatchingMode));if(n.length>1)throw new Error(`Test Sets not compatible, found multiple SCRIPTING_MEMORY_MATCHING_MODE: ${R.inspect(n)} ...`);n.length>0&&(t[u.SCRIPTING_MEMORY_MATCHING_MODE]=i[n[0]]);const a=q.uniq(e.filter(e=>e.expandConvos&&e.expandConvosMode).map(e=>e.expandConvosMode));if(a.length>1)throw new Error(`Test Sets not compatible, found multiple SCRIPTING_UTTEXPANSION_MODE: ${R.inspect(a)} ...`);a.length>0&&(t[u.SCRIPTING_UTTEXPANSION_MODE]=r[a[0]]);const c=q.uniq(e.filter(e=>e.expandConvos&&"UTTEXPANSION_MODE_RANDOM"===e.expandConvosMode&&e.expandConvosModeRandomCount).map(e=>e.expandConvosModeRandomCount));if(c.length>1)throw new Error(`Test Sets not compatible, found multiple SCRIPTING_UTTEXPANSION_RANDOM_COUNT: ${R.inspect(c)} ...`);c.length>0&&(t[u.SCRIPTING_UTTEXPANSION_RANDOM_COUNT]=c[0]);const d=q.uniq(e.filter(e=>e.expandUtterancesToConvos&&e.expandUtterancesIncomprehension).map(e=>e.expandUtterancesIncomprehension));if(d&&d.length>1)throw new Error(`Test Sets not compatible, found multiple SCRIPTING_UTTEXPANSION_INCOMPREHENSION: ${R.inspect(d)} ...`);return d&&d.length>0&&(t[u.SCRIPTING_UTTEXPANSION_INCOMPREHENSION]=d[0]),t})}(Xt={exports:{}},Xt.exports),Xt.exports);Wt.getServerDefaultCapabilities,Wt.getAttachment,Wt.getExcel,Wt.lookupApiKey,Wt.findFullPerformanceTestSession,Wt.findFullTestSession,Wt.findSimpleTestSessionResults,Wt.findSimplePerformanceTestSessionResults,Wt.findAgentFromJobData,Wt.findAgentFromName,Wt.combineRegisteredComponents,Wt.composeBotiumCapabilities,Wt.combineBotiumCapabilities,Wt.extractTestSessionLike,Wt.combineScriptingCapabilities;const Kt=B("botium-box-server-agents-performancetestsession"),Qt=(e,t)=>null===e?t:Math.min(e,t),Zt=(e,t)=>null===e?t:Math.max(e,t),es=new l(async(e,t)=>{Kt(`progressProcessorQueue  starting with ${e.length} entries`);const s=async e=>{Kt(`progressProcessorQueue  update entry: ${R.inspect(e.data)}`),await e.ctx.db.mutation.updatePerformanceTestSessionJob({data:e.data,where:{id:e.performanceTestSessionJobId}})};let n=0;for(const t of e)t.data&&"RUNNING"===t.data.status&&(await s(t),n++);const a=e[0].ctx,r=q.uniq(e.filter(e=>e.dataRaw).map(e=>e.performanceTestSessionId));let o=null;const i=new Map;if(0!==r.length){Kt("progressProcessorQueue aggregating");const t=e=>{if(!e.performanceTestSessionId)throw new Error("performanceTestSessionId is not set");if(!e.performanceTestSessionJobId)throw new Error("performanceTestSessionJobId is not set");if(!e.convo)throw new Error("convo is not set");const t={performanceTestSessionId:e.performanceTestSessionId,performanceTestSessionJobId:e.performanceTestSessionJobId,convo:e.convo,stepIndex:e.stepIndex?e.stepIndex:0};return JSON.stringify(t)},s=(e,t,s,n)=>{e<s&&Kt(`Bad state, ${s} (${s.getTime()}) should be after ${e} (${e.getTime()})!`);const a=(e,t,s,n)=>!(t<s||n<e);let r=0;const o=[];for(;;){let i=_(s).add(n,"ms").toDate();if(o.length>=1e3)return Kt("getSteps terminating at 1000 steps"),o;if(a(s,i,e,t))o.push(r);else if(o.length>0)return o;r++,s=i}},n=async()=>{const e=await a.db.query.performanceTestSessions({where:{id_in:r}}),t=new Map;for(const s of e)t.set(s.id,s);return t},c=await n();Kt(`progressProcessorQueue  affected sessions ${c.size}`);for(const n of e.filter(e=>e.dataRaw)){if(!c.has(n.performanceTestSessionId))throw new Error(`progressProcessorQueue PerformanceTestSession not found by ID ${n.performanceTestSessionId}`);const{dataDensity:e,createdAt:a}=c.get(n.performanceTestSessionId),r=(s,r,o)=>{const c=o?"wait":"exec",d=o?s.testBegin.getTime()-s.queueBegin.getTime():s.runtime,u=t({performanceTestSessionId:n.performanceTestSessionId,performanceTestSessionJobId:n.performanceTestSessionJobId,convo:n.dataRaw.convo,stepIndex:r});i.has(u)||i.set(u,{temporary:{performanceTestSessionJobId:n.performanceTestSessionJobId,firstStepAt:a},stepIndex:r,execCount:0,execDurationSum:0,execDurationMin:null,execDurationMax:null,waitCount:0,waitDurationSum:0,waitDurationMin:null,waitDurationMax:null,stepStartAt:_(a).add(e*r,"ms").toDate()});const l=i.get(u);l[c+"Count"]++,l[c+"DurationSum"]+=d,l[c+"DurationMin"]=Qt(l[c+"DurationMin"],d),l[c+"DurationMax"]=Zt(l[c+"DurationMax"],d)},o=s(n.dataRaw.queueBegin,n.dataRaw.testBegin,a,e);for(const e of o)r(n.dataRaw,e,!0);const d=s(n.dataRaw.testBegin,n.dataRaw.testEnd,a,e);for(const e of d)r(n.dataRaw,e,!1)}Kt(`progressProcessorQueue  aggregated to ${i.size} records`);const d=new l(async(e,t)=>{Kt(`progressProcessorQueue  upserting ${e.length} records`);let s=0,n=0;for(const[t,r]of e){const{performanceTestSessionId:e,performanceTestSessionJobId:o,convo:i,stepIndex:c}=JSON.parse(t),d=await a.db.query.performanceTestSessionAggregatedResults({where:{AND:[{testSession:{id:e}},{job:{id:o}},{stepIndex:c},{convo:i}]}});if(d.length>1)throw new Error(`Expected result: 0 or 1. Found: ${d.length} by ${t}`);if(0===d.length){n++;const t=Object.assign([],r);delete t.temporary,await a.db.mutation.createPerformanceTestSessionAggregatedResult({data:{testSession:{connect:{id:e}},job:{connect:{id:o}},stepIndex:c,convo:i,...t}})}else{s++;const e=d[0],t=r;await a.db.mutation.updatePerformanceTestSessionAggregatedResult({data:{execCount:t.execCount+e.execCount,execDurationMin:Qt(t.execDurationMin,e.execDurationMin),execDurationMax:Zt(t.execDurationMax,e.execDurationMax),execDurationSum:t.execDurationSum+e.execDurationSum,waitCount:t.waitCount+e.waitCount,waitDurationMin:Qt(t.waitDurationMin,e.waitDurationMin),waitDurationMax:Zt(t.waitDurationMax,e.waitDurationMax),waitDurationSum:t.waitDurationSum+e.waitDurationSum},where:{id:e.id}})}}Kt(`progressProcessorQueue  upserted ${e.length} records, inserts ${n} updates: ${s}`),t()},{batchSize:100});for(const e of i.entries())d.push(e);o=new Promise(e=>{d.on("drain",()=>{e()})})}else Kt("No progress data found in batch");o&&await o;for(const t of e)t.data&&"READY"===t.data.status&&(await s(t),n++);Kt(`progressProcessorQueue  batch processed. Full size: ${e.length} stat entries: ${e.length-n} aggregated: ${i.size}`),t()},{batchSize:1e3,batchDelay:1e3});var ts={startPerformanceTestSession:async(e,{performanceTestSessionId:t})=>{try{const s=await Wt.findFullPerformanceTestSession(e.db,t);if(!s)throw new Error(`Performance Test Session ${t} not configured`);const n=s.agent?"performanceprocess.run."+s.agent.name:"performanceprocess.run";Kt(`startPerformanceTestSession ${s.id} queueToSend: ${n}`);const{testSessionCaps:a,testSessionSources:r,testSessionEnvs:o,testSessionTestSets:i}=await Wt.extractTestSessionLike(e,s),c=async(t,a)=>{Kt(`startPerformanceTestSession ${s.id} creating ${s.parallelJobCount} jobs`);for(let i=0;i<s.parallelJobCount;i++){const c=await e.db.mutation.createPerformanceTestSessionJob({data:{status:"PENDING",testSession:{connect:{id:s.id}}}},"{ id }"),d=e.queueConnector.create(n,{title:`Processing Job #${i+1}/${s.parallelJobCount} for Performance Test Session ${s.name}`,performanceTestSessionId:s.id,performanceTestSessionName:s.name,performanceTestSessionJobId:c.id,botium:{Capabilities:t,Sources:r,Envs:o},testSets:a,parallelConvoCount:s.parallelConvoCount,parallelJobCount:s.parallelJobCount,tickRepeatInitial:s.tickRepeatInitial,tickRepeatPerTick:s.tickRepeatPerTick,tickMaxTime:s.tickMaxTime,tickTime:s.tickTime}).removeOnComplete(!0).save(t=>{if(t)return Kt(`Saving batchJob failed: ${t}`);const n=d.id;e.db.mutation.updatePerformanceTestSessionJob({data:{jobId:n},where:{id:c.id}}).then(()=>{Kt(`PerformanceTestSessionJob for PerformanceTestSession ${s.name} registered (jobId: ${n} id: ${c.id})`)}).catch(e=>{Kt(`PerformanceTestSessionJob for PerformanceTestSession ${s.name} registration failed (jobId: ${n}): ${e}`)})})}};await c(a,i)}catch(e){throw Kt(`startPerformanceTestSession failed: ${e}`),e}},performanceTestSessionAgentStart:async(e,{performanceTestSessionId:t,performanceTestSessionJobId:s,agentName:n})=>{es.push({ctx:e,performanceTestSessionId:t,performanceTestSessionJobId:s,data:{agentName:n,status:"RUNNING",started:new Date(Date.now()).toISOString()}})},performanceTestSessionProgress:async(e,t)=>{const s=Object.assign({},t);s.queueBegin&&(s.queueBegin=new Date(s.queueBegin)),s.testBegin&&(s.testBegin=new Date(s.testBegin)),s.testEnd&&(s.testEnd=new Date(s.testEnd)),es.push({ctx:e,performanceTestSessionId:t.performanceTestSessionId,performanceTestSessionJobId:t.performanceTestSessionJobId,dataRaw:s})},performanceTestSessionSetJobReadySuccess:async(e,{performanceTestSessionId:t,performanceTestSessionJobId:s})=>{es.push({ctx:e,performanceTestSessionId:t,performanceTestSessionJobId:s,data:{status:"READY",finished:new Date(Date.now()).toISOString()}})},performanceTestSessionSetJobReadyFailed:async(e,{performanceTestSessionId:t,performanceTestSessionJobId:s,err:n})=>{es.push({ctx:e,performanceTestSessionId:t,performanceTestSessionJobId:s,data:{status:"FAILED",finished:new Date(Date.now()).toISOString(),err:n}})}};const ss=B("botium-box-server-charts-mutation");var ns={updateChartCacheForTestSession:(e,{testSessionId:t},s,n)=>s.db.query.testSession({where:{id:t}},"{ id status results { success testSet { id } } jobs { status totalCount failedCount successCount } }").then(e=>{if(!e)return;const n={};return"READY"===e.status||"FAILED"===e.status?(n.totalCount=e.jobs.filter(e=>"READY"===e.status||"FAILED"===e.status).reduce((e,t)=>e+(t.totalCount||0),0)||0,n.failedCount=e.jobs.filter(e=>"READY"===e.status||"FAILED"===e.status).reduce((e,t)=>e+(t.failedCount||0),0)||0,n.successCount=e.jobs.filter(e=>"READY"===e.status||"FAILED"===e.status).reduce((e,t)=>e+(t.successCount||0),0)||0):(n.totalCount=e.results.length,n.failedCount=e.results.filter(e=>!e.success).length,n.successCount=e.results.filter(e=>e.success).length),n.countByTestSetId=e.results.reduce((e,t)=>{const s=t.testSet?t.testSet.id:"NULL";return e[s]||(e[s]={totalCount:0,failedCount:0,successCount:0}),e[s].totalCount++,t.success?e[s].successCount++:e[s].failedCount++,e},{}),n.countByDeviceSetId=e.results.reduce((e,t)=>{const s=t.deviceSet?t.deviceSet.id:"NULL";return e[s]||(e[s]={totalCount:0,failedCount:0,successCount:0}),e[s].totalCount++,t.success?e[s].successCount++:e[s].failedCount++,e},{}),ss(`updateChartCacheForTestSession ${t} chartData updated: ${R.inspect(n)}`),s.db.mutation.updateTestSession({where:{id:e.id},data:{chartData:JSON.stringify(n)}}).then(()=>n)}).then(e=>(s.chartsCache.flush(),e))};const as=B("botium-box-server-mutation-testsession");var rs={createTestSession:async(e,{testSession:t},s,n)=>s.db.mutation.createTestSession({data:t},n).then(e=>new Promise((n,a)=>{s.queueConnector.create("box.createprocessingjobs",{title:`Job Creation Job for Test Session ${t.name}`,testSessionId:e.id}).removeOnComplete(!0).save(t=>{if(t)return a(t);n(e)})})),deleteTestSession:async(e,{id:t},s)=>new Promise((e,n)=>{s.db.mutation.deleteManyTestSessionJobLogs({where:{testSessionJob:{testSession:{id:t}}}}).then(()=>s.db.mutation.deleteManyTestSessionJobs({where:{testSession:{id:t}}})).then(()=>s.db.mutation.deleteManyTestSessionTestCaseResults({where:{testSession:{id:t}}})).then(()=>s.db.mutation.deleteTestSession({where:{id:t}},"{id}")).then(()=>e(!0)).catch(e=>(as(`Error deleting test session ${t}: ${e}`),n(e)))}),async cancelTestSession(e,{id:t},s){const n=await s.db.query.testSession({where:{id:t}},"{ id name jobs { id status jobId } }");if(!n)return!1;n.jobs.filter(e=>e.jobId).forEach(async e=>{S.Job.remove(e.jobId,t=>{as(t?`cancelTestSession - Failed to remove job ${e.jobId}: ${t}`:`cancelTestSession - removed job ${e.jobId}`)}),"PENDING"===e.status?(as(`cancelTestSession - status of job (${e.jobId}) is PENDING, setting to FAILED`),await s.db.mutation.updateTestSessionJob({data:{status:"FAILED",finished:new Date(Date.now()).toISOString(),progressPercent:100,totalCount:0,failedCount:0,successCount:0,err:"Job cancelled"},where:{id:e.id}})):as(`cancelTestSession - status of job (${e.jobId}) is ${e.status}, keeping`)});const a=await s.db.query.agents({where:{}},"{ id name }");for(const e of a)as(`cancelTestSession - sending cancel test session event ${n.id}/${n.name} to agent ${e.id}/${e.name}`),await s.queueConnector.create(`process.cancel.${e.name}`,{title:`Cancel Test Session Job for Test Session ${n.id}/${n.name}, Agent ${e.name}`,testSessionId:n.id,testSessionName:n.name}).removeOnComplete(!0).save(e=>{if(e)throw e});return!0},async stopTestSession(e,{id:t},s){const n=await s.db.query.testSession({where:{id:t}},"{ id name jobs { id status jobId } }");if(!n)return!1;await s.db.mutation.updateTestSession({where:{id:n.id},data:{status:"FAILED"}});for(const e of n.jobs)e.jobId&&S.Job.remove(e.jobId,t=>{as(t?`stopTestSession - Failed to remove job ${e.jobId}: ${t}`:`stopTestSession - removed job ${e.jobId}`)}),"PENDING"===e.status?(as(`cancelTestSession - status of job (${e.jobId}) is PENDING, setting to READY`),await s.db.mutation.updateTestSessionJob({data:{status:"READY",finished:new Date(Date.now()).toISOString(),progressPercent:100,totalCount:0,failedCount:0,successCount:0,err:"Job cancelled"},where:{id:e.id}})):as(`cancelTestSession - status of job (${e.jobId}) is ${e.status}, keeping`);const a=await s.db.query.agents({where:{}},"{ id name }");for(const e of a)as(`stopTestSession - sending stop test session event ${n.id}/${n.name} to agent ${e.id}/${e.name}`),await s.queueConnector.create(`process.stop.${e.name}`,{title:`Stop Test Session Job for Test Session ${n.id}/${n.name}, Agent ${e.name}`,testSessionId:n.id,testSessionName:n.name}).removeOnComplete(!0).save(e=>{if(e)throw e});return!0}};const{URL:os}=p,is=B("botium-box-server-agents-testsession"),{updateChartCacheForTestSession:cs}=ns,{stopTestSession:ds}=rs;const us=new l(async(e,t)=>{const s=q.uniq(e.map(e=>e.testSessionId));is(`sendProgressProcessingQueue for testSessionIds: ${s}`),s.forEach(async t=>{try{await cs(null,{testSessionId:t},e[0].ctx)}catch(e){is(`updateChartCacheForTestSession failed: ${e}`)}e[0].ctx.pubsub.publish("TEST_SESSION_PROGRESS",{testSessionProgress:{id:t}})}),t()},{batchSize:1e3,batchDelay:3e3}),ls=(e,t)=>{us.push({testSessionId:t,ctx:e})};var ps={startTestSession:async(e,{testSessionId:t})=>{try{const s=await Wt.findFullTestSession(e.db,t);if(!s)throw new Error(`Test Session ${t} not configured`);const n=s.agent?"process.run."+s.agent.name:"process.run";is(`startTestSession ${s.id} queueToSend: ${n}`);const{testSessionCaps:a,testSessionSources:r,testSessionEnvs:o,testSessionTestSets:i}=await Wt.extractTestSessionLike(e,s);let c=1;const d=async(t,a)=>{for(let i=1;i<=c;i++){const d=await e.db.mutation.createTestSessionJob({data:{status:"PENDING",progressPercent:0,testSession:{connect:{id:s.id}}}},"{ id }"),u=e.queueConnector.create(n,{title:`Processing Job #${i}/${c} for Test Session ${s.name}`,testSessionId:s.id,testSessionName:s.name,testSessionJobId:d.id,botium:{Capabilities:t,Sources:r,Envs:o},testSets:a,batchNum:i,batchCount:c,bail:s.bail}).removeOnComplete(!0).save(async t=>{if(t)return is(`Saving batchJob failed: ${t}`);const n=u.id;try{await e.db.mutation.updateTestSessionJob({data:{jobId:n},where:{id:d.id}}),is(`TestSessionJob for TestSession ${s.name} registered (jobId: ${n} id: ${d.id})`)}catch(t){is(`TestSessionJob for TestSession ${s.name} registration failed (jobId: ${n}): ${t}`)}try{await e.db.mutation.createTestSessionJobLog({data:{log:"Job queued for execution",testSessionJob:{connect:{id:d.id}}}},"{ id }")}catch(t){is(`TestSessionJob for TestSession ${s.name} logging failed (jobId: ${n}): ${t}`)}})}};if(s.deviceSets&&s.deviceSets.length>0){const e=s.deviceSets.reduce((e,t)=>[...e,...t.devices.map(e=>{const n=t.provider.url&&new os(t.provider.url),r=n?{protocol:n&&n.protocol.replace(":",""),host:n&&n.hostname,port:n&&n.port,path:n&&n.pathname}:{};return"SAUCELABS"===t.provider.type?{deviceSetId:t.id,deviceName:e.name,deviceOptions:Object.assign({desiredCapabilities:Object.assign({},JSON.parse(e.capabilities),{name:s.name,username:t.provider.username,accessKey:t.provider.password})},r)}:"TESTOBJECTS"===t.provider.type?{deviceSetId:t.id,deviceName:e.name,deviceOptions:Object.assign({desiredCapabilities:Object.assign({},JSON.parse(e.capabilities),{testobject_suite_name:s.name,testobject_api_key:t.provider.password})},r)}:"EXPERITEST"===t.provider.type?{deviceSetId:t.id,deviceName:e.name,deviceOptions:Object.assign({desiredCapabilities:Object.assign({},JSON.parse(e.capabilities),{testName:s.name,accessKey:t.provider.password})},r)}:"LOCALSELENIUM"===t.provider.type?{deviceSetId:t.id,deviceName:e.name,deviceOptions:Object.assign({desiredCapabilities:Object.assign({},JSON.parse(e.capabilities),{name:s.name})},r)}:("INTEGRATED"===t.provider.type&&(is(`startTestSession ${s.id} adding capability for starting integrated PhantomJS`),a.WEBDRIVERIO_START_PHANTOMJS=!0),{deviceSetId:t.id,deviceName:e.name,deviceOptions:Object.assign({desiredCapabilities:Object.assign({},JSON.parse(e.capabilities),{name:s.name})},r)})})],[]);is(`startTestSession ${s.id} testSessionDevices: ${JSON.stringify(e,null,2)}`);let t=Promise.resolve();e.forEach(e=>{const s=t=>t&&t.forEach(t=>{t.sourceTag=Object.assign({},t.sourceTag,{deviceSetId:e.deviceSetId,deviceName:e.deviceName})}),n=q.cloneDeep(i);n.forEach(e=>{s(e.convos),s(e.utterances),s(e.repositories),s(e.folders),s(e.excels)});const r=Object.assign({},a,{WEBDRIVERIO_OPTIONS:e.deviceOptions});t=t.then(()=>d(r,n))}),await t}else await d(a,i)}catch(s){is(`startTestSession failed: ${s}`),await e.db.mutation.updateTestSession({where:{id:t},data:{status:"FAILED",jobs:{create:[{progressPercent:100,status:"FAILED",started:new Date(Date.now()).toISOString(),finished:new Date(Date.now()).toISOString(),err:`${s}`}]}}})}},testSessionLog:async(e,{testSessionJobId:t,log:s})=>{try{await e.db.mutation.createTestSessionJobLog({data:{log:s,testSessionJob:{connect:{id:t}}}},"{ id }")}catch(e){throw is(`testSessionJobCompleted failed: ${e}`),e}},testSessionProgress:async(e,{testSessionId:t,testSessionJobId:s,batchNum:n,progress:a,...r})=>{try{const{count:a}=await e.db.mutation.updateManyTestSessions({data:{status:"RUNNING"},where:{id:t,status:"PENDING"}});a>0&&is(`Test Session Job ${s}/#${n} set Test Session ${t} RUNNING.`)}catch(e){throw is(`Test Session Job ${s}/#${n} set Test Session ${t} RUNNING failed: ${e}`),e}try{const{count:r}=await e.db.mutation.updateManyTestSessionJobs({data:{status:"RUNNING",started:new Date(Date.now()).toISOString(),progressPercent:q.isNumber(a)&&a},where:{id:s,status:"PENDING"}});r>0&&is(`Test Session Job ${s}/#${n} set Test Session ${t} Job RUNNING.`)}catch(e){throw is(`Test Session Job ${s}/#${n} set Test Session ${t} Job RUNNING failed: ${e}`),e}if(q.isNumber(a))try{const{count:t}=await e.db.mutation.updateManyTestSessionJobs({data:{progressPercent:a},where:{id:s,progressPercent_lt:a}});t>0&&is(`Test Session Job ${s}/#${n} set Test Session Job progressPercent ${a}.`)}catch(e){throw is(`Test Session Job ${s}/#${n} set Test Session Job progressPercent ${a} failed: ${e}`),e}if(r.testcase){const a={testcaseName:r.testcase,testcaseSource:r.source,success:r.success,err:r.err&&(q.isString(r.err)?r.err:JSON.stringify(r.err)),testSession:{connect:{id:t}}};r.transcript&&(r.transcript.convoBegin&&r.transcript.convoEnd&&(a.duration=_(r.transcript.convoEnd).diff(r.transcript.convoBegin)),r.transcript.steps&&(a.steps={create:r.transcript.steps.map((e,t)=>({step:t,sender:e.expected&&e.expected.sender,expected:e.expected&&(q.isString(e.expected)?e.expected:JSON.stringify(e.expected)),not:!!e.not,actual:e.actual&&(q.isString(e.actual)?e.actual:JSON.stringify(e.actual)),stepDuration:e.stepBegin&&e.stepEnd&&_(e.stepEnd).diff(e.stepBegin),botDuration:e.botBegin&&e.botEnd&&_(e.botEnd).diff(e.botBegin),err:e.err&&(q.isString(e.err)?e.err:JSON.stringify(e.err))}))})),r.sourceTag&&(r.sourceTag.filename&&(a.testSetFilename=r.sourceTag.filename),r.sourceTag.testSetId&&(a.testSet={connect:{id:r.sourceTag.testSetId}}),r.sourceTag.testSetScriptId&&(a.testSetScript={connect:{id:r.sourceTag.testSetScriptId}}),r.sourceTag.testSetRepositoryId&&(a.testSetRepository={connect:{id:r.sourceTag.testSetRepositoryId}}),r.sourceTag.testSetFolderId&&(a.testSetFolder={connect:{id:r.sourceTag.testSetFolderId}}),r.sourceTag.testSetExcelId&&(a.testSetExcel={connect:{id:r.sourceTag.testSetExcelId}}),r.sourceTag.deviceSetId&&(a.deviceSet={connect:{id:r.sourceTag.deviceSetId}}),r.sourceTag.deviceName&&(a.deviceName=r.sourceTag.deviceName)),r.attachments&&(a.attachments={create:r.attachments.map(e=>({name:e.name,mimeType:e.mimeType,base64:e.base64}))});try{const o=await e.db.mutation.createTestSessionTestCaseResult({data:a},"{ id }");is(`TestResult for TestCase "${r.testcase}" in TestSession "${t}" registered (jobId: ${s}/#${n} id: ${o.id})`)}catch(e){throw is(`TestResult for TestCase "${r.testcase}" in TestSession "${t}" registration failed (jobId: ${s}/#${n}): ${e}`),e}}if(r.stopTestSession)try{await ds(null,{id:t},e),is(`Test Session "${t}" stopped (jobId: ${s}/#${n}.`)}catch(e){throw is(`Test Session "${t}" stopping failed (jobId: ${s}/#${n}: ${e}`),e}is(`testSessionProgress - Testsession "${t}", Job ${s}/#${n}, progress ${a}, ready.`),ls(e,t)},testSessionSetJobCompletedResult:async(e,{testSessionId:t,testSessionJobId:s,result:n})=>{try{is(`Test Session Job ${s}/${t} completed: ${JSON.stringify(n)}`),await e.db.mutation.updateTestSessionJob({data:{status:"READY",finished:new Date(Date.now()).toISOString(),progressPercent:100,totalCount:n&&n.totalCount,failedCount:n&&n.failedCount,successCount:n&&n.successCount},where:{id:s}},"{ id }"),await e.db.mutation.createTestSessionJobLog({data:{log:"Job completed",testSessionJob:{connect:{id:s}}}},"{ id }"),ls(e,t)}catch(e){throw is(`testSessionJobCompleted failed: ${e}`),e}},testSessionSetJobFailedErr:async(e,{testSessionId:t,testSessionJobId:s,result:n,err:a})=>{try{is(`Test Session Job ${s}/${t} failed: ${a}.`),await e.db.mutation.updateTestSessionJob({data:{status:"FAILED",finished:new Date(Date.now()).toISOString(),progressPercent:100,totalCount:n&&n.totalCount,failedCount:n&&n.failedCount,successCount:n&&n.successCount,err:a&&(q.isString(a)?a:JSON.stringify(a))},where:{id:s}},"{ id }"),await e.db.mutation.createTestSessionJobLog({data:{log:`Job failed: ${a}`,testSessionJob:{connect:{id:s}}}},"{ id }"),ls(e,t)}catch(a){throw is(`testSessionJobFailed failed: ${a}`),a}},testSessionCheckFinished:async(e,{testSessionId:t,testSessionJobId:s})=>{try{const n=await e.db.query.testSession({where:{id:t}},"{ id name status jobs { status finished failedCount } }");if(!n)return;if(n.jobs&&n.jobs.find(e=>"READY"!==e.status&&"FAILED"!==e.status))return void is(`Test Session testSessionCheckFinished ${t}/${s} waiting for other jobs to finish.`);const a=n.jobs&&!!n.jobs.find(e=>"FAILED"===e.status),r=n.jobs&&!!n.jobs.find(e=>e.failedCount>0);a||r?(is(`testSessionCheckFinished test session ${t}/${n.name} failed (job failed: ${a}, result failed: ${r})`),await e.db.mutation.updateTestSession({where:{id:t},data:{status:"FAILED"}})):(is(`testSessionCheckFinished test session ${t}/${n.name} success`),await e.db.mutation.updateTestSession({where:{id:t},data:{status:"READY"}})),ls(e,t)}catch(e){throw is(`testSessionCheckFinished ${t} failed: ${e}`),e}}};const Ss=B("botium-box-server-agents-heartbeat");const hs=B("botium-box-server-agents-registeragent");const ms=B("botium-box-server-agents"),{startPerformanceTestSession:fs,performanceTestSessionAgentStart:Ts,performanceTestSessionProgress:gs,performanceTestSessionSetJobReadyFailed:bs,performanceTestSessionSetJobReadySuccess:ys}=ts,{startTestSession:Es,testSessionSetJobCompletedResult:ws,testSessionSetJobFailedErr:Cs,testSessionLog:vs,testSessionProgress:Is,testSessionCheckFinished:Os}=ps;const Rs=B("botium-box-server-testcasecleanup"),Ns=async(e,t,s,n)=>{const a=await e.db.query.testSessionTestCaseResults({where:{createdAt_lte:t,success:n,attachments_some:{base64_not:""}}},"{ id attachments { id } }");a.length>0?(Rs(`Found ${a.length} screenshots to cleanup for ${s} (older than ${t}`),await e.db.mutation.deleteManyTestSessionTestCaseResultAttachments({where:{id_in:a.reduce((e,t)=>e.concat(t.attachments.map(e=>e.id)),[])}})):Rs(`Found no screenshots to cleanup for ${s} (older than ${t}`)},Ps=async(e,t,s,n)=>{const a=await e.db.query.testSessionTestCaseResults({where:{createdAt_lte:t,success:n,steps_some:{expected_not:""}}},"{ id steps { id } }");a.length>0?(Rs(`Found ${a.length} transcripts to cleanup for ${s} (older than ${t}`),await e.db.mutation.deleteManyTestSessionTestCaseResultTranscripts({where:{id_in:a.reduce((e,t)=>e.concat(t.steps.map(e=>e.id)),[])}})):Rs(`Found no transcripts to cleanup for ${s} (older than ${t}`)},As=async(e,t,s,n)=>{const a=await e.db.query.testSessionTestCaseResults({where:{createdAt_lte:t,success:n,testcaseSource_not:""}},"{ id }");a.length>0?(Rs(`Found ${a.length} results to cleanup for ${s} (older than ${t}`),await e.db.mutation.updateManyTestSessionTestCaseResults({data:{testcaseSource:""},where:{id_in:a.map(e=>e.id)}})):Rs(`Found no results to cleanup for ${s} (older than ${t}`)},$s=async(e,t)=>{const s=await e.db.query.systemSettingses();if(isNaN(t)&&(!s||!s[0].cleanupJobIntervalMinutes))return void Rs("cleanupJobIntervalMinutes not configured, not scheduling cleanup task.");const n=isNaN(t)?60*s[0].cleanupJobIntervalMinutes*1e3:t;let a=[];try{a=await R.promisify(S.Job.rangeByType)("box.testcasecleanup","delayed",0,10,"")}catch(e){Rs(`error checking job states: ${e}`)}if(a&&a.length)for(const e of a)try{await R.promisify(e.remove).bind(e)(),Rs(`Removed duplicate Scheduled Test Case Cleanup Job ${e.id}.`)}catch(t){return Rs(`Removing Scheduled Test Case Cleanup Job ${e.id} failed: ${t}`),void Rs("Skipping cleanup job removal.")}return new Promise(t=>{const s=e.queueConnector.create("box.testcasecleanup",{title:"Scheduled Test Case Cleanup Job"}).removeOnComplete(!0).delay(n).save(e=>{if(e)Rs(`Scheduling Test Case Cleanup Job failed: ${e}`);else{const e=s.id;Rs(`Scheduled Test Case Cleanup Job ${e}, next run delay: ${n}`)}return t()})})};var Ds=async e=>{e.queueConnector.process("box.testcasecleanup",async(t,s)=>{try{await(async e=>{Rs("runCleanup started ...");const t=await e.db.query.systemSettingses();if(t&&!isNaN(t[0].keepTestCaseSuccessScreenshotsDays)){const s=_().subtract(t[0].keepTestCaseSuccessScreenshotsDays,"days").startOf("day").toDate();try{await Ns(e,s,"keepTestCaseSuccessScreenshotsDays",!0)}catch(e){Rs(`runCleanupScreenshots keepTestCaseSuccessScreenshotsDays failed: ${e}`)}}if(t&&!isNaN(t[0].keepTestCaseFailedScreenshotsDays)){const s=_().subtract(t[0].keepTestCaseFailedScreenshotsDays,"days").startOf("day").toDate();try{await Ns(e,s,"keepTestCaseFailedScreenshotsDays",!1)}catch(e){Rs(`runCleanupScreenshots keepTestCaseFailedScreenshotsDays failed: ${e}`)}}if(t&&!isNaN(t[0].keepTestCaseSuccessConversationDays)){const s=_().subtract(t[0].keepTestCaseSuccessConversationDays,"days").startOf("day").toDate();try{await Ps(e,s,"keepTestCaseSuccessConversationDays",!0)}catch(e){Rs(`runCleanupTranscripts keepTestCaseSuccessConversationDays failed: ${e}`)}try{await As(e,s,"keepTestCaseSuccessConversationDays",!0)}catch(e){Rs(`runCleanupDetails keepTestCaseSuccessConversationDays failed: ${e}`)}}if(t&&!isNaN(t[0].keepTestCaseFailedConversationDays)){const s=_().subtract(t[0].keepTestCaseFailedConversationDays,"days").startOf("day").toDate();try{await Ps(e,s,"keepTestCaseFailedConversationDays",!1)}catch(e){Rs(`runCleanupTranscripts keepTestCaseFailedConversationDays failed: ${e}`)}try{await As(e,s,"keepTestCaseFailedConversationDays",!1)}catch(e){Rs(`runCleanupDetails keepTestCaseFailedConversationDays failed: ${e}`)}}})(e),Rs("Test Case Cleanup ready."),s(),await $s(e)}catch(t){Rs(`Test Case Cleanup failed: ${t}`),s(),await $s(e)}}),await $s(e,0)};const _s=e=>({id:e}),xs=e=>e&&e.id;var ks={jwtSettings:()=>({secret:process.env.JWT_SECRET,audience:process.env.JWT_AUDIENCE||"botiumbox",issuer:process.env.JWT_ISSUER||"botiumbox"}),userIdToToken:_s,tokenToUserId:xs,generateToken:e=>h.sign(_s(e.id),process.env.JWT_SECRET,{expiresIn:86400*(process.env.JWT_EXPIRY_DAYS||30),audience:process.env.JWT_AUDIENCE||"botiumbox",issuer:process.env.JWT_ISSUER||"botiumbox",subject:e.id.toString()}),validateToken:async(e,t)=>{const s=h.verify(e,process.env.JWT_SECRET,{audience:process.env.JWT_AUDIENCE||"botiumbox",issuer:process.env.JWT_ISSUER||"botiumbox"});return await t.query.user({where:{id:xs(s)}},"{ id name email roles { id name permissions } clients { id name } }")}};const{generateToken:js}=ks;var Ms={me:async(e,t,s,n)=>s.request&&s.request.user,async autologin(e,t,s,n){if(s.request&&s.request.user)return{user:s.request.user,token:js(s.request.user)}}},Bs={agents:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"name_ASC",r.db.query.agents({where:t,orderBy:s,skip:n,first:a},o)),agent:(e,{id:t},s,n)=>s.db.query.agent({where:{id:t}},n)};const qs=B("botium-box-server-resolvers-chatbots");var Ls={chatbots:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"name_ASC",r.db.query.chatbots({where:t,orderBy:s,skip:n,first:a},o)),chatbot:(e,{id:t},s,n)=>s.db.query.chatbot({where:{id:t}},n),availablewatsonworkspaces:(e,{url:t,version:s,apikey:n,username:a,password:r})=>new Promise((e,o)=>{const i={url:t,version:s};n?Object.assign(i,{iam_apikey:n}):Object.assign(i,{username:a,password:r}),qs(`listWorkspaces for watson assistant: ${JSON.stringify(i)}`),new m(i).listWorkspaces((t,s)=>{if(t)o(t);else{const t=s.workspaces.map(e=>({name:e.name,description:e.description,value:e.workspace_id}));e(t)}})})};const Fs=(e,t)=>{if(!e)return!1;if(!e.roles)return!1;if("admin"!==e.name&&process&&process.env&&process.env.BOTIUMBOX_DISABLE_PERMISSIONS&&process.env.BOTIUMBOX_DISABLE_PERMISSIONS.indexOf(t)>=0)return!1;for(const s of e.roles)if(s.permissions)for(const e of s.permissions)if(e.endsWith("*")){if(t.startsWith(e.substr(0,e.length-1)))return!0}else if(e.startsWith("*")){if(t.endsWith(e.substr(1)))return!0}else if(e===t)return!0;return!1};var Js={permissionTypes:{AGENTS_SELECT:"AGENTS_SELECT",AGENTS_CREATE:"AGENTS_CREATE",AGENTS_UPDATE:"AGENTS_UPDATE",AGENTS_DELETE:"AGENTS_DELETE",CHATBOTS_SELECT:"CHATBOTS_SELECT",CHATBOTS_CREATE:"CHATBOTS_CREATE",CHATBOTS_UPDATE:"CHATBOTS_UPDATE",CHATBOTS_DELETE:"CHATBOTS_DELETE",CHATBOTS_LIVECHAT:"CHATBOTS_LIVECHAT",DEVICESETS_SELECT:"DEVICESETS_SELECT",DEVICESETS_CREATE:"DEVICESETS_CREATE",DEVICESETS_UPDATE:"DEVICESETS_UPDATE",DEVICESETS_DELETE:"DEVICESETS_DELETE",TESTPROJECTS_SELECT:"TESTPROJECTS_SELECT",TESTPROJECTS_CREATE:"TESTPROJECTS_CREATE",TESTPROJECTS_UPDATE:"TESTPROJECTS_UPDATE",TESTPROJECTS_DELETE:"TESTPROJECTS_DELETE",TESTSETS_SELECT:"TESTSETS_SELECT",TESTSETS_CREATE:"TESTSETS_CREATE",TESTSETS_UPDATE:"TESTSETS_UPDATE",TESTSETS_DELETE:"TESTSETS_DELETE",TESTSESSIONS_SELECT:"TESTSESSIONS_SELECT",TESTSESSIONS_CREATE:"TESTSESSIONS_CREATE",TESTSESSIONS_DELETE:"TESTSESSIONS_DELETE",TESTSESSIONS_REPORTS:"TESTSESSIONS_REPORTS",APIKEYS_SELECT:"APIKEYS_SELECT",APIKEYS_MANAGE:"APIKEYS_MANAGE",DEVICEPROVIDERS_SELECT:"DEVICEPROVIDERS_SELECT",DEVICEPROVIDERS_MANAGE:"DEVICEPROVIDERS_MANAGE",REGISTEREDCOMPONENTS_SELECT:"REGISTEREDCOMPONENTS_SELECT",REGISTEREDCOMPONENTS_MANAGE:"REGISTEREDCOMPONENTS_MANAGE",USERS_MANAGE:"USERS_MANAGE",SYSTEMSETTINGS_MANAGE:"SYSTEMSETTINGS_MANAGE"},hasPermission:Fs,hasAnyPermission:(e,t)=>{for(const s of t)if(Fs(e,s))return!0;return!1},hasAllPermissions:(e,t)=>{for(const s of t)if(!Fs(e,s))return!1;return!0}};var Us={isLoggedIn:e=>{const t=(e=>q.get(e,"request.user"))(e),s=(e=>q.get(e,"request.apiKey"))(e),n=(e=>q.get(e,"connection.context.user"))(e);if(!t&&!s&&!n)throw new Error("Not logged in");return t||s||n},getClientIdFilter:e=>{return null},withClientConnect:(e,t,s)=>{if(s&&!e.client&&(e.client={connect:{id:s}}),e.client&&e.client.connect&&e.client.connect.id){if(!t)throw new Error("Unauthorized, missing client access");if(!t.find(t=>t.id===e.client.connect.id))throw new Error("Unauthorized, missing client access")}return e},withClientFilter:(e,t,s)=>{return{AND:[e||{}]}},assertClient:(e,t)=>{if(e&&(!t||!t.find(t=>t.id===e)))throw new Error("Unauthorized, missing client access")}};const Gs=B("botium-box-server-livechat"),{hasPermission:Vs}=Js,{isLoggedIn:Hs,getClientIdFilter:Ys,withClientConnect:zs}=Us,{startBot:Xs,sendToBot:Ws,stopBot:Ks,getConversation:Qs,getConversationScript:Zs}=zt,{composeBotiumCapabilities:en,combineBotiumCapabilities:tn,getServerDefaultCapabilities:sn}=Wt,nn=async(e,t,s)=>{const n=await t.query.chatbot({where:{id:e}},"{ id name capabilities { name type stringValue intValue booleanValue jsonValue } }");return tn(en(n.capabilities),sn({queueSettings:s}))};var an={liveChatConvoStepAdded:{subscribe:(e,{conversationId:t},{pubsub:s})=>s.asyncIterator(t)}},rn={async liveChatConvoSteps(e,{conversationId:t},s){try{return Qs({conversationId:t},s)}catch(e){throw Gs(e),new Error(`Conversation ${t} not available.`)}}},on={async liveChatStartBot(e,{chatbotId:t},{db:s,pubsub:n,queueSettings:a}){const r=await nn(t,s,a);return await Xs({caps:r},{pubsub:n,queueSettings:a})},liveChatSendToBot:async(e,{conversationId:t,convoStep:s},{queueSettings:n})=>(await Ws({conversationId:t,convoStep:JSON.parse(s)},{queueSettings:n}),!0),liveChatStopBot:async(e,{conversationId:t},{queueSettings:s})=>(await Ks({conversationId:t},{queueSettings:s}),!0),async liveChatSaveConvoSteps(e,{chatbotId:t,conversationId:s,testSetId:n,newTestSetName:a,testCaseName:r},o){const i=Hs(o),c=await nn(t,o.db,o.queueSettings);let d=null;if(a){if(!Vs(i,"TESTSETS_CREATE"))throw new Error("Missing permission TESTSETS_CREATE");d=await o.db.mutation.createTestSet({data:zs({name:a},i.clients,Ys(o))},"{ id name }")}else d=await o.db.query.testSet({where:{id:n}},"{ id name }");Gs(`liveChatSaveConvoSteps(${s}) saving test case for test set ${d.id}/${d.name}`);const u=await Zs({caps:c,conversationId:s,testCaseName:r},o);let l=await o.db.mutation.createTestSetScript({data:{name:r,script:u,scriptType:"SCRIPTING_TYPE_CONVO",testSet:{connect:{id:d.id}}}},"{ id name }");return Gs(`liveChatSaveConvoSteps(${s}) saved test case for test set ${d.id}/${d.name} - ${l.id}/${l.name}`),l.id}},cn={testsessions:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"createdAt_DESC",n=isNaN(n)?0:n,a=isNaN(a)?100:a,r.db.query.testSessions({where:t,orderBy:s,skip:n,first:a},o)),testsession:(e,{id:t},s,n)=>s.db.query.testSession({where:{id:t}},n),testsessiontestcaseresult:(e,{id:t},s,n)=>s.db.query.testSessionTestCaseResult({where:{id:t}},n),testsessionjoblogs:(e,{jobId:t,orderBy:s,skip:n,first:a},r,o)=>r.db.query.testSessionJobLogs({where:{testSessionJob:{id:t}},orderBy:s,skip:n,first:a},o)},dn={testsets:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"name_ASC",r.db.query.testSets({where:t,orderBy:s,skip:n,first:a},o).then(e=>(e&&e.forEach(e=>{e.repositories&&e.repositories.forEach(e=>{delete e.gitpassword})}),e))),testset:(e,{id:t},s,n)=>s.db.query.testSet({where:{id:t}},n).then(e=>(e.repositories&&e.repositories.forEach(e=>{delete e.gitpassword}),e)),testsetscripts:(e,{testSetId:t,skip:s,first:n},a,r)=>a.db.query.testSetScripts({where:{testSet:{id:t}},skip:s,first:n},r),testsetscript:(e,{id:t},s,n)=>s.db.query.testSetScript({where:{id:t}},n),validatetestsetscript(e,{script:t,scriptType:s}){const n=new f({AddConvos:()=>{},AddPartialConvos:()=>{},AddUtterances:()=>{},AddScriptingMemories:()=>{},IsAsserterValid:()=>!0,IsLogicHookValid:()=>!0,IsUserInputValid:()=>!0,GetPartialConvos:()=>[],scriptingEvents:{}},{SCRIPTING_TXT_EOL:"\n"}).Compile(t,s);return n&&n.length>0?"SCRIPTING_TYPE_UTTERANCES"===s?Promise.resolve({name:n[0].name,description:"Utterances",script:t,scriptType:s}):"SCRIPTING_TYPE_SCRIPTING_MEMORY"===s?Promise.resolve({name:"Scripting Memory",description:`Test Cases: ${n.map(e=>e.header.name).join("/")}`,script:t,scriptType:s}):Promise.resolve({name:n[0].header.name,description:n[0].header.description,script:t,scriptType:s}):Promise.reject(new Error("no script provided"))},testsetrepositories:(e,{testSetId:t,skip:s,first:n},a,r)=>a.db.query.testSetRepositories({where:{testSet:{id:t}},skip:s,first:n},r).then(e=>(e&&e.forEach(e=>{delete e.gitpassword}),e)),testsetrepository:(e,{id:t},s,n)=>s.db.query.testSetRepository({where:{id:t}},n).then(e=>(e&&delete e.password,e)),testsetfolders:(e,{testSetId:t,skip:s,first:n},a,r)=>a.db.query.testSetFolders({where:{testSet:{id:t}},skip:s,first:n},r),testsetfolder:(e,{id:t},s,n)=>s.db.query.testSetFolder({where:{id:t}},n),testsetexcels:(e,{testSetId:t,skip:s,first:n},a,r)=>a.db.query.testSetExcels({where:{testSet:{id:t}},skip:s,first:n},r),testsetexcel:(e,{id:t},s,n)=>s.db.query.testSetExcel({where:{id:t}},n),clonetestsetoptions:(e,t,s,n)=>Ct.possibleOptions};const un=new X(3600);var ln={devicesets:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"name_ASC",r.db.query.deviceSets({where:t,orderBy:s,skip:n,first:a},o)),deviceset:(e,{id:t},s,n)=>s.db.query.deviceSet({where:{id:t}},n),async availabledevices(e,{provider:t},s){const n=await s.db.query.deviceProvider({where:{id:t}});if(!n)return[];let a=[];"SAUCELABS"===n.type?a=await un.get("SAUCELABS",()=>D({url:"https://saucelabs.com/rest/v1/info/platforms/all",json:!0}).then(e=>{return e.filter(e=>!e.device).map(e=>({name:`${e.long_name} ${e.short_version}, ${e.os}`,value:JSON.stringify({type:"DESKTOP",capabilities:{browserName:e.api_name,platform:e.os,version:e.short_version}})})).concat(e.filter(e=>e.device).map(e=>({name:`${e.long_name}, ${e.short_version}`,value:JSON.stringify({type:"MOBILEBROWSER",capabilities:{browserName:["iphone","ipad"].indexOf(e.api_name)>=0?"Safari":"Chrome",deviceName:e.device,platformName:["iphone","ipad"].indexOf(e.api_name)>=0?"iOS":"Android",platformVersion:e.short_version}})})))})):"TESTOBJECTS"===n.type?n.username&&n.password&&(a=await un.get("TESTOBJECTS_"+n.url,()=>D({url:"https://app.testobject.com/api/rest/v2/devices",json:!0}).auth(n.username,n.password).then(e=>{return e[n.url.includes("eu1")?"EU":"US"].map(e=>({name:`${e.name}, ${e.os}, ${e.osVersion}`,value:JSON.stringify({type:"MOBILEAPP",capabilities:{deviceName:e.name,platformName:e.os,platformVersion:e.osVersion}})}))}))):"EXPERITEST"===n.type&&(a=await un.get("EXPERITEST",()=>D({url:"https://cloud.seetest.io/api/v1/devices",headers:{Authorization:`Bearer ${n.password}`},json:!0}).then(e=>{return e.data&&e.data.filter(e=>e.deviceName).map(e=>({name:`${e.deviceName}, ${e.deviceOs} ${e.osVersion}`,value:JSON.stringify({type:"MOBILEBROWSER",capabilities:{browserName:"iOS"===e.deviceOs?"Safari":"Chrome",platformName:e.deviceOs,platformVersion:e.osVersion,deviceManufacturer:e.manufacturer,deviceModel:e.model,deviceCategory:e.deviceCategory}})}))})));const r=(a||[]).concat((e=>{const t=g.join("resources",`${e.type}.json`);if(T.existsSync(t)){const e=JSON.parse(T.readFileSync(t,"utf8"));if(q.isArray(e)){let t=e.filter(e=>e.name&&e.value).map(e=>({name:e.name,value:JSON.stringify(e.value)}));return q.uniqBy(q.orderBy(t,"name","asc"),"name")}}return[]})(n)||[]);return q.uniqBy(q.orderBy(r,"name","asc"),"name")}},pn={testprojects:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"name_ASC",r.db.query.testProjects({where:t,orderBy:s,skip:n,first:a},o)),testproject:(e,{id:t},s,n)=>s.db.query.testProject({where:{id:t}},n)},Sn={users:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"name_ASC",r.db.query.users({where:t,orderBy:s,skip:n,first:a},o)),user:(e,{id:t},s,n)=>s.db.query.user({where:{id:t}},n),userroles:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"name_ASC",r.db.query.userRoles({where:t,orderBy:s,skip:n,first:a},o)),clients:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"name_ASC",r.db.query.clients({where:t,orderBy:s,skip:n,first:a},o)),apikeys:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"name_ASC",r.db.query.apiKeys({where:t,orderBy:s,skip:n,first:a},o)),apikey:(e,{id:t},s,n)=>s.db.query.apiKey({where:{id:t}},n),deviceproviders:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"name_ASC",r.db.query.deviceProviders({where:t,orderBy:s,skip:n,first:a},o).then(e=>(e&&e.forEach(e=>{delete e.password}),e))),deviceprovider:(e,{id:t},s,n)=>s.db.query.deviceProvider({where:{id:t}},n).then(e=>(e&&delete e.password,e)),registeredcomponents:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"name_ASC",r.db.query.registeredComponents({where:t,orderBy:s,skip:n,first:a},o)),registeredcomponent:(e,{id:t},s,n)=>s.db.query.registeredComponent({where:{id:t}},n),systemsettings:(e,t,s,n)=>s.db.query.systemSettingses({skip:0,first:1},n).then(e=>e&&e.length&&e[0]),availableconnectors(e,t,s,n){const a=[{name:"echo",description:"Botium Sample Chatbot (Echo)"},{name:"watson",description:"IBM Watson Assistant API"},{name:"directline3",description:"Microsoft Bot Framework (Directline 3)"},{name:"dialogflow",description:"Google Dialogflow"},{name:"koreai-webhook",description:"Kore.ai"},{name:"fbpagereceiver",description:"Facebook Messenger Bots"},{name:"botkit",description:"Botkit Anywhere"},{name:"botpress",description:"Botpress.io"},{name:"simplerest",description:"Generic HTTP/JSON Interface"},{name:"lex",description:"Amazon Lex"},{name:"alexa-avs",description:"Alexa Voice Service"},{name:"alexa-smapi",description:"Alexa Skill Management API"},{name:"luis",description:"Microsoft LUIS"},{name:"google-assistant",description:"Google Assistant"},{name:"wechat",description:"Wechat Webhook"},{name:"webdriverio",description:"WebdriverIO (Selenium or Appium)"}],r=[{name:"docker",description:"Dockerize Facebook/Slack/Botkit Chatbot"},{name:"fbdirect",description:"Connect Live Facebook Chatbot"},{name:"webspeech",description:"Webspeech (Talk/Listen)"}];if(process.env.BOTIUMBOX_DISABLE_CONNECTORS){process.env.BOTIUMBOX_DISABLE_CONNECTORS.split(",").forEach(e=>a.findIndex(t=>t.name===e)>=0&&a.splice(a.findIndex(t=>t.name===e),1))}if(process.env.BOTIUMBOX_ENABLE_CONNECTORS){process.env.BOTIUMBOX_ENABLE_CONNECTORS.split(",").forEach(e=>{a.findIndex(t=>t.name===e)>=0||(r.findIndex(t=>t.name===e)>=0?a.push(r.find(t=>t.name===e)):a.push({name:e,value:e,description:e}))})}return a.forEach(e=>{e.value=e.name}),q.sortBy(a,"description")}};const hn=B("botium-box-server-charts-query"),{updateChartCacheForTestSession:mn}=ns,{isLoggedIn:fn,getClientIdFilter:Tn,withClientFilter:gn}=Us,bn=e=>"TODAY"===e?_().utc().startOf("day"):"LASTWEEK"===e?_().utc().subtract(6,"days").startOf("day"):"LAST2WEEKS"===e?_().utc().subtract(13,"days").startOf("day"):"LASTMONTH"===e?_().utc().subtract(30,"days").startOf("day"):"LAST2MONTHS"===e?_().utc().subtract(60,"days").startOf("day"):void 0,yn=e=>_().utc().endOf("day"),En=(e,t)=>{let s=Promise.resolve();return t&&t.forEach(t=>{s=s.then(()=>{if(!t.chartData)return mn(null,{testSessionId:t.id},e).then(e=>{t.chartData=e});t.chartData=JSON.parse(t.chartData)})}),s};var wn={chartFailedCountByTestSetByDay(e,{testProjectId:t,timeFrame:s},n,a){const r=fn(n),o=bn(s||"LAST2WEEKS"),i=yn();hn(`called chartFailedCountByTestSetByDay ${o} - ${i}`);const c=`chartFailedCountByTestSetByDay_${JSON.stringify({fromDate:o,testProjectId:t,clientId:Tn(n)})}`;return n.chartsCache.get(c,()=>{const e=gn({status_in:["READY","FAILED"],createdAt_gte:_(o).toDate(),createdAt_lte:_(i).toDate(),jobs_every:{status:"READY"}},r.clients,Tn(n));return t&&(e.testProject={id:t}),n.db.query.testSessions({where:e},"{ id createdAt testSets { id name } chartData }").then(e=>En(n,e).then(()=>e)).then(e=>{if(!e)return;const t=e.filter(e=>e.chartData).reduce((e,t)=>e.concat(t.testSets.map(e=>({testSet:e,createdAt:t.createdAt,chartData:t.chartData.countByTestSetId[e.id]}))),[]).filter(e=>e.chartData),s=q.groupBy(t,e=>e.testSet.id),n={};Object.keys(s).forEach(e=>{n[e]=s[e][0].testSet.name,s[e]=q.groupBy(s[e],e=>_.utc(e.createdAt).startOf("day")),Object.keys(s[e]).forEach(t=>{const n=s[e][t];s[e][t]=Math.ceil(n.reduce((e,t)=>e+t.chartData.failedCount,0)/n.length)})});const a=[];for(const e=_(o);e.isBefore(i);e.add(1,"days"))a.push(_(e));const r=Object.keys(s).map(e=>({id:e,name:n[e],data:a.map(t=>s[e][t])}));return q.sortBy(r,"name")})})},chartFailedCountByChatbotByDay(e,{timeFrame:t},s,n){const a=fn(s),r=bn(t||"LAST2WEEKS"),o=yn();hn(`called chartFailedCountByChatbotByDay ${r} - ${o}`);const i=`chartFailedCountByChatbotByDay_${JSON.stringify({fromDate:r,clientId:Tn(s)})}`;return s.chartsCache.get(i,()=>s.db.query.testSessions(gn({where:{status_in:["READY","FAILED"],createdAt_gte:_(r).toDate(),createdAt_lte:_(o).toDate(),jobs_every:{status:"READY"}}},a.clients,Tn(s)),"{ id createdAt chatbot { id name } chartData }").then(e=>En(s,e).then(()=>e)).then(e=>{if(!e)return;const t=q.groupBy(e,e=>e.chatbot.id),s={};Object.keys(t).forEach(e=>{s[e]=t[e][0].chatbot.name,t[e]=q.groupBy(t[e],e=>_.utc(e.createdAt).startOf("day")),Object.keys(t[e]).forEach(s=>{const n=t[e][s];t[e][s]=Math.ceil(n.reduce((e,t)=>e+t.chartData.failedCount,0)/n.length)})});const n=[];for(const e=_(r);e.isBefore(o);e.add(1,"days"))n.push(_(e));const a=Object.keys(t).map(e=>({id:e,name:s[e],data:n.map(s=>t[e][s])}));return q.sortBy(a,"name")}).then(e=>e.filter(e=>e.data&&e.data.filter(e=>!isNaN(e)).length>0)))},chartTestSetResultCount(e,{testProjectId:t},s,n){const a=fn(s),r=`chartTestSetResultCount_${JSON.stringify({testProjectId:t,clientId:Tn(s)})}`;return s.chartsCache.get(r,()=>s.db.query.testSets({orderBy:"name_ASC"},"{ id name }").then(e=>Promise.all(e.map(e=>{const n=gn({status_in:["READY","FAILED"],testSets_some:{id:e.id},jobs_every:{status:"READY"}},a.clients,Tn(s));return t&&(n.testProject={id:t}),s.db.query.testSessions({where:n,orderBy:"createdAt_DESC",skip:0,first:2},"{ id createdAt chartData }").then(e=>En(s,e).then(()=>e)).then(t=>{const s={id:e.id,name:e.name,testCaseLastTotalCount:0,testCaseLastSuccessCount:0,testCaseLastSuccessRate:0,testCasePreviousTotalCount:0,testCasePreviousSuccessCount:0,testCasePreviousSuccessRate:0,testCaseTrend:"UNKNOWN"};if(t&&t.length>0){const n=t[0].chartData.countByTestSetId[e.id];s.lastRun=t[0].createdAt,s.lastTestSessionId=t[0].id,s.testCaseLastTotalCount=n?n.totalCount:0,s.testCaseLastSuccessCount=n?n.successCount:0,s.testCaseLastSuccessRate=s.testCaseLastTotalCount===s.testCaseLastSuccessCount?100:s.testCaseLastSuccessCount/s.testCaseLastTotalCount*100}if(t&&t.length>1){const n=t[1].chartData.countByTestSetId[e.id];s.previousRun=t[1].createdAt,s.previousTestSessionId=t[1].id,s.testCasePreviousTotalCount=n?n.totalCount:0,s.testCasePreviousSuccessCount=n?n.successCount:0,s.testCasePreviousSuccessRate=s.testCasePreviousTotalCount===s.testCasePreviousSuccessCount?100:s.testCasePreviousSuccessCount/s.testCasePreviousTotalCount*100,s.testCaseLastSuccessRate>s.testCasePreviousSuccessRate?s.testCaseTrend="GOOD":s.testCaseLastSuccessRate<s.testCasePreviousSuccessRate?s.testCaseTrend="BAD":s.testCaseTrend="CONSTANT"}return s})}))).then(e=>{const t=e.filter(e=>e.testCaseLastTotalCount>0);return q.orderBy(t,"lastRun","desc")}))},chartTestProjectTrainingStatusByTestSet(e,{testProjectId:t},s,n){const a=fn(s),r=`chartTestProjectTrainingStatusByTestSet_${JSON.stringify({testProjectId:t,clientId:Tn(s)})}`;return s.chartsCache.get(r,async()=>{const e=gn({status_in:["READY","FAILED"],testProject:{id:t},jobs_every:{status:"READY"}},a.clients,Tn(s)),n=await s.db.query.testSessions({where:e,orderBy:"createdAt_DESC",skip:0,first:1},"{ id createdAt testSets { id name } chartData }");return n&&0!==n.length?(await En(s,n),n[0].testSets.forEach(e=>{const t=n[0].chartData.countByTestSetId[e.id];e.totalCount=t?t.totalCount:0,e.successCount=t?t.successCount:0,e.failedCount=t?t.failedCount:0}),q.sortBy(n[0].testSets,"name")):[]})},chartTestProjectTrainingStatusByDeviceSet(e,{testProjectId:t},s,n){const a=fn(s),r=`chartTestProjectTrainingStatusByDeviceSet_${JSON.stringify({testProjectId:t,clientId:Tn(s)})}`;return s.chartsCache.get(r,async()=>{const e=gn({status_in:["READY","FAILED"],testProject:{id:t},jobs_every:{status:"READY"}},a.clients,Tn(s)),n=await s.db.query.testSessions({where:e,orderBy:"createdAt_DESC",skip:0,first:1},"{ id createdAt deviceSets { id name } chartData }");if(!n||0===n.length)return[];await En(s,n);const r=n[0].deviceSets||[];r.forEach(e=>{const t=n[0].chartData.countByDeviceSetId[e.id];e.totalCount=t?t.totalCount:0,e.successCount=t?t.successCount:0,e.failedCount=t?t.failedCount:0});const o=n[0].chartData.countByDeviceSetId.NULL;return o&&r.push({id:"",name:"No Device Set",totalCount:o.totalCount,successCount:o.successCount,failedCount:o.failedCount}),q.sortBy(r,"name")})}};const Cn=e=>{const t=new Set(e?e.map(e=>e.status):[]);let s=null;if(t.has("RUNNING")?s="RUNNING":t.has("PENDING")?s="PENDING":t.has("READY")&&(s="READY"),t.has("FAILED")&&(null==s?s="FAILED":s+="/FAILED"),null===s){if(e&&e.length)throw new Error("illegal state, status cant be null");s="NO JOBS"}return s};var vn={performancetestsessions:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"createdAt_DESC",n=isNaN(n)?0:n,a=isNaN(a)?100:a,r.db.query.performanceTestSessions({where:t,orderBy:s,skip:n,first:a},o)),performancetestsessionssimplifiedwithstatus:(e,{where:t,orderBy:s,skip:n,first:a},r)=>(s=s||"createdAt_DESC",n=isNaN(n)?0:n,a=isNaN(a)?100:a,r.db.query.performanceTestSessions({where:t,orderBy:s,skip:n,first:a},"{ id createdAt updatedAt name description tags parallelConvoCount parallelJobCount tickRepeatInitial tickRepeatPerTick tickMaxTime tickTime dataDensity jobs {status} }").then(e=>e.map(e=>(e.status=Cn(e.jobs),delete e.jobs,e))).then(e=>e)),performancetestsession:(e,{id:t},s,n)=>s.db.query.performanceTestSession({where:{id:t}},n),performancetestsessionstatus:(e,{id:t},s)=>s.db.query.performanceTestSession({where:{id:t}},"{ id jobs {status} }").then(e=>({id:e.id,status:Cn(e.jobs)})),performancetestsessionjobs:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"createdAt_DESC",n=isNaN(n)?0:n,a=isNaN(a)?100:a,r.db.query.performanceTestSessionJobs({where:t,orderBy:s,skip:n,first:a},o)),performancetestsessionaggregatedresults:(e,{where:t,orderBy:s,skip:n,first:a},r,o)=>(s=s||"createdAt_DESC",n=isNaN(n)?0:n,a=isNaN(a)?100:a,r.db.query.performanceTestSessionAggregatedResults({where:t,orderBy:s,skip:n,first:a},o))};const In=y.Strategy,{generateToken:On}=(B("botium-box-server-passport"),ks);var Rn={loadStrategy:async e=>{const t=e();b.use(new In(async(e,s,n)=>{try{const a={OR:[{name:e},{email:e}]},r=await t.db.query.users({where:a},"{ id name password email roles { id name permissions } clients { id name } }");if(!r||0===r.length)return n(null,!1,{message:`No such user found: ${e}`});const o=r[0];return o.password&&await C.compare(s,o.password)?(delete o.password,n(null,o)):n(null,!1,{message:"Invalid password."})}catch(e){return n(e)}}))},authenticate:(e,t)=>new Promise((s,n)=>{b.authenticate(t||"local",(e,t,a)=>e?n(e):t?void s({token:On(t),user:t}):n(new Error(a.message)))(e.request,e.response,()=>{})})};const{authenticate:Nn}=Rn;var Pn={login:async(e,{name:t,email:s,password:n},a,r)=>(a.request.body={username:t||s,password:n},"admin"===t?Nn(a,"local"):Nn(a))};const An=B("botium-box-server-agents-mutation"),$n=(e,t)=>{e.forEach(e=>{const s=`agent.reconfigure.${e}`;t.queueConnector.create(s,{title:`Reconfigure Agent ${e}`}).removeOnComplete(!0).save(t=>{if(t)return An(`Saving reconfigure job failed: ${t}`);An(`Sent reconfigure job to ${e}`)})})};var Dn={async createAgent(e,{agent:t},s,n){},async updateAgent(e,{id:t,agent:s},n,a){if(!await n.db.exists.Agent({id:t}))throw new Error(`Agent not found ${t}`);const r=await n.db.mutation.updateAgent({where:{id:t},data:s},a),o=(await n.db.query.agent({where:{id:t}})).name;if("Default Agent"===o){const e=await n.db.query.agents({where:{name_not:"Default Agent"}});$n(e.map(e=>e.name),n)}else $n([o],n);return r},async deleteAgent(e,{id:t},s){}},_n={createChatbot:async(e,{chatbot:t},s,n)=>s.db.mutation.createChatbot({data:t},n),async updateChatbot(e,{id:t,chatbot:s},n,a){if(!await n.db.exists.Chatbot({id:t}))throw new Error(`Chatbot not found ${t}`);return n.db.mutation.updateChatbot({where:{id:t},data:s},a)},deleteChatbot:async(e,{id:t},s)=>(await s.db.mutation.deleteChatbot({where:{id:t}},"{id}"),!0)};const xn=rs.createTestSession,kn=B("botium-box-server-mutation-testproject"),jn=(e,t,s,n)=>{const a={testSession:Object.assign({},{status:"PENDING",chatbot:{connect:{id:t.chatbot.id}},testSets:{connect:t.testSets&&t.testSets.map(e=>({id:e.id}))},deviceSets:{connect:t.deviceSets&&t.deviceSets.map(e=>({id:e.id}))},registeredComponents:{connect:t.registeredComponents&&t.registeredComponents.map(e=>({id:e.id}))},testProject:{connect:{id:t.id}},batchCount:t.batchCount,bail:t.bail},s)};return t.client&&(a.testSession.client={connect:{id:t.client.id}}),t.agent&&(a.testSession.agent={connect:{id:t.agent.id}}),xn(e,a,n,"{ id }")};var Mn={createTestProject:async(e,{testProject:t},s,n)=>s.db.mutation.createTestProject({data:{...t,code:M(t.name)}},n),startTestProject:async(e,{id:t,code:s},n)=>n.db.query.testProject({where:{id:t,code:s}},"{ id name client { id } chatbot { id } testSets { id } deviceSets { id } agent { id } registeredComponents { id } batchCount bail }").then(a=>{if(!a)throw new Error(`Test Project ${t}/${s} not found`);return jn(e,a,{name:a.name+" - Test Session",tags:{set:["BoxTriggered"]}},n)}).then(e=>e.id),quickstartTestProject:async(e,{testProject:t,startProject:s},n)=>n.db.mutation.createTestProject({data:{...t,code:M(t.name)}},"{ id name client { id } chatbot { id } testSets { id } deviceSets { id } agent { id } registeredComponents { id } batchCount bail }").then(t=>s?jn(e,t,{name:t.name+" - Initial Test Session",tags:{set:["QuickStart"]}},n).then(e=>e.id):t.id),async updateTestProject(e,{id:t,testProject:s},n,a){if(!await n.db.exists.TestProject({id:t}))throw new Error(`TestProject not found ${t}`);return n.db.mutation.updateTestProject({where:{id:t},data:{...s,code:M(s.name)}},a)},deleteTestProject:async(e,{id:t},s)=>new Promise((e,n)=>{s.db.mutation.deleteTestProject({where:{id:t}},"{id}").then(()=>e(!0)).catch(e=>(kn(`Error deleting TestProject ${t}: ${e}`),n(e)))})};const Bn=B("botium-box-server-mutation-settings");let qn=["LOCALSELENIUM"];var Ln={createUser:async(e,{user:t},s,n)=>(t.password&&(t.password=await C.hash(t.password,10)),s.db.mutation.createUser({data:t},n)),async updateUser(e,{id:t,user:s},n,a){const r=await n.db.query.user({where:{id:t}});if(!r)throw new Error(`User not found ${t}`);return s.password&&(s.password=await C.hash(s.password,10)),"admin"===r.name&&(s.name="admin",s.roles={connect:[{name:"ADMIN"}]}),n.db.mutation.updateUser({where:{id:t},data:s},a)},async deleteUser(e,{id:t},s){const n=await s.db.query.user({where:{id:t}});if(!n)return!0;if("admin"===n.name)throw new Error('Not allowed to delete user "admin"');return s.db.mutation.deleteUser({where:{id:t}},"{id}").then(()=>!0).catch(e=>{throw Bn(`Error deleting User ${t}: ${e}`),e})},createApiKey:async(e,{apiKey:t},s,n)=>(t.key=w("Aa0",20),s.db.mutation.createApiKey({data:t},n)),async updateApiKey(e,{id:t,apiKey:s},n,a){if(!await n.db.exists.ApiKey({id:t}))throw new Error(`ApiKey not found ${t}`);return delete s.key,n.db.mutation.updateApiKey({where:{id:t},data:s},a)},deleteApiKey:async(e,{id:t},s)=>s.db.mutation.deleteApiKey({where:{id:t}},"{id}").then(()=>!0).catch(e=>{throw Bn(`Error deleting ApiKey ${t}: ${e}`),e}),async createDeviceProvider(e,{deviceProvider:t},s,n){if("INTEGRATED"===t.type)throw new Error("DeviceProvider type INTEGRATED not allowed to create");if(qn.indexOf(t.type)<0)throw new Error(`DeviceProvider type ${t.type} not supported in this version`);return s.db.mutation.createDeviceProvider({data:t},n)},async updateDeviceProvider(e,{id:t,deviceProvider:s},n,a){if(!await n.db.exists.DeviceProvider({id:t}))throw new Error(`DeviceProvider not found ${t}`);if(qn.indexOf(s.type)<0)throw new Error(`DeviceProvider type ${s.type} not supported in this version`);const r=await n.db.mutation.updateDeviceProvider({where:{id:t},data:s},a);return delete r.password,r},async deleteDeviceProvider(e,{id:t},s){const n=await s.db.query.deviceProvider({where:{id:t}});if(!n)return!0;if("INTEGRATED"===n.type)throw new Error("DeviceProvider type INTEGRATED not allowed to delete");try{return await s.db.mutation.deleteDeviceProvider({where:{id:t}},"{id}"),!0}catch(e){throw Bn(`Error deleting DeviceProvider ${t}: ${e}`),e}},createRegisteredComponent:async(e,{registeredComponent:t},s,n)=>s.db.mutation.createRegisteredComponent({data:t},n),async updateRegisteredComponent(e,{id:t,registeredComponent:s},n,a){if(!await n.db.exists.RegisteredComponent({id:t}))throw new Error(`RegisteredComponent not found ${t}`);return n.db.mutation.updateRegisteredComponent({where:{id:t},data:s},a)},deleteRegisteredComponent:async(e,{id:t},s)=>s.db.mutation.deleteRegisteredComponent({where:{id:t}},"{id}").then(()=>!0).catch(e=>{throw Bn(`Error deleting RegisteredComponent ${t}: ${e}`),e}),async updateSystemSettings(e,{systemSettings:t},s,n){const a=await s.db.query.systemSettingses({skip:0,first:1});return a&&a.length>0?s.db.mutation.updateSystemSettings({where:{id:a[0].id},data:t},n):s.db.mutation.createSystemSettings({data:t},n)}};const Fn=B("botium-box-server-mutation-deviceset");var Jn={createDeviceSet:async(e,{deviceSet:t},s,n)=>s.db.mutation.createDeviceSet({data:t},n),async updateDeviceSet(e,{id:t,deviceSet:s},n,a){if(!await n.db.exists.DeviceSet({id:t}))throw new Error(`DeviceSet not found ${t}`);return n.db.mutation.updateDeviceSet({where:{id:t},data:s},a)},deleteDeviceSet:async(e,{id:t},s)=>new Promise((e,n)=>{s.db.query.deviceSet({where:{id:t}},"{ id devices { id } }").then(e=>{if(!e)throw new Error(`DeviceSet not found ${t}`);return s.db.mutation.deleteManyDeviceDescriptors({where:{id_in:e.devices.map(e=>e.id)}})}).then(()=>s.db.mutation.deleteDeviceSet({where:{id:t}},"{id}")).then(()=>e(!0)).catch(e=>(Fn(`Error deleting DeviceSet ${t}: ${e}`),n(e)))})},Un={createPerformanceTestSession:async(e,{testProjectId:t,options:s},n,a)=>n.db.query.testProject({where:{id:t}},"{ id name client { id } chatbot { id } testSets { id } deviceSets { id } agent { id } registeredComponents { id } batchCount }").then(e=>{if(!e)throw Error(`Test project not found by id ${t}`);const a=Object.assign({},s,{chatbot:{connect:{id:e.chatbot.id}},testSets:{connect:e.testSets&&e.testSets.map(e=>({id:e.id}))},registeredComponents:{connect:e.registeredComponents&&e.registeredComponents.map(e=>({id:e.id}))},testProject:{connect:{id:e.id}}});return e.client&&(a.client={connect:{id:e.client.id}}),n.db.mutation.createPerformanceTestSession({data:a},"{id name}")}).then(e=>new Promise((t,s)=>{n.queueConnector.create("box.createperformanceprocessingjobs",{title:`Job Creation Job for Test Session ${e.name}`,performanceTestSessionId:e.id}).removeOnComplete(!0).save(n=>{if(n)return s(n);t(e.id)})})),deletePerformanceTestSession:async(e,{id:t},s)=>s.db.mutation.deletePerformanceTestSession({where:{id:t}},"{id}").then(()=>!0)};var Gn={};const{withFilter:Vn}=v;var Hn={testSessionProgress:{resolve:(e,{testSessionId:t},s,n)=>s.db.query.testSession({where:{id:t}},n),subscribe:Vn((e,{testSessionId:t},{pubsub:s})=>s.asyncIterator("TEST_SESSION_PROGRESS"),(e,{testSessionId:t})=>e&&e.testSessionProgress&&e.testSessionProgress.id===t)}},Yn={Query:{...Ms,...Bs,...Ls,...rn,...cn,...dn,...ln,...pn,...Sn,...wn,...vn},Mutation:{...Pn,...Dn,..._n,...on,...rs,...Nt,...Mn,...Ln,...Jn,...Un},Subscription:{...Gn,...an,...Hn}};const{SchemaDirectiveVisitor:zn}=I,{defaultFieldResolver:Xn}=O,{hasPermission:Wn,hasAnyPermission:Kn}=Js,{isLoggedIn:Qn,getClientIdFilter:Zn,withClientConnect:ea,withClientFilter:ta,assertClient:sa}=Us,na=B("botium-box-server-directives");var aa={hasAnyPermission:class extends zn{visitFieldDefinition(e){const{resolve:t=Xn}=e,{permissions:s}=this.args;e.resolve=(async(e,n,a,r)=>{const o=Qn(a);if(Kn(o,s))return t.call(this,e,n,a,r);throw na(`User ${JSON.stringify(o)} missing any permissions ${s.join("|")}`),new Error(`Unauthorized, missing any permissions ${s.join("|")}`)})}},hasPermission:class extends zn{visitFieldDefinition(e){const{resolve:t=Xn}=e,{permission:s}=this.args;e.resolve=(async(e,n,a,r)=>{const o=Qn(a);if(Wn(o,s))return t.call(this,e,n,a,r);throw na(`User ${JSON.stringify(o)} missing permission ${s}`),new Error(`Unauthorized, missing permission ${s}`)})}},clientFilter:class extends zn{visitFieldDefinition(e){const{resolve:t=Xn}=e;e.resolve=(async(e,{where:s,...n},a,r)=>{const o=Qn(a),i=ta(s,o.clients,Zn(a));return t.call(this,e,{where:i,...n},a,r)})}},assertClient:class extends zn{visitFieldDefinition(e){const{resolve:t=Xn}=e,{query:s,argsBase:n,idParam:a,selector:r}=this.args,o=e=>e&&e.client?e.client.id:e&&Object.keys(e).length>0?o(e[Object.keys(e)[0]]):null;e.resolve=(async(e,i,c,d)=>{const u=Qn(c),l=q.isArray(s)?s:[s],p=n&&(q.isArray(n)?n:[n]),S=a&&(q.isArray(a)?a:[a]),h=r&&(q.isArray(r)?r:[r]);for(let e in l){const t=p?q.get(i,p[e]):i;if(t)for(const s of q.isArray(t)?t:[t]){const t=q.get(s,S&&S[e]||"id");if(!t)continue;const n=await c.db.query[l[e]]({where:{id:t}},h&&h[e]||"{ client { id } }"),a=o(n);try{sa(a,u.clients)}catch(s){throw na(`User ${JSON.stringify(u)} missing client access, query ${l[e]}, id ${t}, clientId ${a}`),s}}}return t.call(this,e,i,c,d)})}},clientConnector:class extends zn{visitFieldDefinition(e){const{resolve:t=Xn}=e,{dataParam:s}=this.args,n=q.isArray(s)?s:[s];e.resolve=(async(e,s,a,r)=>{const o=Qn(a);return n.forEach(e=>{const t=q.get(s,e);if(!t)return;const n=Zn(a);for(const e of q.isArray(t)?t:[t])ea(e,o.clients,n)}),t.call(this,e,s,a,r)})}},clientDisconnector:class extends zn{visitFieldDefinition(e){const{resolve:t=Xn}=e,{dataParam:s}=this.args;e.resolve=(async(e,n,a,r)=>{const o=n[s];return o&&o.client&&delete o.client,t.call(this,e,n,a,r)})}}};const{jwtSettings:ra,tokenToUserId:oa}=ks,ia=B("botium-box-middleware-jwt");let ca=null;var da=(e,t,s)=>{e.use((()=>N(Object.assign({},ra(),{credentialsRequired:!1,getToken:e=>e.headers.authorization&&"Bearer"===e.headers.authorization.split(" ")[0]?e.headers.authorization.split(" ")[1]:e.query&&e.query.token?e.query.token:e.body&&e.body.token?e.body.token:null})))()),e.use((e,t,n)=>(async(e,t,s,n)=>{if(e.user){const t=n({request:e}),a=e.user,r=await t.db.query.user({where:{id:oa(a)}},"{ id name email roles { id name permissions } clients { id name } }");return e.user={...r,token:a},s()}if(process.env.JWT_AUTOLOGIN_USERNAME){if(!ca){const t=n({request:e});ca=await t.db.query.user({where:{name:process.env.JWT_AUTOLOGIN_USERNAME}},"{ id name email roles { id name permissions } clients { id name } }"),ia(`Auto login user ${process.env.JWT_AUTOLOGIN_USERNAME}.`)}return e.user={...ca,token:null},s()}return s()})(e,0,n,s)),e.use((e,t,n)=>(async(e,t,s,n)=>{const a=e.query.APIKEY||e.body&&e.body.APIKEY||e.headers.APIKEY,r=n({request:e});if(!a)return s();Wt.lookupApiKey(r.db,a).then(t=>t?(ia(`Api Key found - ${R.inspect(t)}`),e.apiKey=t,s()):(ia(`Api Key not found - ${a}`),s())).catch(e=>(ia(`Api Key lookup error - ${a} - ${e}`),s()))})(e,0,n,s))};const{setupEndpoints:ua,verifySignature:la}=A,pa=B("botium-box-server-fbproxy");const Sa=B("botium-box-server-endpoints-testset"),{isLoggedIn:ha,assertClient:ma}=Us,{FindFullTestSet:fa}=K;const Ta=B("botium-box-server-endpoints-attachments"),{isLoggedIn:ga,assertClient:ba}=Us;const ya=B("botium-box-server-endpoints-build"),{isLoggedIn:Ea,assertClient:wa}=Us,Ca=rs.createTestSession,va=e=>{if(!e)return"";return e.split("\n").map(e=>e.trim()).join("     ")},Ia=(e,t)=>e.query[t]||e.query[t.toLowerCase()]||e.body&&e.body[t]||e.body&&e.body[t.toLowerCase()]||e.headers[`X-BOTIUM-${t}`],Oa=(e,t)=>{const s=(Ia(e,"REPORTER")||"json").toLowerCase();return"json"===s||"junit"===s||"csv"===s||"jiracsv"===s||"pdf"===s||(t.sendStatus(404).send("VALID REPORTER OPTIONS: json, junit, csv, jiracsv, pdf"),!1)},Ra=(e,t)=>{return e.map(e=>`"${e.map(e=>q.isString(e)&&e.replace(/"/g,'""')).join(`"${t||";"}"`)}"`).join("\r\n")},Na=async(e,t,s,n)=>{try{const a=(Ia(s,"REPORTER")||"json").toLowerCase();if("json"===a){const{ts:s,output:r}=await Aa(e,t,a);n.setHeader("Content-Type","application/json"),n.setHeader("Content-disposition",`attachment; filename="${M(s.name)}.json"`),n.status(200).send(r)}else if("junit"===a){const{ts:s,output:r}=await Aa(e,t,a);n.setHeader("Content-Type","text/xml"),n.setHeader("Content-disposition",`attachment; filename="${M(s.name)}.xml"`),n.status(200).send(r)}else if("csv"===a||"jiracsv"===a){const{ts:s,output:r}=await Aa(e,t,a);n.setHeader("Content-Type","text/csv"),n.setHeader("Content-disposition",`attachment; filename="${M(s.name)}.csv"`),n.status(200).send(r)}else if("pdf"===a){const{ts:s,output:r}=await Aa(e,t,a);n.setHeader("Content-Type","application/pdf"),n.setHeader("Content-disposition",`attachment; filename=${M(s.name)}.pdf`),n.status(200).send(r)}}catch(t){ya(`Test Session lookup error - ${e} - ${t}`),n.sendStatus(404)}},Pa=async(e,t,s,n,a)=>{try{const r=(a||"json").toLowerCase(),o={uri:s,method:n,headers:{}};if("get"!==n.toLowerCase()){const{output:s}=await Aa(e,t,r);"json"===r?(o.body=s,o.json=!0):"junit"===r?(o.headers["Content-Type"]="text/xml",o.body=s):"csv"===r||"jiracsv"===r?(o.headers["Content-Type"]="text/csv",o.body=s):"pdf"===r&&(o.headers["Content-Type"]="application/pdf",o.body=s)}await D(o),ya(`sendTestSessionOutput callbackUrl ${s} ready for test session ${e}`)}catch(t){ya(`sendTestSessionOutput callbackUrl ${s} failed for test session ${e} - ${t}`)}},Aa=async(e,t,s)=>{const n=await Wt.findSimpleTestSessionResults(t.db,e);if(!n)throw new Error(`Test Session ${e} not found`);if("json"===s)return delete n.results,{ts:n,output:n};if("pdf"===s){const s=await Wt.findFullTestSession(t.db,e),a=new k({bufferPages:!0,margins:{top:50,bottom:50,left:72,right:72}});a.reset=(()=>a.font("Helvetica").fontSize(12).fillColor("black")),a.bold=(()=>a.font("Helvetica-Bold")),a.fontSize(25).text(s.name,{underline:!0}).reset(),a.text(`Test Session Started: ${_(s.createdAt).format("lll")}`),a.moveDown(),"READY"===n.status&&a.fillColor("green").fontSize(25).bold().text("TEST SESSION OK").reset(),"FAILED"===n.status&&a.fillColor("red").fontSize(25).bold().text("TEST SESSION FAILED").reset(),a.text(`${n.results.length} Test Case(s)`),a.fillColor("green").text(`${n.results.filter(e=>e.success).length} Test Case(s) succeeded`).reset(),a.fillColor("red").text(`${n.results.filter(e=>!e.success).length} Test Case(s) failed`).reset(),s.testProject&&(a.moveDown(),a.font("Helvetica-Bold").text(`Test Project: ${s.testProject.name}`).reset(),s.testProject.description&&a.text(s.testProject.description),s.testProject.tags&&a.fillColor("darkgrey").text(s.testProject.tags.join(" | ")).reset()),s.chatbot&&(a.moveDown(),a.font("Helvetica-Bold").text(`Chatbot Under Test: ${s.chatbot.name}`).reset(),s.chatbot.description&&a.text(s.chatbot.description),s.chatbot.tags&&a.fillColor("darkgrey").text(s.chatbot.tags.join(" | ")).reset()),s.testSets&&s.testSets.forEach(e=>{a.moveDown(),a.font("Helvetica-Bold").text(`Test Set: ${e.name}`).reset(),e.description&&a.text(e.description),e.scripts&&a.text(`Scripts: ${e.scripts.length}`),e.repositories&&e.repositories.forEach(e=>{a.text(`Repository: ${e.name}, ${e.gitbranch}`)}),e.folders&&e.folders.forEach(e=>{a.text(`Shared Folder: ${e.name}`)}),e.excels&&e.excels.forEach(e=>{a.text(`Excel File: ${e.name}, ${e.filename}`)}),e.tags&&a.fillColor("darkgrey").text(e.tags.join(" | ")).reset()});const r=a.bufferedPageRange();for(let e=r.start;e<r.start+r.count;e++)a.switchToPage(e),a.fontSize(8),a.image("media/botium-logo.png",a.page.width-35,10,{width:25}),a.text(`${s.name}, page ${e+1} of ${r.count}`,200,a.page.height-40,{height:25});return a.end(),new Promise(e=>{a.pipe(j(t=>e({ts:n,output:t})))})}if("junit"===s){const e=q.groupBy(n.results,e=>e.testSet?e.testSet.name:""),t=q.keys(e).map(t=>{const s=e[t];return{testsuite:[{_attr:{name:t||"unnamed",tests:s.length,failures:s.filter(e=>!e.success).length,time:s.reduce((e,t)=>t.duration?e+t.duration:e,0)/1e3}}]}}),s=x({testsuites:[{_attr:{name:n.name,tests:n.results.length,failures:n.results.filter(e=>!e.success).length,time:n.results.reduce((e,t)=>t.duration?e+t.duration:e,0)/1e3}}].concat(t)},{declaration:!0});return{ts:n,output:s}}if("csv"===s){delete n.results;const e=[];e.push(["testSessionId","testSessionStatus","testSessionName","testCaseId","testCaseName","testCaseSource","testCaseSuccess","testCaseErr","testCaseDuration","testSetId","testSetName","testSetTags","testSetRepository","testSetRepositoryBranch","testSetFolder","testSetExcel","testSetFilename"]);const t=(e,t)=>{t?(e.push(t.id),e.push(t.testcaseName),e.push(va(t.testcaseSource)),e.push(t.success),e.push(va(t.err)),e.push(t.duration),t.testSet?(e.push(t.testSet.id),e.push(t.testSet.name),e.push(t.testSet.tags&&t.testSet.tags.join("|")),t.testSetRepository?(e.push(t.testSetRepository.name),e.push(t.testSetRepository.gitbranch)):e.push(null,null),t.testSetFolder?e.push(t.testSetFolder.name):e.push(null),t.testSetExcel?e.push(t.testSetExcel.name):e.push(null),e.push(t.testSetFilename)):e.push(null,null,null,null,null,null,null,null)):e.push(null,null,null,null,null,null,null,null,null,null,null,null,null,null)},s=[n.id,n.status,n.name];return n.results&&n.results.length>0?n.results.forEach(n=>{const a=s.slice(0);t(a,n),e.push(a)}):(t(s,null),e.push(s)),{ts:n,output:Ra(e)}}if("jiracsv"===s){const e=[];return e.push(["Build","Date","Summary","Description"]),"FAILED"!==n.status&&e.push([n.name,n.createdAt,`${n.name}: Botium Test Session failed`,`${n.results.filter(e=>!e.success).length} Test Cases failed of ${n.results.length}`]),{ts:n,output:Ra(e,",")}}},$a=(e,t,s)=>{const n=t.pubsub.asyncIterator("TEST_SESSION_PROGRESS");!async function(){for(;;){const{value:a}=await n.next();if(a.testSessionProgress&&a.testSessionProgress.id===e){const n=await t.db.query.testSession({where:{id:e}},"{ id status }");if(ya(`Test Project ${e} got status: ${n.status}`),"READY"===n.status)return s();if("FAILED"===n.status)return s()}}}()},Da=(e,t,s,n)=>{const a=Ia(s,"WAIT");"READY"!==e.status&&"FAILED"!==e.status&&"1"===a?$a(e.id,t,()=>Na(e.id,t,s,n)):Na(e.id,t,s,n)},_a=(e,t,s)=>{const n=Ia(s,"CALLBACKURL"),a=Ia(s,"CALLBACKMETHOD")||"POST",r=Ia(s,"REPORTER");n&&("READY"!==e.status&&"FAILED"!==e.status?$a(e.id,t,()=>Pa(e.id,t,n,a,r)):Pa(e.id,t,n,a,r))};var xa=(e,t)=>{const s=(e,s)=>{(({ctxFactory:e,testProjectCode:t,req:s,res:n})=>{if(!Oa(s,n))return;const a=e({request:s}),r=Ea(a);a.db.query.testProject({where:{code:t}},"{ id name chatbot { id } testSets { id } deviceSets { id } agent { id } batchCount client { id } }").then(e=>{if(!e)throw new Error(`Test Project ${t} not found`);const n=q.get(e,"client.id");wa(n,r.clients);const o=Ia(s,"BUILDID"),i=Ia(s,"BUILDCOMMENT"),c=Ia(s,"TAG"),d=e=>Object.keys(e).reduce((t,s)=>(t.push({name:s,type:"STRING",stringValue:e[s]}),t),[]),u=s.body&&s.body.CAPS&&d(s.body.CAPS)||[],l=s.body&&s.body.SOURCES&&d(s.body.SOURCES)||[],p=s.body&&s.body.ENVS&&d(s.body.ENVS)||[],S={name:o||e.name+" - Test Session",description:i,status:"PENDING",tags:{set:c?q.isArray(c)?c:[c]:[]},chatbot:{connect:{id:e.chatbot.id}},testSets:{connect:e.testSets&&e.testSets.map(e=>({id:e.id}))},deviceSets:{connect:e.deviceSets&&e.deviceSets.map(e=>({id:e.id}))},testProject:{connect:{id:e.id}},capabilities:{create:u},sources:{create:l},envs:{create:p},batchCount:e.batchCount};return e.agent&&(S.agent={connect:{id:e.agent.id}}),ya(`Creating Test Session ${JSON.stringify(S,null,2)}`),Ca(null,{testSession:S},a,"{ id status }")}).then(e=>{Da(e,a,s,n),_a(e,a,s)}).catch(e=>{ya(`Test Project start error - ${t} - ${e}`),n.sendStatus(404)})})({testProjectCode:e.params.code,ctxFactory:t,req:e,res:s})};e.post("/api/triggerbuild/:code",s),e.get("/api/triggerbuild/:code",s),e.get("/api/build/:nameOrId",(e,s)=>{(({ctxFactory:e,nameOrId:t,req:s,res:n})=>{if(!Oa(s,n))return;const a=e({request:s}),r=Ea(a);a.db.query.testSessions({where:{OR:[{id:t},{name:t}]},orderBy:"createdAt_DESC",first:1},"{ id name status client { id } }").then(e=>{if(!e)return n.sendStatus(404);const t=e[0],o=q.get(t,"client.id");wa(o,r.clients),Da(t,a,s,n),_a(t,a,s)}).catch(e=>{ya(`Test Session lookup error - ${t} - ${e}`),n.sendStatus(404)})})({nameOrId:e.params.nameOrId,ctxFactory:t,req:e,res:s})}),e.get("/api/log/:nameOrId",(e,s)=>{(({ctxFactory:e,nameOrId:t,req:s,res:n})=>{const a=e({request:s}),r=Ea(a);a.db.query.testSessions({where:{OR:[{id:t},{name:t}]},orderBy:"createdAt_DESC",first:1},"{ id name jobs { id logs { createdAt log } } client { id } }").then(e=>{if(!e)return n.sendStatus(404);const t=e[0],s=q.get(t,"client.id");wa(s,r.clients),n.set("Content-Type","text/plain"),t.jobs&&t.jobs.forEach(e=>{n.write(`Job Output (${e.id})\n`),e.logs&&e.logs.forEach(e=>{n.write(e.createdAt+": "+e.log+"\n")}),n.write("\n\n"),n.write("##############################################################\n"),n.write("##############################################################\n"),n.write("##############################################################\n"),n.write("\n\n")}),n.status(200).end()}).catch(e=>{ya(`Test Session lookup error - ${t} - ${e}`),n.sendStatus(404)})})({nameOrId:e.params.nameOrId,ctxFactory:t,req:e,res:s})}),e.get("/api/joblog/:id",(e,s)=>{(({ctxFactory:e,id:t,req:s,res:n})=>{const a=e({request:s}),r=Ea(a);a.db.query.testSessionJob({where:{id:t},orderBy:"createdAt_ASC"},"{ id logs { createdAt log } testSession { client { id } } }").then(e=>{if(!e)return n.sendStatus(404);const t=q.get(e,"testSession.client.id");wa(t,r.clients),n.set("Content-Type","text/plain"),e.logs&&e.logs.forEach(e=>{n.write(e.createdAt+": "+e.log+"\n")}),n.status(200).end()}).catch(e=>{ya(`Test Session Job lookup error - ${t} - ${e}`),n.sendStatus(404)})})({id:e.params.id,ctxFactory:t,req:e,res:s})}),e.get("/api/transcript/:nameOrId",(e,s)=>{(({ctxFactory:e,nameOrId:t,req:s,res:n})=>{const a=e({request:s}),r=Ea(a);a.db.query.testSessions({where:{OR:[{id:t},{name:t}]},orderBy:"createdAt_DESC",first:1},"{ id status name client { id } results { id testcaseName createdAt success err duration steps { step expected not actual stepDuration botDuration err } } }").then(e=>{if(!e)return n.sendStatus(404);const t=e[0],a=q.get(t,"client.id");wa(a,r.clients);const o=Ia(s,"REPORTER")||"json";if(delete t.results,t.results&&t.results.forEach(e=>{e.steps&&e.steps.forEach(e=>{e.actual&&q.isString(e.actual)&&(e.actual=JSON.parse(e.actual)),e.expected&&q.isString(e.expected)&&(e.expected=JSON.parse(e.expected))})}),"json"===o)n.setHeader("Content-disposition",`attachment; filename="${M(t.name)}.json"`),n.status(200).send(t);else if("csv"===o){const e=[];e.push(["testSessionId","testSessionStatus","testSessionName","testCaseId","testCaseName","testCaseCreatedAt","testCaseSuccess","testCaseErr","testCaseDuration","convoStepIndex","convoStepSender","convoStepActual","convoStepNot","convoStepExpected","convoStepDuration","convoStepBotDuration","convoStepErr"]);const s=(e,t)=>{t?(e.push(t.id),e.push(t.testcaseName),e.push(t.createdAt),e.push(t.success),e.push(va(t.err)),e.push(t.duration)):e.push(null,null,null,null,null,null)},a=e=>{if("me"===e.sender){if(e.buttons&&e.buttons.length>0)return`BUTTON ${e.buttons[0].payload||e.buttons[0].text}`;if(e.media&&e.media.length>0)return`MEDIA ${e.media[0].mediaUri}`}return e.messageText},r=(e,t)=>{t?(e.push(t.step),e.push(t.actual&&t.actual.sender),e.push(t.actual&&va(a(t.actual))),e.push(t.not),e.push(t.expected&&va(a(t.expected))),e.push(t.stepDuration),e.push(t.botDuration),e.push(va(t.err))):e.push(null,null,null,null,null,null,null,null)},o=[t.id,t.status,t.name];t.results&&t.results.length>0?t.results.forEach(t=>{const n=o.slice(0);s(n,t),t.steps&&t.steps.length>0?t.steps.forEach(t=>{const s=n.slice(0);r(s,t),e.push(s)}):(r(n,null),e.push(n))}):(s(o,null),r(o,null),e.push(o));const i=Ra(e);n.setHeader("Content-disposition",`attachment; filename="${M(t.name)}.csv"`),n.status(200).send(i)}else n.sendStatus(404).send("VALID REPORTER OPTIONS: json, csv");n.status(200).end()}).catch(e=>{ya(`Test Session lookup error - ${t} - ${e}`),n.sendStatus(404)})})({nameOrId:e.params.nameOrId,ctxFactory:t,req:e,res:s})})};const ka=B("botium-box-server-endpoints-performancebuild"),{isLoggedIn:ja,assertClient:Ma}=Us,Ba=(e,t)=>{return e.map(e=>`"${e.map(e=>q.isString(e)?e.replace(/"/g,'""'):e).join(`"${t||";"}"`)}"`).join("\r\n")},qa=(e,t)=>e.query[t]||e.query[t.toLowerCase()]||e.body&&e.body[t]||e.body&&e.body[t.toLowerCase()]||e.headers[`X-BOTIUM-${t}`],La=({ctxFactory:e,nameOrId:t,req:s,res:n})=>{if(!((e,t)=>{const s=(qa(e,"REPORTER")||"json").toLowerCase();return"json"===s||"csv"===s||(t.sendStatus(404).send("VALID REPORTER OPTIONS: json, csv"),!1)})(s,n))return;const a=e({request:s}),r=ja(a);a.db.query.performanceTestSessions({where:{OR:[{id:t},{name:t}]},orderBy:"createdAt_DESC",first:1},"{ id name client { id } }").then(e=>{if(!e)return n.sendStatus(404);const t=e[0],o=q.get(t,"client.id");Ma(o,r.clients),Fa(t.id,a,s,n)}).catch(e=>{ka(`Test Session lookup error - ${t} - ${e}`),n.sendStatus(404)})},Fa=async(e,t,s,n)=>{try{const a=(qa(s,"REPORTER")||"json").toLowerCase();if("json"===a){const{ts:s,output:r}=await Ja(e,t,a);n.setHeader("Content-Type","application/json"),n.setHeader("Content-disposition",`attachment; filename="${M(s.name)}.json"`),n.status(200).send(r)}else if("csv"===a){const{ts:s,output:r}=await Ja(e,t,a);n.setHeader("Content-Type","text/csv"),n.setHeader("Content-disposition",`attachment; filename="${M(s.name)}.csv"`),n.status(200).send(r)}}catch(t){ka(`Test Session lookup error - ${e} - ${t}`),n.sendStatus(404)}},Ja=async(e,t,s)=>{const n=await Wt.findSimplePerformanceTestSessionResults(t.db,e);if(!n)throw new Error(`Test Session ${e} not found`);if("json"===s)return n.results.map(e=>({execCount:e.execCount,execDurationMin:e.execDurationMin,execDurationMax:e.execDurationMax,execDurationSum:e.execDurationSum})),{ts:n,output:n};if("csv"===s){const e=[],t=["testSessionId","testSessionName","testResultId","testResultJobId","testResultStepIndex","testResultStepStartAt","testResultConvo","execResultCount","execResultDurationMin","execResultDurationMax","execResultDurationSum"];e.push(t);const s=(e,t)=>{ka(`result ${JSON.stringify(t)}`),t?(e.push(t.id),e.push(t.job.id),e.push(t.stepIndex),e.push(t.stepStartAt),e.push(t.convo),e.push(t.execCount),e.push(t.execDurationMin),e.push(t.execDurationMax),e.push(t.execDurationSum)):e.push(null,null,null,null,null,null,null,null),ka(`result line ${JSON.stringify(e)}`)},a=[n.id,n.name];return n.results&&n.results.length>0?n.results.forEach(t=>{const n=a.slice(0);s(n,t),e.push(n)}):(s(a,null),e.push(a)),{ts:n,output:Ba(e)}}};const{hasPermission:Ua}=Js,Ga={"/api/testset/":"TESTSETS_SELECT","/api/attachment/excel/":"TESTSETS_SELECT","/api/attachment/screenshot/":"TESTSESSIONS_SELECT","/api/triggerbuild/":"TESTSESSIONS_CREATE","/api/build/":"TESTSESSIONS_REPORTS","/api/performancebuild/":"PERFORMANCETESTSESSIONS_REPORTS","/api/log/":"TESTSESSIONS_REPORTS","/api/joblog/":"TESTSESSIONS_REPORTS","/api/transcript/":"TESTSESSIONS_REPORTS"};var Va=async(e,t)=>{await(async(e,t)=>{const s=t();(await s.db.query.chatbots({where:{}}," { id name capabilities { name type stringValue intValue booleanValue jsonValue } } ")).filter(e=>e.capabilities&&e.capabilities.filter(e=>"CONTAINERMODE"===e.name&&"fbpagereceiver"===e.stringValue).length>0).forEach(t=>{const n={app:e,endpoint:"/api/fbproxy/"+t.capabilities.find(e=>"FBPAGERECEIVER_ENDPOINT"===e.name).stringValue,verifytoken:t.capabilities.find(e=>"FBPAGERECEIVER_VERIFYTOKEN"===e.name).stringValue,accesstoken:t.capabilities.find(e=>"FBPAGERECEIVER_ACCESSTOKEN"===e.name).stringValue,redisurl:s.queueSettings.redis},a=t.capabilities.find(e=>"FBPAGERECEIVER_APPSECRET"===e.name);a&&a.stringValue?e.use(n.endpoint,P.json({verify:la.bind(null,a.stringValue)})):e.use(n.endpoint,P.json()),ua(n),pa(`Started FB Proxy for chatbot ${t.id}/${t.name}, endpoint: ${n.endpoint}`)})})(e,t),e.use(P.json({limit:"50mb",extended:!0})),e.use(["/api/testset/*","/api/attachment/*","/api/performancebuild/*","/api/build/*","/api/triggerbuild/*","/api/log/*","/api/joblog/*","/api/transcript/*"],((e,t,s,n)=>{if(!t.apiKey&&!t.user)return s.sendStatus(401);if(t.apiKey)return n();for(const e in Ga)if(t.baseUrl.startsWith(e)&&!Ua(t.user,Ga[e]))return s.sendStatus(401);return n()}).bind(null,t)),((e,t)=>{e.get("/api/testset/:id",async(e,s)=>{const n=e.params.id,a=t({request:e});try{const e=ha(a),t=await fa(a.db,n);if(t){const n=q.get(t,"client.id");ma(n,e.clients);const a=new $;t.scripts&&t.scripts.forEach(e=>{"SCRIPTING_TYPE_CONVO"===e.scriptType&&a.addFile(`scripts/${e.name}.convo.txt`,Buffer.alloc(e.script.length,e.script)),"SCRIPTING_TYPE_PCONVO"===e.scriptType&&a.addFile(`scripts/${e.name}.pconvo.txt`,Buffer.alloc(e.script.length,e.script)),"SCRIPTING_TYPE_UTTERANCES"===e.scriptType&&a.addFile(`scripts/${e.name}.utterances.txt`,Buffer.alloc(e.script.length,e.script)),"SCRIPTING_TYPE_SCRIPTING_MEMORY"===e.scriptType&&a.addFile(`scripts/${e.name}.scriptingmemory.txt`,Buffer.alloc(e.script.length,e.script))});const r=a.toBuffer();s.writeHead(200,{"Content-disposition":`attachment; filename="${t.name}.zip"`,"Content-Length":r.length}),s.end(r)}else Sa(`TestSet not found - ${n}`),s.sendStatus(404)}catch(e){Sa(`TestSet lookup error - ${n} - ${e}`),s.sendStatus(404)}})})(e,t),((e,t)=>{e.get("/api/attachment/excel/:id",async(e,s)=>{const n=e.params.id,a=t({request:e});try{const e=ga(a),t=await Wt.getExcel(a.db,n);if(t){const n=q.get(t,"testSet.client.id");ba(n,e.clients);const a=Buffer.from(t.filecontent,"base64");s.writeHead(200,{"Content-disposition":`attachment; filename="${t.filename}"`,"Content-Length":a.length}),s.end(a)}else Ta(`Excel not found - ${n}`),s.sendStatus(404)}catch(e){Ta(`Excel lookup error - ${n} - ${e}`),s.sendStatus(404)}}),e.get("/api/attachment/screenshot/:id",async(e,s)=>{const n=e.params.id,a=t({request:e});try{const e=ga(a),t=await Wt.getAttachment(a.db,n);if(t){const n=q.get(t,"testSessionTestCaseResult.testSession.client.id");ba(n,e.clients);const a=Buffer.from(t.base64,"base64");s.writeHead(200,{"Content-Disposition":`inline; filename="${t.name}"`,"Content-Type":t.mimeType,"Content-Length":a.length}),s.end(a)}else Ta(`Attachment not found - ${n}`),s.sendStatus(404)}catch(e){Ta(`Attachment lookup error - ${n} - ${e}`),s.sendStatus(404)}})})(e,t),xa(e,t),((e,t)=>{e.get("/api/performancebuild/:nameOrId",(e,s)=>{La({nameOrId:e.params.nameOrId,ctxFactory:t,req:e,res:s})})})(e,t),((e,t)=>{e.get("/api/version",(e,t)=>{t.status(200).send(H)})})(e)};L.config(),Y();const{GraphQLServer:Ha}=v,{RedisPubSub:Ya}=F,{Prisma:za}=J,{validateToken:Xa}=ks,{ExtractQueueSettings:Wa}=K,Ka=B("botium-box-server-index"),Qa=()=>new za({typeDefs:process.env.PRISMA_SCHEMA||"src/generated/prisma.graphql",endpoint:process.env.PRISMA_ENDPOINT,debug:process.env.PRISMA_DEBUG,secret:process.env.PRISMA_SECRET}),Za=(e,t)=>{e&&console.log(e),t&&console.log(t),process.exit(1)};let er=Wa();Ka(`connecting to Botium queue '${JSON.stringify(er)}'`);const tr=S.createQueue(er);tr.setMaxListeners(1e3),tr.watchStuckJobs(),tr.on("error",e=>{console.log(`ERROR on queue '${JSON.stringify(er)}':`,e)}),process.env.BOTIUM_TEMPDIR=process.env.BOTIUM_TEMPDIR||"./botiumwork";try{a.sync(process.env.BOTIUM_TEMPDIR),Ka(`Using BOTIUM_TEMPDIR ${process.env.BOTIUM_TEMPDIR}`)}catch(e){Za(`ERROR verifying BOTIUM_TEMPDIR '${process.env.BOTIUM_TEMPDIR}':`,e)}process.env.TESTSETDIR=process.env.TESTSETDIR||"./testsets";try{a.sync(process.env.TESTSETDIR),Ka(`Using TESTSETDIR ${process.env.TESTSETDIR}`)}catch(e){Za(`ERROR verifying TESTSETDIR '${process.env.TESTSETDIR}':`,e)}xt(Qa());const sr=new Ya({connection:er.redis});sr.ee&&sr.ee.setMaxListeners&&sr.ee.setMaxListeners(0);const nr=new X(43200),ar=e=>({...e||{},db:Qa(),queueConnector:tr,queueSettings:er,pubsub:sr,chartsCache:nr});Ka(`Using Prisma Endpoint ${process.env.PRISMA_ENDPOINT}`);const rr=new Ha({typeDefs:process.env.GRAPHQL_SCHEMA||"./src/schema.graphql",resolvers:Yn,resolverValidationOptions:{requireResolversForResolveType:!1},schemaDirectives:aa,context:ar,middlewares:[async(e,t,s,n,a)=>{try{const r=await e(t,s,n,a);return r instanceof Error&&Ka(r),r}catch(e){throw Ka(e),e}}]}),or={port:process.env.PORT||4e3,endpoint:"/graphql",subscriptions:{path:"/subscriptions",onConnect:async(e,t,s)=>{if(e.Authorization){return{user:await Xa(e.Authorization,Qa())}}throw new Error("Missing auth token!")},onDisconnect:(e,t)=>{}},playground:"/playground"};(async()=>{await Rn.loadStrategy(ar),await da(rr.express,0,ar),await Va(rr.express,ar),rr.start(or,({port:e})=>{const t=process.env.BOTIUMBOX_STATIC_PATH?g.resolve(process.env.BOTIUMBOX_STATIC_PATH):g.resolve(g.join(__dirname,"../../botium-box-client/build"));rr.express.use(G()),rr.express.use("/",U.static(t)),console.log(`Server started, listening on port ${e} for incoming requests, static files served from ${t}`)})})(),new class{constructor(e){this.ctxFactory=e}start(){const e=this.ctxFactory();e.queueConnector.process("agent.heartbeat",1,(t,s)=>{ms("agent.heartbeat: "+JSON.stringify(t.data)),(async(e,t,s)=>{try{const{count:n}=await e.db.mutation.updateManyAgents({data:{heartbeat:new Date(Date.now()).toISOString()},where:{name:t.data.name}});if(!(n>0)){const e=`Agent ${t.data.name} not configured`;return Ss(e),s(e)}s()}catch(e){s(e)}})(e,t,s)}),e.queueConnector.process("agent.register",1,(t,s)=>{ms("agent.register: "+JSON.stringify(t.data)),(async(e,t,s)=>{const n=process.env.BOTIUMBOX_AGENTREGISTRATION&&"AUTO"===process.env.BOTIUMBOX_AGENTREGISTRATION||!0;try{let a=await Wt.findAgentFromJobData(e.db,t);if(!a){if(!n){const e=`Agent ${t.data.name} not configured`;return hs(e),s(e)}hs(`Agent ${t.data.name} not yet registered, automatically registering.`),a=await e.db.mutation.createAgent({data:{name:t.data.name}})}let r=await Wt.findAgentFromName(e.db,"Default Agent");const o=Wt.combineBotiumCapabilities(Wt.composeBotiumCapabilities(r&&r.capabilities||[]),Wt.composeBotiumCapabilities(a.capabilities)),i={debug:!!(a.debug||r&&r.debug),botium:{Capabilities:o}};hs(`Agent ${t.data.name} registered, config: ${JSON.stringify(i)}`),s(null,i)}catch(e){hs(`Agent ${t.data.name} registration failed: ${R.inspect(e)}`),s(e)}})(e,t,s)}),e.queueConnector.process("box.createprocessingjobs",1,(t,s)=>{ms("box.createprocessingjobs: "+JSON.stringify(t.data)),Es(e,t.data).then(()=>s()).catch(s)}),e.queueConnector.process("box.createperformanceprocessingjobs",1,(t,s)=>{ms("box.createperformanceprocessingjobs: "+JSON.stringify(t.data)),fs(e,t.data).then(()=>s()).catch(s)}),e.queueConnector.on("error",e=>{ms("ERROR connecting to queue:"),ms(e)}),e.queueConnector.on("job failed attempt",(e,t)=>{S.Job.get(e,(s,n)=>{s||(n=n.toJSON(),ms(`Job ${e}/${n.type} failed attempt, ${JSON.stringify(n.attempts)} - Err: ${t}`))})}).on("job failed",(e,t)=>{S.Job.get(e,(s,n)=>{s||(n=n.toJSON(),ms(`Job ${e}/${n.type} failed finally, ${JSON.stringify(n.attempts)} - Err: ${t} - Job Data: ${JSON.stringify(n.data)}`))})}),e.queueConnector.process("process.progress",1,async(t,s)=>{try{await Is(e,t.data),s()}catch(e){s(e)}}),e.queueConnector.process("process.log",1,async(t,s)=>{try{await vs(e,t.data),s()}catch(e){s(e)}}),e.queueConnector.process("process.ready.success",1,async(t,s)=>{ms("process.ready.success: "+JSON.stringify(t.data));try{await ws(e,t.data),await Os(e,t.data),s()}catch(e){s(e)}}),e.queueConnector.process("process.ready.failed",1,async(t,s)=>{ms("process.ready.failed: "+JSON.stringify(t.data));try{await Cs(e,t.data),await Os(e,t.data),s()}catch(e){s(e)}}),e.queueConnector.process("performanceprocess.started",1,async(t,s)=>{ms("performanceprocess.started: "+JSON.stringify(t.data));try{await Ts(e,t.data),s()}catch(e){s(e)}}),e.queueConnector.process("performanceprocess.progress",1,async(t,s)=>{ms("performanceprocess.progress: "+JSON.stringify(t.data));try{await gs(e,t.data),s()}catch(e){s(e)}}),e.queueConnector.process("performanceprocess.ready.success",1,async(t,s)=>{ms("performanceprocess.ready.success: "+JSON.stringify(t.data));try{await ys(e,t.data),s()}catch(e){s(e)}}),e.queueConnector.process("performanceprocess.ready.failed",1,async(t,s)=>{ms("performanceprocess.ready.failed "+JSON.stringify(t.data));try{await bs(e,t.data),s()}catch(e){s(e)}})}}(ar).start(),new class{constructor(e){this.ctxFactory=e}start(){const e=this.ctxFactory();Ds(e)}}(ar).start(),zt.startListeners(ar()),process.on("uncaughtException",e=>{console.log("UNCAUGHTEXCEPTION",e),console.log(e.stack)}),process.on("warning",e=>{Ka("WARNING",e)});return{}});
